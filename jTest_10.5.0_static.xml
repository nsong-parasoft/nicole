<?xml version='1.0' encoding='UTF-8'?>
<ResultsSession buildId="Default Project-2020-11-19" climode="true" execEnv="win32_x86_64" hasViols="true" id="1607421859422" lang="en_US" machine="GOPHER" prjModule="com.parasoft:demo" project="Default Project" tag="${scontrol_branch}-win32_x86_64" time="2020-11-19T15:39:11+01:00" toolDispName="Jtest" toolId="jtest" toolName="DTP Engine for Java" toolVer="2020.2.0" user="tpieczkowski">
   <TestConfig machine="GOPHER" name="Recommended Rules" pseudoUrl="builtin://Recommended Rules" user="tpieczkowski" />
   <Authors>
      <Author id="dev1" name="tpieczkowski" />
      <Author id="dev2" name="Mark Wilson" />
   </Authors>
   <Analyzers>
      <Analyzer id="com.parasoft.jtest.flowanalyzer" name="Parasoft Java Flow Analyzer" ver="10.5.0.20201013B2287" />
      <Analyzer id="com.parasoft.jtest.standards.dupcode" name="Code Duplication Detector" ver="10.5.0.20201016" />
      <Analyzer id="com.parasoft.jtest.globals.ioc.springxml.analyzer.IOCAnalyzer" name="Parasoft IOC Analyzer" ver="10.5.0.20201019" />
      <Analyzer id="com.parasoft.jtest.standards.checkers.xml" name="Parasoft XML Static Analyzer" ver="10.5.0.20201019" />
      <Analyzer id="com.parasoft.xtest.dupcode.parser" name="Code Duplication Parser" ver="10.5.0.20201016" />
      <Analyzer id="com.parasoft.jtest.standards.checkers.java" name="Parasoft Java Static Analyzer" ver="10.5.0.20201019" />
      <Analyzer id="com.parasoft.jtest.standards.checkers.prop" name="Parasoft Properties Static Analyzer" ver="10.5.0.20201019" />
      <Analyzer id="com.parasoft.jtest.standards.metrics.analyzer" name="Parasoft Metrics Analyzer" ver="10.5.0.20201019" />
      <Analyzer id="com.parasoft.jtest.standards.checkers.rulewizard" name="Parasoft RuleWizard Static Analyzer" ver="10.5.0.20201019" />
   </Analyzers>
   <VersionInfos>
      <StorageInfo ownerId="" resultId="ISetupResult" ver="1" ver10x="1" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IMetricsViolation" ver="2" ver10x="1" />
      <StorageInfo ownerId="" resultId="IExecutionViolation" ver="1" ver10x="1" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IDupCodeViolation" ver="2" ver10x="1" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IFlowAnalysisViolation" ver="2" ver10x="1" />
      <StorageInfo ownerId="" resultId="IFunctionalViolation" ver="1" ver10x="1" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="ICodingStandardsViolation" ver="2" ver10x="1" />
      <StorageInfo ownerId="" resultId="IUnitTestViolation" ver="1" ver10x="1" />
   </VersionInfos>
   <Goals tsks="57">
      
   </Goals>
   <Metrics>
      <Metric avg="1.626" disp="true" id="METRIC.CC" max="10" min="1" name="McCabe Cyclomatic Complexity" noi="310" stddev="1.224">
         <Info avg="1.626" disp="true" elem="com.parasoft:demo" max="10" min="1" noi="310" stddev="1.224" />
      </Metric>
      <Metric avg="0.377" disp="true" id="METRIC.NBD" max="8" min="0" name="Nested Blocks Depth" noi="310" stddev="0.78">
         <Info avg="0.377" disp="true" elem="com.parasoft:demo" max="8" min="0" noi="310" stddev="0.78" />
      </Metric>
      <Metric avg="56.879" disp="true" id="METRIC.NOPLIF" max="396" min="8" name="Physical Lines in Files" noi="66" stddev="55.785">
         <Info avg="56.879" disp="true" elem="com.parasoft:demo" max="396" min="8" noi="66" stddev="55.785" />
      </Metric>
      <Metric avg="6.594" disp="true" id="METRIC.NOSLIM" max="38" min="1" name="Source Lines in Methods" noi="310" stddev="5.651">
         <Info avg="6.594" disp="true" elem="com.parasoft:demo" max="38" min="1" noi="310" stddev="5.651" />
      </Metric>
   </Metrics>
   <Scope>
      <Repositories />
      <Locations>
         <Loc hash="-2121569923" locRef="1" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/eval/Simple.java" totLns="68" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/eval/Simple.java" />
         <Loc hash="-32679949" locRef="2" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" />
         <Loc hash="1088242968" locRef="3" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/AlwaysCloseImages.java" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" />
         <Loc hash="-89489575" locRef="4" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/AlwaysCloseLogging.java" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/flowanalysis/AlwaysCloseLogging.java" />
         <Loc hash="1710944294" locRef="5" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" />
         <Loc hash="-1842798386" locRef="6" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" />
         <Loc hash="-69784133" locRef="7" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" />
         <Loc hash="-1630627415" locRef="8" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" />
         <Loc hash="726838777" locRef="9" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/DereferenceBeforeNullCheck.java" totLns="55" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/flowanalysis/DereferenceBeforeNullCheck.java" />
         <Loc hash="-1891737324" locRef="10" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/DivisionByZero.java" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" />
         <Loc hash="686946442" locRef="11" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/FilesInjection.java" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/flowanalysis/FilesInjection.java" />
         <Loc hash="438092426" locRef="12" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" />
         <Loc hash="1816383512" locRef="13" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" />
         <Loc hash="-417185865" locRef="14" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/InefficientMapRemoval.java" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" />
         <Loc hash="-359565455" locRef="15" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/InefficientMapUsage.java" totLns="37" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" />
         <Loc hash="1862789318" locRef="16" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/SQLInjection.java" totLns="58" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/flowanalysis/SQLInjection.java" />
         <Loc hash="-152258803" locRef="17" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/SystemInjection.java" totLns="55" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/flowanalysis/SystemInjection.java" />
         <Loc hash="1709312165" locRef="18" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/UnreachableCode.java" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/flowanalysis/UnreachableCode.java" />
         <Loc hash="-635152949" locRef="19" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" />
         <Loc hash="2110246917" locRef="20" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/UseBeforeInitialization.java" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" />
         <Loc hash="565976681" locRef="21" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/WebApplication.java" totLns="51" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/flowanalysis/WebApplication.java" />
         <Loc hash="-367659159" locRef="22" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/XMLInjection.java" totLns="39" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/flowanalysis/XMLInjection.java" />
         <Loc hash="635578452" locRef="23" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/np/DatabaseObject.java" totLns="63" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" />
         <Loc hash="1118499003" locRef="24" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" totLns="57" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" />
         <Loc hash="796982299" locRef="25" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/np/MessageFormatter.java" totLns="15" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/flowanalysis/np/MessageFormatter.java" />
         <Loc hash="1067996598" locRef="26" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/np/MyDictionary.java" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/flowanalysis/np/MyDictionary.java" />
         <Loc hash="-51902665" locRef="27" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/np/NullPointer.java" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/flowanalysis/np/NullPointer.java" />
         <Loc hash="13842231" locRef="28" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/junit/ChoosingConstructor.java" totLns="59" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/junit/ChoosingConstructor.java" />
         <Loc hash="1460192582" locRef="29" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/junit/CustomMoney.java" totLns="15" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/junit/CustomMoney.java" />
         <Loc hash="-47973091" locRef="30" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/junit/IMoney.java" totLns="52" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/junit/IMoney.java" />
         <Loc hash="1622384320" locRef="31" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/junit/IntegerComparator.java" totLns="15" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/junit/IntegerComparator.java" />
         <Loc hash="-1765121077" locRef="32" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/junit/Money.java" totLns="91" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/junit/Money.java" />
         <Loc hash="-113332437" locRef="33" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/junit/MoneyBag.java" totLns="140" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/junit/MoneyBag.java" />
         <Loc hash="1434598914" locRef="34" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/junit/NaiveStringBuilder.java" totLns="26" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/junit/NaiveStringBuilder.java" />
         <Loc hash="1554031451" locRef="35" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/junit/SimpleObjectHandler.java" totLns="39" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/junit/SimpleObjectHandler.java" />
         <Loc hash="-1994237948" locRef="36" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/metrics/MetricsExample.java" totLns="52" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/metrics/MetricsExample.java" />
         <Loc hash="1497176251" locRef="37" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/mock/CharacterReader.java" totLns="57" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/mock/CharacterReader.java" />
         <Loc hash="-458905718" locRef="38" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/mock/ConstructorExample.java" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/mock/ConstructorExample.java" />
         <Loc hash="-220867651" locRef="39" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/mock/FileExample.java" totLns="35" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/mock/FileExample.java" />
         <Loc hash="-141343473" locRef="40" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/mock/Interpreter.java" totLns="28" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/mock/Interpreter.java" />
         <Loc hash="-762775565" locRef="41" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/mock/MultiSourceCharacterReader.java" totLns="34" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/mock/MultiSourceCharacterReader.java" />
         <Loc hash="-251506569" locRef="42" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/nbank/AbstractTransaction.java" totLns="22" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/nbank/AbstractTransaction.java" />
         <Loc hash="-2109136904" locRef="43" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/nbank/Account.java" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/nbank/Account.java" />
         <Loc hash="-1683403269" locRef="44" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/nbank/Bank.java" totLns="82" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/nbank/Bank.java" />
         <Loc hash="2120971007" locRef="45" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/nbank/BankState.java" totLns="22" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/nbank/BankState.java" />
         <Loc hash="-368683629" locRef="46" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/nbank/ConnectionException.java" totLns="8" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/nbank/ConnectionException.java" />
         <Loc hash="3241407" locRef="47" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/nbank/CreditCard.java" totLns="199" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/nbank/CreditCard.java" />
         <Loc hash="2046383933" locRef="48" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/nbank/Customer.java" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/nbank/Customer.java" />
         <Loc hash="-249228641" locRef="49" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/nbank/DepositTransaction.java" totLns="24" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/nbank/DepositTransaction.java" />
         <Loc hash="1948271967" locRef="50" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/nbank/ICreditAgency.java" totLns="8" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/nbank/ICreditAgency.java" />
         <Loc hash="1398902534" locRef="51" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/nbank/ITransaction.java" totLns="25" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/nbank/ITransaction.java" />
         <Loc hash="-179143843" locRef="52" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/nbank/LogAccountInfo.java" totLns="48" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/nbank/LogAccountInfo.java" />
         <Loc hash="-1206559161" locRef="53" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/nbank/WithdrawalTransaction.java" totLns="24" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/nbank/WithdrawalTransaction.java" />
         <Loc hash="-981357238" locRef="54" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/queue/Queue.java" totLns="83" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/queue/Queue.java" />
         <Loc hash="-1145404863" locRef="55" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/security/InputValidation.java" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/security/InputValidation.java" />
         <Loc hash="-1999350871" locRef="56" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/servlets/ExampleServlet.java" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/servlets/ExampleServlet.java" />
         <Loc hash="1553680728" locRef="57" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/stackmachine/AbstractStackMachine.java" totLns="123" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/stackmachine/AbstractStackMachine.java" />
         <Loc hash="-1581767335" locRef="58" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/stackmachine/CommandLineStackMachine.java" totLns="147" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" />
         <Loc hash="1782082961" locRef="59" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/stackmachine/CustomListRenderer.java" totLns="30" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/stackmachine/CustomListRenderer.java" />
         <Loc hash="-726989549" locRef="60" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/stackmachine/FifoStackMachine.java" totLns="39" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/stackmachine/FifoStackMachine.java" />
         <Loc hash="-1559173645" locRef="61" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/stackmachine/LifoStackMachine.java" totLns="39" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/stackmachine/LifoStackMachine.java" />
         <Loc hash="-339219917" locRef="62" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/stackmachine/RunnableStackMachine.java" totLns="396" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" />
         <Loc hash="963698942" locRef="63" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/stackmachine/StackInterface.java" totLns="26" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/stackmachine/StackInterface.java" />
         <Loc hash="-1082942404" locRef="64" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/stackmachine/StackList.java" totLns="100" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/stackmachine/StackList.java" />
         <Loc hash="-2129128806" locRef="65" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/suppress/AllFileSuppress.java" totLns="13" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/suppress/AllFileSuppress.java" />
         <Loc hash="2004133938" locRef="66" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/suppress/Example.java" totLns="10" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/src/main/java/examples/suppress/Example.java" />
         <Loc hash="836988928" locRef="67" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="META-INF/MANIFEST.MF" totLns="3" uri="file://GOPHER/D:/Products/jtest2020_2_release/jtest/examples/demo/META-INF/MANIFEST.MF" />
      </Locations>
   </Scope>
   
  <SetupProblems />

   <CodingStandards ownerId="com.parasoft.xtest.checkers.api.standards" time="0:00:04">
      <Projects>
         <Project bdCheckedFiles="0" bdTotalFiles="0" checkedFiles="67" checkedLns="3757" id="com.parasoft:demo" name="com.parasoft:demo" qfixErrs="0" suppErrs="0" totErrs="67" totFiles="67" totLns="3757" />
      </Projects>
      
      
      <Rules>
         <CategoriesList>
            <Category authTot="0;0;" authUrg="0;0;" desc="Flow Analysis" name="BD" rules="74" total="0">
               <Category authTot="0;0;" authUrg="0;0;" desc="API" name="BD.API" rules="3" total="0" />
               <Category authTot="9;2;" authUrg="9;2;" desc="Possible Bugs" name="BD.PB" rules="23" total="11" />
               <Category authTot="11;3;" authUrg="11;3;" desc="Resources" name="BD.RES" rules="2" total="14" />
               <Category authTot="0;0;" authUrg="0;0;" desc="Threads &amp; Synchronization" name="BD.TRS" rules="6" total="0" />
               <Category authTot="4;0;" authUrg="4;0;" desc="Collections" name="BD.CO" rules="1" total="4" />
               <Category authTot="11;0;" authUrg="11;0;" desc="Exceptions" name="BD.EXCEPT" rules="1" total="11" />
            </Category>
            <Category authTot="0;0;" authUrg="0;0;" desc="JavaBeans" name="BEAN" rules="5" total="0" />
            <Category authTot="0;0;" authUrg="0;0;" desc="Code Duplication Detection" name="CDD" rules="6" total="0" />
            <Category authTot="0;0;" authUrg="0;0;" desc="Coding Conventions" name="CODSTA" rules="111" total="0">
               <Category authTot="0;0;" authUrg="0;0;" desc="Organization" name="CODSTA.ORG" rules="15" total="0" />
               <Category authTot="0;0;" authUrg="0;0;" desc="Error-Prone Coding" name="CODSTA.EPC" rules="14" total="0" />
               <Category authTot="0;0;" authUrg="0;0;" desc="Readability" name="CODSTA.READ" rules="39" total="0" />
               <Category authTot="0;0;" authUrg="0;0;" desc="Overriding and Implementing Methods" name="CODSTA.OIM" rules="8" total="0" />
            </Category>
            <Category authTot="0;0;" authUrg="0;0;" desc="Enterprise JavaBeans" name="EJB" rules="62" total="0">
               <Category authTot="0;0;" authUrg="0;0;" desc="Enterprise JavaBeans 3" name="EJB.EJB3" rules="19" total="0" />
            </Category>
            <Category authTot="0;0;" authUrg="0;0;" desc="Exceptions" name="EXCEPT" rules="19" total="0" />
            <Category authTot="0;0;" authUrg="0;0;" desc="Garbage Collection" name="GC" rules="12" total="0" />
            <Category authTot="0;0;" authUrg="0;0;" desc="Hibernate Framework" name="HIBERNATE" rules="13" total="0" />
            <Category authTot="0;0;" authUrg="0;0;" desc="Initialization" name="INIT" rules="14" total="0" />
            <Category authTot="0;1;" authUrg="0;1;" desc="Java Database Connectivity" name="JDBC" rules="10" total="1" />
            <Category authTot="1;0;" authUrg="1;0;" desc="Metric" name="METRIC" rules="50" total="1" />
            <Category authTot="0;0;" authUrg="0;0;" desc="Naming Conventions" name="NAMING" rules="38" total="0" />
            <Category authTot="0;0;" authUrg="0;0;" desc="Object Oriented Programming" name="OOP" rules="35" total="0" />
            <Category authTot="3;0;" authUrg="0;0;" desc="Optimization" name="OPT" rules="56" total="3" />
            <Category authTot="0;0;" authUrg="0;0;" desc="Possible Bugs" name="PB" rules="140" total="0">
               <Category authTot="1;0;" authUrg="1;0;" desc="Typographical Errors" name="PB.TYPO" rules="12" total="1" />
               <Category authTot="3;0;" authUrg="2;0;" desc="Useless Code" name="PB.USC" rules="12" total="3" />
               <Category authTot="0;0;" authUrg="0;0;" desc="Numerical Errors" name="PB.NUM" rules="16" total="0" />
               <Category authTot="0;0;" authUrg="0;0;" desc="API Usage and Implementation" name="PB.API" rules="25" total="0" />
               <Category authTot="3;0;" authUrg="2;0;" desc="Logical Errors" name="PB.LOGIC" rules="18" total="3" />
               <Category authTot="2;0;" authUrg="2;0;" desc="Confusing or Unintended Behavior" name="PB.CUB" rules="32" total="2" />
               <Category authTot="0;0;" authUrg="0;0;" desc="Runtime Exceptions" name="PB.RE" rules="17" total="0" />
            </Category>
            <Category authTot="0;0;" authUrg="0;0;" desc="Property Files" name="PROPS" rules="17" total="0" />
            <Category authTot="0;0;" authUrg="0;0;" desc="Serialization" name="SERIAL" rules="18" total="0" />
            <Category authTot="0;0;" authUrg="0;0;" desc="Servlets" name="SERVLET" rules="17" total="0" />
            <Category authTot="0;0;" authUrg="0;0;" desc="Spring Framework" name="SPRING" rules="14" total="0" />
            <Category authTot="0;0;" authUrg="0;0;" desc="Struts Framework" name="STRUTS" rules="30" total="0" />
            <Category authTot="0;0;" authUrg="0;0;" desc="Threads &amp; Synchronization" name="TRS" rules="52" total="0" />
            <Category authTot="12;1;" authUrg="7;1;" desc="Unused Code" name="UC" rules="28" total="13" />
         </CategoriesList>
         <RulesList>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;" authUrg="0;0;" cat="BD.API" desc="Make sure implementation of Object.equals(Object) properly handles null values" id="BD.API.EQNULL" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;" authUrg="0;0;" cat="BD.API" desc="Make sure implementation of Object.equals(Object) is reflexive" id="BD.API.EQREFL" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="4;0;" authUrg="4;0;" cat="BD.CO" desc="Do not modify collection while iterating over it" id="BD.CO.ITMOD" sev="1" total="4" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="11;0;" authUrg="11;0;" cat="BD.EXCEPT" desc="Avoid NullPointerException" id="BD.EXCEPT.NP" sev="1" total="11" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;" authUrg="0;0;" cat="BD.PB" desc="Avoid unvalidated input in array indexes" id="BD.PB.ARRAYINP" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="1;0;" authUrg="1;0;" cat="BD.PB" desc="Avoid use before explicit initialization" id="BD.PB.NOTEXPLINIT" sev="1" total="1" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="1;0;" authUrg="1;0;" cat="BD.PB" desc="Avoid use of fields before initialization in constructors and static initializers" id="BD.PB.NOTINITCTOR" sev="1" total="1" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;" authUrg="0;0;" cat="BD.PB" desc="Avoid overwriting method parameters before each use" id="BD.PB.POVR" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="1;0;" authUrg="1;0;" cat="BD.PB" desc="Avoid division by zero" id="BD.PB.ZERO" sev="1" total="1" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;" authUrg="0;0;" cat="BD.PB" desc="Avoid accessing arrays out of bounds" id="BD.PB.ARRAY" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;" authUrg="0;0;" cat="BD.PB" desc="Avoid incorrect shift operations" id="BD.PB.BADSHIFT" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="6;2;" authUrg="6;2;" cat="BD.PB" desc="Avoid conditions that always evaluate to the same value" id="BD.PB.CC" sev="2" total="8" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;" authUrg="0;0;" cat="BD.RES" desc="Do not use resources that have been freed" id="BD.RES.FREE" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="11;3;" authUrg="11;3;" cat="BD.RES" desc="Ensure resources are deallocated" id="BD.RES.LEAKS" sev="1" total="14" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;" authUrg="0;0;" cat="BD.TRS" desc="Avoid double locking" id="BD.TRS.DLOCK" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;" authUrg="0;0;" cat="BD.TRS" desc="Do not abandon unreleased locks" id="BD.TRS.LOCK" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;" authUrg="0;0;" cat="BD.TRS" desc="Do not acquire locks in different order" id="BD.TRS.ORDER" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;" authUrg="0;0;" cat="BD.TRS" desc="Do not use blocking methods while holding a lock" id="BD.TRS.TSHL" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="BEAN" desc="Use appropriate signatures for listener method names in JavaBean classes" id="BEAN.BLNC" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="BEAN" desc="Ensure that JavaBean classes implement 'java.io.Serializable'" id="BEAN.SERIALIZABLE" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.dupcode" authTot="0;0;" authUrg="0;0;" cat="CDD" desc="Avoid method duplication" id="CDD.DUPM" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.dupcode" authTot="0;0;" authUrg="0;0;" cat="CDD" desc="Avoid class duplication" id="CDD.DUPT" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="CODSTA.EPC" desc="Call 'super.clone()' in all 'clone()' methods" id="CODSTA.EPC.SCLONE" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="CODSTA.EPC" desc="Do not use constructors in the 'clone()' method" id="CODSTA.EPC.CLNC" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="CODSTA.EPC" desc="Do not call an &quot;abstract&quot; method from a constructor in an &quot;abstract&quot; class" id="CODSTA.EPC.NCAC" sev="4" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="CODSTA.OIM" desc="Use the 'clone()' method only to implement 'Cloneable' interface" id="CODSTA.OIM.CLONE2" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="CODSTA.OIM" desc="Ensure 'clone()' method of non-final Cloneable class declared to throw 'CloneNotSupportedException'" id="CODSTA.OIM.CLONET" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="CODSTA.ORG" desc="Ensure all types have a non default package name" id="CODSTA.ORG.UNDPN" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="CODSTA.READ" desc="Avoid nested assignments or assignments embedded in other expressions" id="CODSTA.READ.NEA" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="CODSTA.READ" desc="Do not declare multiple variables of different types in one statement" id="CODSTA.READ.VDT" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="EJB" desc="Declare bean classes &quot;public&quot;" id="EJB.CDP" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="EJB" desc="Do not declare bean classes as &quot;abstract&quot;" id="EJB.CNDA" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="EJB" desc="Do not declare bean classes as &quot;final&quot;" id="EJB.CNDF" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="EJB" desc="Declare 'ejbCreate()' methods  &quot;public&quot;, but neither &quot;static&quot; nor &quot;final&quot;" id="EJB.CRTE" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="EJB" desc="Implement a no-argument 'ejbCreate()' method for all Message-driven bean classes" id="EJB.MDBC" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="EJB" desc="Do not define 'finalize()' method in bean classes" id="EJB.MNDF" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="EJB" desc="Declare a &quot;public&quot; constructor that takes no parameters in bean classes" id="EJB.NFDC" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="EJB" desc="Declare 'ejbPostCreate()' &quot;public&quot; and neither &quot;static&quot; nor &quot;final&quot;" id="EJB.PCRTE" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="EJB" desc="Make the return type &quot;void&quot; for SessionBeans or MessageDrivenBeans' 'ejbCreate()' methods" id="EJB.RTC" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="EJB" desc="Make the return type &quot;void&quot; for the 'ejbPostCreate()' method" id="EJB.RTP" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="EJB" desc="Avoid passing the &quot;this&quot; reference as an argument" id="EJB.THISARG" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="EJB" desc="Do not return &quot;this&quot;" id="EJB.THISRET" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="EJB" desc="Do not access or modify security configuration objects" id="EJB.AMSC" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="EJB" desc="Declare all &quot;static&quot; fields in EJB bean classes &quot;final&quot;" id="EJB.NFS" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="EJB" desc="The return type of EJB finder methods should be the primary key or a collection of primary keys" id="EJB.RT" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="EJB" desc="Do not set or create a new SecurityManager in EJBs" id="EJB.SMSN" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="EJB" desc="Avoid starting, stopping, or managing threads in any way in bean classes" id="EJB.THREAD" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="EJB" desc="Do not throw 'java.rmi.RemoteException' in a bean's local interface and local home interface" id="EJB.RILH" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="EJB.EJB3" desc="Call 'InvocationContext.proceed()' from @AroundInvoke methods" id="EJB.EJB3.CPIM" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="EJB.EJB3" desc="Ensure instance variables of @Stateful beans are Serializable" id="EJB.EJB3.SIVS" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="EXCEPT" desc="Do not throw exceptions from the constructors of exception classes" id="EXCEPT.TEFEC" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="EXCEPT" desc="Do not abuse exceptions as flow control statements" id="EXCEPT.AEFC" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="EXCEPT" desc="Do not use instanceof in a catch block to check the exception type" id="EXCEPT.AIOC" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="EXCEPT" desc="Always chain thrown exceptions" id="EXCEPT.CTE" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="EXCEPT" desc="Do not throw exception types which are too general or are unchecked exceptions" id="EXCEPT.NTERR" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="GC" desc="Do not use 'finalize()' methods to unregister listeners" id="GC.FM" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="GC" desc="Do not call 'finalize()' explicitly" id="GC.NCF" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="GC" desc="Prevent potential memory leaks in ObjectOutputStreams by calling 'reset()'" id="GC.OSTM" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="GC" desc="Call 'super.finalize()' from 'finalize()'" id="GC.FCF" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="GC" desc="Call 'super.finalize()' in the &quot;finally&quot; block of 'finalize()' methods" id="GC.IFF" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;0;" authUrg="0;0;" cat="HIBERNATE" desc="Avoid storing unencrypted Hibernate usernames and passwords in 'web.xml' files" id="HIBERNATE.UPWD" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="INIT" desc="Avoid uninitialized reads of fields before or during constructor execution" id="INIT.UIRC" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="INIT" desc="Do not use a &quot;static&quot; initializer that creates an instance of the current class before all &quot;static final&quot; fields are assigned" id="INIT.SICUI" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="INIT" desc="Avoid explicitly initializing fields which have already been initialized by a superclass' constructor" id="INIT.ADI" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="INIT" desc="Do not use initialization circularities for fields" id="INIT.IC" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="INIT" desc="Do not use non-final &quot;static&quot; fields during the initialization" id="INIT.NFS" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;1;" authUrg="0;1;" cat="JDBC" desc="Ensure index is valid in JDBC method invocation" id="JDBC.BRSA" sev="1" total="1" />
            <Rule analyzer="com.parasoft.jtest.standards.metrics.analyzer" authTot="0;0;" authUrg="0;0;" cat="METRIC" desc="McCabe Cyclomatic Complexity" id="METRIC.CC" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.metrics.analyzer" authTot="1;0;" authUrg="1;0;" cat="METRIC" desc="Nested Blocks Depth" id="METRIC.NBD" sev="3" total="1" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="NAMING" desc="Do not declare types with the same name as types in the Java platform" id="NAMING.DJLO" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="NAMING" desc="Avoid using potential Java keywords as identifiers" id="NAMING.ID" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="NAMING" desc="Do not use a package name that is reserved by Sun" id="NAMING.RPKG" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="NAMING" desc="Avoid using dollar signs in names" id="NAMING.DSN" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="NAMING" desc="Do not use variables with identical names or names that differ only in case" id="NAMING.UUVN" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="OOP" desc="Do not hide inherited fields" id="OOP.AHF" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="OOP" desc="Do not hide inherited &quot;static&quot; member methods" id="OOP.AHSM" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="OPT" desc="Do not use a &quot;private&quot; field that is accessed in only one method; change it to a local variable" id="OPT.CTLV" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="OPT" desc="Declare &quot;final&quot; fields with a known compile time value as &quot;static&quot;" id="OPT.NSF" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="3;0;" authUrg="0;0;" cat="OPT" desc="Declare member classes &quot;static&quot; if possible" id="OPT.SI" sev="3" total="3" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="OPT" desc="Avoid unnecessary casting" id="OPT.UNC" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="PB" desc="Ensure that exactly one type has the same name as the file name" id="PB.OCSF" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB" desc="Place &quot;default&quot; as the last case of the &quot;switch&quot; statement" id="PB.PDCL" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB" desc="Provide &quot;default:&quot; for each &quot;switch&quot; statement" id="PB.PDS" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.API" desc="Do not call the 'next' method from the 'hasNext' method of an Iterator" id="PB.API.HNCN" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.API" desc="Do not use &quot;URL&quot; objects in &quot;Collections&quot; or &quot;Maps&quot;" id="PB.API.IUMS" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="PB.API" desc="Do not call 'setSize()' in 'ComponentListener.componentResized()'" id="PB.API.DNCSS" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.API" desc="Do not create an empty JarFile entry or an empty ZipFile entry" id="PB.API.EJF" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.API" desc="Avoid calling 'equals(null)'" id="PB.API.EQNL" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.API" desc="Ensure that all types which are used as keys in Sets and Maps override the 'equals()' and 'hashCode()' methods" id="PB.API.KOEH" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="PB.API" desc="Do not overload the 'finalize()' method" id="PB.API.OF" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="PB.API" desc="Avoid using &quot;.&quot; as a regular expression in 'String.replaceAll()' and 'String.replaceFirst()'" id="PB.API.REP" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="PB.API" desc="Do not pass a 'char' to the 'StringBuffer(int)' constructor" id="PB.API.SBCC" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.API" desc="Avoid improper casting of the results of the 'next' methods in the 'java.util.Random' class" id="PB.API.UNI" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="PB.API" desc="Avoid using the 'equals()' and 'hashCode()' methods of &quot;java.net.URL&quot;" id="PB.API.URL" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.API" desc="Update values which may be using to compare with vendor properties" id="PB.API.VENDOR" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.CUB" desc="Avoid using 'return's inside 'finally blocks if thare are other 'return's inside the try-catch block" id="PB.CUB.ARCF" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.CUB" desc="Do not exit &quot;finally&quot; blocks abruptly" id="PB.CUB.ATSF" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.CUB" desc="Do not use the &quot;+&quot; string concatenation operator to concatenate numbers; use it only to add numbers" id="PB.CUB.DCP" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.CUB" desc="Avoid erroneously placing statements outside blocks" id="PB.CUB.EBI" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.CUB" desc="Avoid overloading varargs methods" id="PB.CUB.OVAM" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.CUB" desc="Do not use &quot;char&quot; arrays in &quot;String&quot; concatenations" id="PB.CUB.SAC" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="2;0;" authUrg="2;0;" cat="PB.CUB" desc="Do not use '==' or '!=' to compare objects" id="PB.CUB.UEIC" sev="2" total="2" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.CUB" desc="Avoid dangling &quot;else&quot; statements" id="PB.CUB.ADE" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.CUB" desc="Avoid confusing assignments to constructor arguments" id="PB.CUB.AWP" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.CUB" desc="Avoid improper concatenation of characters with numbers" id="PB.CUB.CNVC" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="PB.CUB" desc="Use the method name 'main()' only for the entry point method" id="PB.CUB.MAIN" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.LOGIC" desc="Do not call 'equals()' methods that always return false" id="PB.LOGIC.EQUS" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.LOGIC" desc="Avoid calling 'equals()' with same object" id="PB.LOGIC.ESO" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.LOGIC" desc="Avoid infinite recursive method calls" id="PB.LOGIC.FLRC" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="PB.LOGIC" desc="Do not increment or decrement on the same variable over multiple nested &quot;for&quot; loop statements" id="PB.LOGIC.JI" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;0;" authUrg="2;0;" cat="PB.LOGIC" desc="Ensure that the objects used within a loop's condition are properly accessed within the loop's body" id="PB.LOGIC.OAMC" sev="2" total="3" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.LOGIC" desc="Avoid bugs in the usage of loop variables" id="PB.LOGIC.INDEX" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.LOGIC" desc="Avoid out of range comparisons" id="PB.LOGIC.OOR" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.NUM" desc="Avoid calculations which result in overflow or NaN" id="PB.NUM.ICO" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.NUM" desc="Do not assign the result of an integer division to a floating point variable" id="PB.NUM.IDCD" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.NUM" desc="Avoid comparisons to Double.NaN or Float.NaN" id="PB.NUM.NAN" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.NUM" desc="Do not initialize array dimensions with negative numbers" id="PB.NUM.NIA" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="PB.NUM" desc="Do not pass floating point values to the 'BigDecimal' constructor" id="PB.NUM.BBDCC" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.NUM" desc="Do not use an integer outside the range of [0, 31] as the amount of a shift" id="PB.NUM.BSA" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.NUM" desc="Do not cast primitive data types to lower precision" id="PB.NUM.CLP" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.NUM" desc="Do not compare floating point types" id="PB.NUM.DCF" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.NUM" desc="Do not use floating point variables as loop indices" id="PB.NUM.FPLI" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="PB.NUM" desc="Avoid casting the result of an integer multiplication to &quot;long&quot;" id="PB.NUM.IMOF" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.RE" desc="Do not add a collection to itself" id="PB.RE.ACTI" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.RE" desc="Check whether or not &quot;readLine()&quot; returned null before dereferencing the return value" id="PB.RE.IDRL" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.RE" desc="Avoid using methods add() from JLayer class" id="PB.RE.JLAY" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.RE" desc="When used HttpURLConnection always check return value from the getResponseCode() methods before call getInputStream()" id="PB.RE.RCODE" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.RE" desc="Avoid modifying fixed-size Collections" id="PB.RE.AMFSL" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.RE" desc="Avoid possible ArrayStoreExceptions" id="PB.RE.ASE" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.RE" desc="Ensure 'Iterator.next()' method implementations throw 'NoSuchElementException'" id="PB.RE.CTNSE" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.TYPO" desc="Avoid assignment within a condition" id="PB.TYPO.ASI" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.TYPO" desc="Ensure that arguments passed to Java wrapper classes do not contain typos" id="PB.TYPO.WT" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;0;" authUrg="1;0;" cat="PB.TYPO" desc="Ensure &quot;switch&quot; statements do not contain typos" id="PB.TYPO.TLS" sev="2" total="1" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.TYPO" desc="Avoid assigning same variable in the fall-through switch case" id="PB.TYPO.DAV" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.TYPO" desc="Do not give methods and fields the same name as the enclosing class or each other" id="PB.TYPO.NAMING" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="2;0;" authUrg="2;0;" cat="PB.USC" desc="Avoid unreachable &quot;else if&quot; and &quot;else&quot; cases" id="PB.USC.UIF" sev="1" total="2" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;0;" authUrg="0;0;" cat="PB.USC" desc="Avoid using &quot;private&quot; fields which are never given a meaningful value" id="PB.USC.FCBS" sev="2" total="1" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.USC" desc="Avoid increment and decrement statements which have no effect" id="PB.USC.OI" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="PB.USC" desc="Do not use the unary operator '+'" id="PB.USC.UNARY" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="PB.USC" desc="Avoid empty statements" id="PB.USC.AES" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="PB.USC" desc="Avoid self assignments/initializations to fields and/or local variables" id="PB.USC.SAFL" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;0;" authUrg="0;0;" cat="PROPS" desc="Avoid duplicated property names" id="PROPS.DUPN" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;0;" authUrg="0;0;" cat="PROPS" desc="Avoid empty property names" id="PROPS.EMN" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;0;" authUrg="0;0;" cat="PROPS" desc="Avoid misusing arguments in property values" id="PROPS.IARG" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;0;" authUrg="0;0;" cat="PROPS" desc="Avoid incomplete property entries" id="PROPS.ICK" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;0;" authUrg="0;0;" cat="PROPS" desc="Avoid unmatched property entries in resources with different locales" id="PROPS.MENTRY" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;0;" authUrg="0;0;" cat="PROPS" desc="Avoid duplicated property values" id="PROPS.DUPV" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;0;" authUrg="0;0;" cat="PROPS" desc="Avoid empty property values" id="PROPS.EMV" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;0;" authUrg="0;0;" cat="PROPS" desc="Follow the limit for number of property entries" id="PROPS.FM" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;0;" authUrg="0;0;" cat="PROPS" desc="Avoid misusing the line continuation character '\'" id="PROPS.IVCC" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.prop" authTot="0;0;" authUrg="0;0;" cat="PROPS" desc="Ensure that property entries are localized correctly" id="PROPS.TENTRY" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="SERIAL" desc="Avoid classes that implement 'Externalizable' but do not define a no-argument constructor" id="SERIAL.ENNAC" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="SERIAL" desc="Ensure the return type of 'readResolve()' and 'writeReplace()' methods are 'java.lang.Object'" id="SERIAL.MRWD" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="SERIAL" desc="Ensure outer class is serializable if its inner class is serializable" id="SERIAL.OC" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="SERIAL" desc="Ensure that the 'readObject()' and 'writeObject()' methods have the correct signature" id="SERIAL.ROWO" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="SERIAL" desc="Avoid serializable classes that extend a superclass without a zero-argument constructor" id="SERIAL.SNNAC" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="SERIAL" desc="Ensure Serializable classes are correct" id="SERIAL.NSFSC" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="SERIAL" desc="Declare 'serialPersistentFields' &quot;private static final&quot;" id="SERIAL.SPF" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="SERIAL" desc="Ensure that all fields are assigned by the 'readObject()' method and written out by the 'writeObject()' method" id="SERIAL.RWAF" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;0;" authUrg="0;0;" cat="SERVLET" desc="Ensure that all servlets have a corresponding mapping in 'web.xml' files" id="SERVLET.SCM" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="SPRING" desc="Follow configuration class conventions" id="SPRING.ATCFG" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="STRUTS" desc="Avoid accessing a database from Action Classes" id="STRUTS.ACDA" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;0;" authUrg="0;0;" cat="STRUTS" desc="Avoid defining multiple form beans with the same name in 'struts-config.xml' files" id="STRUTS.MFBSN" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;0;" authUrg="0;0;" cat="STRUTS" desc="Use the 'minlength' validator for password fields in 'validation.xml'" id="STRUTS.MLVP" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;0;" authUrg="0;0;" cat="STRUTS" desc="Ensure that the @path attribute of '&lt;action>' and '&lt;forward>' elements begins with '/' in 'struts-config.xml' files" id="STRUTS.PFS" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.xml" authTot="0;0;" authUrg="0;0;" cat="STRUTS" desc="Ensure that the 'scope' attribute is set to either &quot;request&quot; or &quot;session&quot; for actions and exceptions in 'struts-config.xml' files" id="STRUTS.RSS" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="TRS" desc="Do not cause deadlocks by calling a &quot;synchronized&quot; method from a &quot;synchronized&quot; method" id="TRS.CSFS" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="TRS" desc="Release Locks in a &quot;finally&quot; block" id="TRS.RLF" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="TRS" desc="Do not synchronize on constant Strings" id="TRS.SCS" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="TRS" desc="Manually synchronize on 'synchronized' collections when iterating over them" id="TRS.SSCI" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="TRS" desc="Call 'wait()' and 'await()' only inside a loop that tests the liveness condition" id="TRS.UWIL" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="TRS" desc="Do not use variables of the unsafe type 'java.lang.ThreadGroup'" id="TRS.AUTG" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="TRS" desc="Do not call the &quot;start&quot; method of threads from inside a constructor" id="TRS.CSTART" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="TRS" desc="Do not synchronize on &quot;public&quot; fields since doing so may cause deadlocks" id="TRS.SOPF" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="TRS" desc="Avoid calling unsafe deprecated methods of 'Thread' and 'Runtime'" id="TRS.THRD" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="TRS" desc="Do not call 'Thread.sleep()' while holding a lock since doing so can cause poor performance and deadlocks" id="TRS.TSHL" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="TRS" desc="Ensure 'wait()', 'notify()' and 'notifyAll()' are invoked on an object that is clearly synchronized in its enclosing method scope" id="TRS.NSYN" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="TRS" desc="Do not synchronize on non-&quot;final&quot; fields since doing so makes it difficult to guarantee mutual exclusion" id="TRS.SOUF" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="TRS" desc="Synchronize access to &quot;static&quot; SimpleDataFormats" id="TRS.SSDF" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="TRS" desc="Do not start a thread without specifying a 'run()' method" id="TRS.UT" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="TRS" desc="Use 'wait()' and 'notifyAll()' instead of polling loops" id="TRS.UWNA" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="UC" desc="Avoid empty static and non-static initializers" id="UC.AESTAT" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="1;0;" authUrg="0;0;" cat="UC" desc="Avoid unused labels" id="UC.AUL" sev="3" total="1" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;1;" authUrg="0;1;" cat="UC" desc="Avoid collection objects that are never read" id="UC.AURCO" sev="3" total="1" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="11;0;" authUrg="7;0;" cat="UC" desc="Avoid local variables that are never read" id="UC.AURV" sev="3" total="11" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="UC" desc="Avoid duplicate code in 'if' branches" id="UC.DIEB" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="UC" desc="Do not explicitly &quot;import&quot; the java.lang.* &quot;package&quot;" id="UC.DIL" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="UC" desc="Avoid empty 'finalize()' methods" id="UC.EF" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;" authUrg="0;0;" cat="UC" desc="Avoid empty &quot;synchronized&quot; statements" id="UC.SNE" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="UC" desc="Avoid unnecessary 'if' statements" id="UC.UCIF" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="UC" desc="Avoid redundant throw clauses" id="UC.ARTD" sev="4" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;" authUrg="0;0;" cat="UC" desc="Do not import classes from the package that contains the current class" id="UC.PIMPORT" sev="4" total="0" />
         </RulesList>
         <SeverityList>
            <Severity authTot="31;4;" authUrg="31;4;" id="1" total="35" />
            <Severity authTot="13;2;" authUrg="11;2;" id="2" total="15" />
            <Severity authTot="16;1;" authUrg="8;1;" id="3" total="17" />
         </SeverityList>
      </Rules>
      
  <Supps />

      
  <StdViols>
    <StdViol msg="Text label 'case10' may be a typo for 'case 10'" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/eval/Simple.java" locStartln="24" sev="2" auth="tpieczkowski" locRef="1" rule="PB.TYPO.TLS" lnHash="337657500" pkg="examples.eval" rule.header="Ensure &quot;switch&quot; statements do not contain typos" tool="jtest" lineHash="337657500" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" locEndPos="18" locType="sr" urgent="true" hash="-2121569923" locEndLn="24" goals="1," />
    <StdViol msg="Avoid unused label: case10" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/eval/Simple.java" locStartln="24" sev="3" auth="tpieczkowski" locRef="1" rule="UC.AUL" lnHash="337657500" pkg="examples.eval" rule.header="Avoid unused labels" tool="jtest" lineHash="337657500" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" locEndPos="18" locType="sr" hash="-2121569923" locEndLn="24" goals="0," />
    <FlowViol msg="Security context not disposed: GSSManager.getInstance().createContext(tokens)" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" ruleSAFMsg="Point where the allocated resource is lost" FirstElSrcRngEndPos="58" auth="tpieczkowski" FirstElSrcRngEndLn="11" rule="BD.RES.LEAKS" FirstElSrcRngStartPos="12" lnHash="2103670358" ruleSCSCMsg="Point where the resource is allocated" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" rule.header="Ensure resources are deallocated" FirstElSrcRngStartln="11" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="-583807406" lang="java" locEndPos="9" urgent="true" prio="Not Defined" locEndLn="13" goals="1," locStartln="13" sev="1" locRef="2" tool="jtest" lineHash="2103670358" risk="Undefined" locType="sr" hash="-32679949" causeLocRef="2">
      <Props>
        <Prop key="Tracked variables" val="Allocated resource variable" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-1084133542" locType="sr" srcRnghash="-32679949" locRef="2" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" srcRngEndLn="10" ln="10" srcRngEndPos="45" srcRngStartln="10" srcRngStartPos="12" desc="byte[] inputBuff = new byte[256];" ElType="." rngLn="10" />
        <ElDesc lineHash="395283062" locType="sr" srcRnghash="-32679949" locRef="2" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" srcRngEndLn="11" ln="11" srcRngEndPos="93" srcRngStartln="11" srcRngStartPos="12" desc="GSSManager.getInstance().createContext(tokens).initSecContext(inputBuff, 0, 256);" ElType=".C" rngLn="11">
          <Props>
            <Prop key="Tracked variables" val="GSSManager.getInstance().createContext(tokens)" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is allocated" kind="cause" />
            <Ann msg="Allocated resource variable: GSSManager.getInstance().createContext(tokens)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2103670358" locType="sr" srcRnghash="-32679949" locRef="2" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" srcRngEndLn="13" ln="13" srcRngEndPos="9" srcRngStartln="13" srcRngStartPos="8" desc="}" ElType=".P" rngLn="13">
          <Props>
            <Prop key="Tracked variables" val="GSSManager.getInstance().createContext(tokens)" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: GSSManager.getInstance().createContext(tokens)" kind="var" />
            <Ann msg="Point where the allocated resource is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;context&quot; may possibly be null" ln="29" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="34" auth="tpieczkowski" FirstElSrcRngEndLn="19" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="-1273380230" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="19" locStartPos="16" analyzer="com.parasoft.jtest.flowanalyzer" id="-1409706191" lang="java" locEndPos="34" urgent="true" prio="Not Defined" locEndLn="29" goals="1," locStartln="29" sev="1" locRef="2" tool="jtest" lineHash="-1273380230" risk="Undefined" locType="sr" hash="-32679949" causeLocRef="2">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-1434008792" locType="sr" srcRnghash="-32679949" locRef="2" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" srcRngEndLn="19" ln="19" srcRngEndPos="34" srcRngStartln="19" srcRngStartPos="8" desc="GSSContext context = null;" ElType=".C" rngLn="19">
          <Props>
            <Prop key="Tracked variables" val="context" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: context" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1900478135" locType="sr" srcRnghash="-32679949" locRef="2" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" srcRngEndLn="21" ln="21" srcRngEndPos="68" srcRngStartln="21" srcRngStartPos="12" desc="context = GSSManager.getInstance().createContext(tokens)" ElType="!E" rngLn="21" thrownTypes="GSSException" throwingMethod="GSSManager.createContext">
          <Anns>
            <Ann msg="GSSManager.createContext() throws GSSException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2103670358" locType="sr" srcRnghash="-32679949" locRef="2" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" srcRngEndLn="25" ln="25" srcRngEndPos="32" srcRngStartln="25" srcRngStartPos="10" desc="catch (Exception ioe)" ElType="." rngLn="25" />
        <ElDesc lineHash="1266022184" locType="sr" srcRnghash="-32679949" locRef="2" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" srcRngEndLn="26" ln="26" srcRngEndPos="60" srcRngStartln="26" srcRngStartPos="12" desc="System.out.println(&quot;Exception occured: &quot; + ioe);" ElType="." rngLn="26" />
        <ElDesc lineHash="-1273380230" locType="sr" srcRnghash="-32679949" locRef="2" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" srcRngEndLn="29" ln="29" srcRngEndPos="34" srcRngStartln="29" srcRngStartPos="16" desc="context.dispose();" ElType=".P" rngLn="29">
          <Props>
            <Prop key="Tracked variables" val="context" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: context" kind="var" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Image resource not closed: imgReader" ln="16" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" ruleSAFMsg="Point where the allocated resource is lost" FirstElSrcRngEndPos="63" auth="tpieczkowski" FirstElSrcRngEndLn="14" rule="BD.RES.LEAKS" FirstElSrcRngStartPos="12" lnHash="100324464" ruleSCSCMsg="Point where the resource is allocated" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" rule.header="Ensure resources are deallocated" FirstElSrcRngStartln="14" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="526994216" lang="java" locEndPos="9" urgent="true" prio="Not Defined" locEndLn="16" goals="1," locStartln="16" sev="1" locRef="3" tool="jtest" lineHash="100324464" risk="Undefined" locType="sr" hash="1088242968" causeLocRef="3">
      <Props>
        <Prop key="Tracked variables" val="Allocated resource variable" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-2075299321" locType="sr" srcRnghash="1088242968" locRef="3" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" srcRngEndLn="12" ln="12" srcRngEndPos="27" srcRngStartln="12" srcRngStartPos="8" desc="Image image = null;" ElType="." rngLn="12" />
        <ElDesc lineHash="-442960859" locType="sr" srcRnghash="1088242968" locRef="3" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" srcRngEndLn="14" ln="14" srcRngEndPos="63" srcRngStartln="14" srcRngStartPos="12" desc="ImageReader imgReader = spi.createReaderInstance();" ElType=".C" rngLn="14">
          <Props>
            <Prop key="Tracked variables" val="imgReader" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is allocated" kind="cause" />
            <Ann msg="Allocated resource variable: imgReader" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1833758656" locType="sr" srcRnghash="1088242968" locRef="3" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" srcRngEndLn="15" ln="15" srcRngEndPos="37" srcRngStartln="15" srcRngStartPos="12" desc="image = imgReader.read(0)" ElType="!E" rngLn="15" thrownTypes="IOException" throwingMethod="ImageReader.read">
          <Anns>
            <Ann msg="ImageReader.read() throws IOException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="100324464" locType="sr" srcRnghash="1088242968" locRef="3" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" srcRngEndLn="16" ln="16" srcRngEndPos="9" srcRngStartln="16" srcRngStartPos="8" desc="}" ElType=".P" rngLn="16">
          <Props>
            <Prop key="Tracked variables" val="imgReader" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: imgReader" kind="var" />
            <Ann msg="Point where the allocated resource is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;imgReader&quot; may possibly be null" ln="31" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="37" auth="tpieczkowski" FirstElSrcRngEndLn="24" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="-281777821" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="24" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-1065131086" lang="java" locEndPos="32" urgent="true" prio="Not Defined" locEndLn="31" goals="1," locStartln="31" sev="1" locRef="3" tool="jtest" lineHash="-281777821" risk="Undefined" locType="sr" hash="1088242968" causeLocRef="3">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-2075299321" locType="sr" srcRnghash="1088242968" locRef="3" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" srcRngEndLn="23" ln="23" srcRngEndPos="27" srcRngStartln="23" srcRngStartPos="8" desc="Image image = null;" ElType="." rngLn="23" />
        <ElDesc lineHash="1423331445" locType="sr" srcRnghash="1088242968" locRef="3" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" srcRngEndLn="24" ln="24" srcRngEndPos="37" srcRngStartln="24" srcRngStartPos="8" desc="ImageReader imgReader = null;" ElType=".C" rngLn="24">
          <Props>
            <Prop key="Tracked variables" val="imgReader" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: imgReader" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="379037799" locType="sr" srcRnghash="1088242968" locRef="3" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" srcRngEndLn="26" ln="26" srcRngEndPos="50" srcRngStartln="26" srcRngStartPos="12" desc="imgReader = spi.createReaderInstance()" ElType="!E" rngLn="26" thrownTypes="IOException" throwingMethod="ImageReaderSpi.createReaderInstance">
          <Anns>
            <Ann msg="ImageReaderSpi.createReaderInstance() throws IOException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="100324464" locType="sr" srcRnghash="1088242968" locRef="3" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" srcRngEndLn="28" ln="28" srcRngEndPos="30" srcRngStartln="28" srcRngStartPos="10" desc="catch (Exception e)" ElType="." rngLn="28" />
        <ElDesc lineHash="957734862" locType="sr" srcRnghash="1088242968" locRef="3" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" srcRngEndLn="29" ln="29" srcRngEndPos="58" srcRngStartln="29" srcRngStartPos="12" desc="System.out.println(&quot;Exception occured: &quot; + e);" ElType="." rngLn="29" />
        <ElDesc lineHash="-281777821" locType="sr" srcRnghash="1088242968" locRef="3" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" srcRngEndLn="31" ln="31" srcRngEndPos="32" srcRngStartln="31" srcRngStartPos="12" desc="imgReader.dispose();" ElType=".P" rngLn="31">
          <Props>
            <Prop key="Tracked variables" val="imgReader" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: imgReader" kind="var" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Logging handler not closed: handler" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseLogging.java" ruleSAFMsg="Point where the allocated resource is lost" FirstElSrcRngEndPos="53" auth="tpieczkowski" FirstElSrcRngEndLn="10" rule="BD.RES.LEAKS" FirstElSrcRngStartPos="33" lnHash="30537853" ruleSCSCMsg="Point where the resource is allocated" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseLogging.java" rule.header="Ensure resources are deallocated" FirstElSrcRngStartln="10" locStartPos="4" analyzer="com.parasoft.jtest.flowanalyzer" id="173173566" lang="java" locEndPos="5" urgent="true" prio="Not Defined" locEndLn="13" goals="1," locStartln="13" sev="1" locRef="4" tool="jtest" lineHash="30537853" risk="Undefined" locType="sr" hash="-89489575" causeLocRef="4">
      <Props>
        <Prop key="Tracked variables" val="Allocated resource variable" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-653749919" locType="sr" srcRnghash="-89489575" locRef="4" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseLogging.java" srcRngEndLn="10" ln="10" srcRngEndPos="54" srcRngStartln="10" srcRngStartPos="8" desc="ConsoleHandler handler = new ConsoleHandler();" ElType=".C" rngLn="10">
          <Props>
            <Prop key="Tracked variables" val="new ConsoleHandler()" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is allocated" kind="cause" />
            <Ann msg="Allocated resource variable: new ConsoleHandler()" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="552956635" locType="sr" srcRnghash="-89489575" locRef="4" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseLogging.java" srcRngEndLn="11" ln="11" srcRngEndPos="57" srcRngStartln="11" srcRngStartPos="8" desc="LogRecord record = new LogRecord(level, message);" ElType="." rngLn="11">
          <Props>
            <Prop key="Tracked variables" val="handler" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: handler" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="495744864" locType="sr" srcRnghash="-89489575" locRef="4" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseLogging.java" srcRngEndLn="12" ln="12" srcRngEndPos="32" srcRngStartln="12" srcRngStartPos="8" desc="handler.publish(record);" ElType="." rngLn="12" />
        <ElDesc lineHash="30537853" locType="sr" srcRnghash="-89489575" locRef="4" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseLogging.java" srcRngEndLn="13" ln="13" srcRngEndPos="5" srcRngStartln="13" srcRngStartPos="4" desc="}" ElType=".P" rngLn="13">
          <Props>
            <Prop key="Tracked variables" val="handler" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: handler" kind="var" />
            <Ann msg="Point where the allocated resource is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Variable 'read' is never used" ln="16" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" locStartln="16" sev="3" auth="tpieczkowski" locRef="5" rule="UC.AURV" lnHash="1533291916" pkg="examples.flowanalysis" rule.header="Avoid local variables that are never read" tool="jtest" lineHash="1533291916" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" risk="Undefined" lang="java" locEndPos="20" locType="sr" urgent="true" prio="Not Defined" hash="1710944294" locEndLn="16" goals="1," />
    <FlowViol msg="NIO channel not closed: &lt;FileInputStream referenced by channel>.getChannel(), fInput.getChannel(), channel" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" ruleSAFMsg="Point where the allocated resource is lost" FirstElSrcRngEndPos="54" auth="tpieczkowski" FirstElSrcRngEndLn="14" rule="BD.RES.LEAKS" FirstElSrcRngStartPos="12" lnHash="2103670358" ruleSCSCMsg="Point where the resource is allocated" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" rule.header="Ensure resources are deallocated" FirstElSrcRngStartln="14" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="1527530399" lang="java" locEndPos="9" urgent="true" prio="Not Defined" locEndLn="18" goals="1," locStartln="18" sev="1" locRef="5" tool="jtest" lineHash="2103670358" risk="Undefined" locType="sr" hash="1710944294" causeLocRef="5">
      <Props>
        <Prop key="Tracked variables" val="Allocated resource variable" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-408098528" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" srcRngEndLn="13" ln="13" srcRngEndPos="67" srcRngStartln="13" srcRngStartPos="12" desc="FileInputStream fInput = new FileInputStream(filename);" ElType="." rngLn="13" />
        <ElDesc lineHash="-1002974916" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" srcRngEndLn="14" ln="14" srcRngEndPos="54" srcRngStartln="14" srcRngStartPos="12" desc="FileChannel channel = fInput.getChannel();" ElType=".C" rngLn="14">
          <Props>
            <Prop key="Tracked variables" val="&lt;FileInputStream referenced by channel>.getChannel(), fInput.getChannel(), channel" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is allocated" kind="cause" />
            <Ann msg="Allocated resource variable: &lt;FileInputStream referenced by channel>.getChannel(), fInput.getChannel(), channel" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="526245805" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" srcRngEndLn="15" ln="15" srcRngEndPos="54" srcRngStartln="15" srcRngStartPos="12" desc="ByteBuffer dst = ByteBuffer.allocate(512);" ElType="." rngLn="15" />
        <ElDesc lineHash="1533291916" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" srcRngEndLn="16" ln="16" srcRngEndPos="41" srcRngStartln="16" srcRngStartPos="12" desc="int read = channel.read(dst);" ElType="!E" rngLn="16" thrownTypes="IOException" throwingMethod="FileChannel.read">
          <Anns>
            <Ann msg="FileChannel.read() throws IOException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2103670358" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" srcRngEndLn="18" ln="18" srcRngEndPos="9" srcRngStartln="18" srcRngStartPos="8" desc="}" ElType=".P" rngLn="18">
          <Props>
            <Prop key="Tracked variables" val="&lt;FileInputStream referenced by channel>.getChannel(), fInput.getChannel(), channel" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: &lt;FileInputStream referenced by channel>.getChannel(), fInput.getChannel(), channel" kind="var" />
            <Ann msg="Point where the allocated resource is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Variable 'read' is never used" ln="29" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" locStartln="29" sev="3" auth="tpieczkowski" locRef="5" rule="UC.AURV" lnHash="1533291916" pkg="examples.flowanalysis" rule.header="Avoid local variables that are never read" tool="jtest" lineHash="1533291916" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" risk="Undefined" lang="java" locEndPos="20" locType="sr" urgent="true" prio="Not Defined" hash="1710944294" locEndLn="29" goals="1," />
    <FlowViol msg="&quot;channel&quot; may possibly be null" ln="35" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="35" auth="tpieczkowski" FirstElSrcRngEndLn="24" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="843047661" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="24" locStartPos="16" analyzer="com.parasoft.jtest.flowanalyzer" id="980048666" lang="java" locEndPos="32" urgent="true" prio="Not Defined" locEndLn="35" goals="1," locStartln="35" sev="1" locRef="5" tool="jtest" lineHash="843047661" risk="Undefined" locType="sr" hash="1710944294" causeLocRef="5">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1200399739" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" srcRngEndLn="24" ln="24" srcRngEndPos="35" srcRngStartln="24" srcRngStartPos="8" desc="FileChannel channel = null;" ElType=".C" rngLn="24">
          <Props>
            <Prop key="Tracked variables" val="channel" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: channel" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-408098528" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" srcRngEndLn="26" ln="26" srcRngEndPos="66" srcRngStartln="26" srcRngStartPos="37" desc="new FileInputStream(filename)" ElType="!E" rngLn="26" thrownTypes="FileNotFoundException" throwingMethod="FileInputStream.FileInputStream">
          <Anns>
            <Ann msg="FileInputStream.FileInputStream() throws FileNotFoundException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2103670358" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" srcRngEndLn="31" ln="31" srcRngEndPos="32" srcRngStartln="31" srcRngStartPos="10" desc="catch (Exception ioe)" ElType="." rngLn="31" />
        <ElDesc lineHash="1266022184" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" srcRngEndLn="32" ln="32" srcRngEndPos="60" srcRngStartln="32" srcRngStartPos="12" desc="System.out.println(&quot;Exception occured: &quot; + ioe);" ElType="." rngLn="32" />
        <ElDesc lineHash="843047661" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" srcRngEndLn="35" ln="35" srcRngEndPos="32" srcRngStartln="35" srcRngStartPos="16" desc="channel.close();" ElType=".P" rngLn="35">
          <Props>
            <Prop key="Tracked variables" val="channel" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: channel" kind="var" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Variable 'read' is never used" ln="12" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" locStartln="12" sev="3" auth="tpieczkowski" locRef="6" rule="UC.AURV" lnHash="609178338" pkg="examples.flowanalysis" rule.header="Avoid local variables that are never read" tool="jtest" lineHash="609178338" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" risk="Undefined" lang="java" locEndPos="20" locType="sr" urgent="true" prio="Not Defined" hash="-1842798386" locEndLn="12" goals="1," />
    <FlowViol msg="File not closed: raf" ln="14" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" ruleSAFMsg="Point where the allocated resource is lost" FirstElSrcRngEndPos="73" auth="tpieczkowski" FirstElSrcRngEndLn="10" rule="BD.RES.LEAKS" FirstElSrcRngStartPos="35" lnHash="100324464" ruleSCSCMsg="Point where the resource is allocated" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" rule.header="Ensure resources are deallocated" FirstElSrcRngStartln="10" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="-132133229" lang="java" locEndPos="9" urgent="true" prio="Not Defined" locEndLn="14" goals="1," locStartln="14" sev="1" locRef="6" tool="jtest" lineHash="100324464" risk="Undefined" locType="sr" hash="-1842798386" causeLocRef="6">
      <Props>
        <Prop key="Tracked variables" val="Allocated resource variable" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1121458434" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" srcRngEndLn="8" ln="8" srcRngEndPos="26" srcRngStartln="8" srcRngStartPos="8" desc="String res = null;" ElType="." rngLn="8" />
        <ElDesc lineHash="-1850530378" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" srcRngEndLn="10" ln="10" srcRngEndPos="74" srcRngStartln="10" srcRngStartPos="12" desc="RandomAccessFile raf = new RandomAccessFile(sFileName, sMode);" ElType=".C" rngLn="10">
          <Props>
            <Prop key="Tracked variables" val="new RandomAccessFile(sFileName, sMode)" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is allocated" kind="cause" />
            <Ann msg="Allocated resource variable: new RandomAccessFile(sFileName, sMode)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1113991407" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" srcRngEndLn="11" ln="11" srcRngEndPos="41" srcRngStartln="11" srcRngStartPos="12" desc="byte[] bytes = new byte[512];" ElType="." rngLn="11">
          <Props>
            <Prop key="Tracked variables" val="raf" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: raf" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="609178338" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" srcRngEndLn="12" ln="12" srcRngEndPos="61" srcRngStartln="12" srcRngStartPos="12" desc="int read = raf.read(bytes, offset, bytes.length);" ElType="!E" rngLn="12" thrownTypes="IOException" throwingMethod="RandomAccessFile.read">
          <Anns>
            <Ann msg="RandomAccessFile.read() throws IOException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="100324464" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" srcRngEndLn="14" ln="14" srcRngEndPos="9" srcRngStartln="14" srcRngStartPos="8" desc="}" ElType=".P" rngLn="14">
          <Props>
            <Prop key="Tracked variables" val="raf" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: raf" kind="var" />
            <Ann msg="Point where the allocated resource is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Variable 'read' is never used" ln="26" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" locStartln="26" sev="3" auth="tpieczkowski" locRef="6" rule="UC.AURV" lnHash="609178338" pkg="examples.flowanalysis" rule.header="Avoid local variables that are never read" tool="jtest" lineHash="609178338" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" risk="Undefined" lang="java" locEndPos="20" locType="sr" urgent="true" prio="Not Defined" hash="-1842798386" locEndLn="26" goals="1," />
    <FlowViol msg="&quot;raf&quot; may possibly be null" ln="32" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="36" auth="tpieczkowski" FirstElSrcRngEndLn="22" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="216587865" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="22" locStartPos="16" analyzer="com.parasoft.jtest.flowanalyzer" id="-1380964692" lang="java" locEndPos="28" urgent="true" prio="Not Defined" locEndLn="32" goals="1," locStartln="32" sev="1" locRef="6" tool="jtest" lineHash="216587865" risk="Undefined" locType="sr" hash="-1842798386" causeLocRef="6">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1121458434" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" srcRngEndLn="21" ln="21" srcRngEndPos="26" srcRngStartln="21" srcRngStartPos="8" desc="String res = null;" ElType="." rngLn="21" />
        <ElDesc lineHash="-1186737013" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" srcRngEndLn="22" ln="22" srcRngEndPos="36" srcRngStartln="22" srcRngStartPos="8" desc="RandomAccessFile raf = null;" ElType=".C" rngLn="22">
          <Props>
            <Prop key="Tracked variables" val="raf" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: raf" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1370866899" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" srcRngEndLn="24" ln="24" srcRngEndPos="56" srcRngStartln="24" srcRngStartPos="18" desc="new RandomAccessFile(sFileName, sMode)" ElType="!E" rngLn="24" thrownTypes="FileNotFoundException" throwingMethod="RandomAccessFile.RandomAccessFile">
          <Anns>
            <Ann msg="RandomAccessFile.RandomAccessFile() throws FileNotFoundException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="100324464" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" srcRngEndLn="28" ln="28" srcRngEndPos="30" srcRngStartln="28" srcRngStartPos="10" desc="catch (Exception e)" ElType="." rngLn="28" />
        <ElDesc lineHash="2082685994" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" srcRngEndLn="29" ln="29" srcRngEndPos="33" srcRngStartln="29" srcRngStartPos="12" desc="System.out.println();" ElType="." rngLn="29" />
        <ElDesc lineHash="216587865" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" srcRngEndLn="32" ln="32" srcRngEndPos="28" srcRngStartln="32" srcRngStartPos="16" desc="raf.close();" ElType=".P" rngLn="32">
          <Props>
            <Prop key="Tracked variables" val="raf" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: raf" kind="var" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Variable 'sock' is never used" ln="12" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" locStartln="12" sev="3" auth="tpieczkowski" locRef="7" rule="UC.AURV" lnHash="-657680996" pkg="examples.flowanalysis" rule.header="Avoid local variables that are never read" tool="jtest" lineHash="-657680996" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" risk="Undefined" lang="java" locEndPos="23" locType="sr" urgent="true" prio="Not Defined" hash="-69784133" locEndLn="12" goals="1," />
    <FlowViol msg="Socket not closed: sock" ln="14" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" ruleSAFMsg="Point where the allocated resource is lost" FirstElSrcRngEndPos="45" auth="tpieczkowski" FirstElSrcRngEndLn="12" rule="BD.RES.LEAKS" FirstElSrcRngStartPos="12" lnHash="2094668668" ruleSCSCMsg="Point where the resource is allocated" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" rule.header="Ensure resources are deallocated" FirstElSrcRngStartln="12" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="710422955" lang="java" locEndPos="9" urgent="true" prio="Not Defined" locEndLn="14" goals="1," locStartln="14" sev="1" locRef="7" tool="jtest" lineHash="2094668668" risk="Undefined" locType="sr" hash="-69784133" causeLocRef="7">
      <Props>
        <Prop key="Tracked variables" val="Allocated resource variable" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-657680996" locType="sr" srcRnghash="-69784133" locRef="7" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" srcRngEndLn="12" ln="12" srcRngEndPos="45" srcRngStartln="12" srcRngStartPos="12" desc="Socket sock = srvSocket.accept();" ElType=".C" rngLn="12">
          <Props>
            <Prop key="Tracked variables" val="sock" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is allocated" kind="cause" />
            <Ann msg="Allocated resource variable: sock" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2094668668" locType="sr" srcRnghash="-69784133" locRef="7" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" srcRngEndLn="14" ln="14" srcRngEndPos="9" srcRngStartln="14" srcRngStartPos="8" desc="}" ElType=".P" rngLn="14">
          <Props>
            <Prop key="Tracked variables" val="sock" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: sock" kind="var" />
            <Ann msg="Point where the allocated resource is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;sock&quot; may possibly be null" ln="28" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="27" auth="tpieczkowski" FirstElSrcRngEndLn="20" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="1669608780" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="20" locStartPos="16" analyzer="com.parasoft.jtest.flowanalyzer" id="930536523" lang="java" locEndPos="29" urgent="true" prio="Not Defined" locEndLn="28" goals="1," locStartln="28" sev="1" locRef="7" tool="jtest" lineHash="1669608780" risk="Undefined" locType="sr" hash="-69784133" causeLocRef="7">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1379796226" locType="sr" srcRnghash="-69784133" locRef="7" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" srcRngEndLn="20" ln="20" srcRngEndPos="27" srcRngStartln="20" srcRngStartPos="8" desc="Socket sock = null;" ElType=".C" rngLn="20">
          <Props>
            <Prop key="Tracked variables" val="sock" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: sock" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="250633455" locType="sr" srcRnghash="-69784133" locRef="7" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" srcRngEndLn="22" ln="22" srcRngEndPos="37" srcRngStartln="22" srcRngStartPos="12" desc="sock = srvSocket.accept()" ElType="!E" rngLn="22" thrownTypes="IOException" throwingMethod="ServerSocket.accept">
          <Anns>
            <Ann msg="ServerSocket.accept() throws IOException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2094668668" locType="sr" srcRnghash="-69784133" locRef="7" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" srcRngEndLn="24" ln="24" srcRngEndPos="34" srcRngStartln="24" srcRngStartPos="10" desc="catch (IOException ioe)" ElType="." rngLn="24" />
        <ElDesc lineHash="1266022184" locType="sr" srcRnghash="-69784133" locRef="7" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" srcRngEndLn="25" ln="25" srcRngEndPos="60" srcRngStartln="25" srcRngStartPos="12" desc="System.out.println(&quot;Exception occured: &quot; + ioe);" ElType="." rngLn="25" />
        <ElDesc lineHash="1669608780" locType="sr" srcRnghash="-69784133" locRef="7" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" srcRngEndLn="28" ln="28" srcRngEndPos="29" srcRngStartln="28" srcRngStartPos="16" desc="sock.close();" ElType=".P" rngLn="28">
          <Props>
            <Prop key="Tracked variables" val="sock" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: sock" kind="var" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;encoder&quot; may possibly be null" ln="52" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="34" auth="tpieczkowski" FirstElSrcRngEndLn="43" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="1289477876" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="43" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="1392202515" lang="java" locEndPos="28" urgent="true" prio="Not Defined" locEndLn="52" goals="1," locStartln="52" sev="1" locRef="8" tool="jtest" lineHash="1289477876" risk="Undefined" locType="sr" hash="-1630627415" causeLocRef="8">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1358363122" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" srcRngEndLn="43" ln="43" srcRngEndPos="34" srcRngStartln="43" srcRngStartPos="8" desc="XMLEncoder encoder = null;" ElType=".C" rngLn="43">
          <Props>
            <Prop key="Tracked variables" val="encoder" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: encoder" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="529589572" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" srcRngEndLn="45" ln="45" srcRngEndPos="41" srcRngStartln="45" srcRngStartPos="22" desc="new XMLEncoder(out)" ElType="!E" rngLn="45" thrownTypes="IllegalArgumentException" throwingMethod="XMLEncoder.XMLEncoder">
          <Anns>
            <Ann msg="XMLEncoder.XMLEncoder() throws IllegalArgumentException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="100324464" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" srcRngEndLn="49" ln="49" srcRngEndPos="30" srcRngStartln="49" srcRngStartPos="10" desc="catch (Exception e)" ElType="." rngLn="49" />
        <ElDesc lineHash="957734862" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" srcRngEndLn="50" ln="50" srcRngEndPos="58" srcRngStartln="50" srcRngStartPos="12" desc="System.out.println(&quot;Exception occured: &quot; + e);" ElType="." rngLn="50" />
        <ElDesc lineHash="1289477876" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" srcRngEndLn="52" ln="52" srcRngEndPos="28" srcRngStartln="52" srcRngStartPos="12" desc="encoder.close();" ElType=".P" rngLn="52">
          <Props>
            <Prop key="Tracked variables" val="encoder" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: encoder" kind="var" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;decoder&quot; may possibly be null" ln="71" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="34" auth="tpieczkowski" FirstElSrcRngEndLn="58" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="1116947660" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="58" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="34245236" lang="java" locEndPos="28" urgent="true" prio="Not Defined" locEndLn="71" goals="1," locStartln="71" sev="1" locRef="8" tool="jtest" lineHash="1116947660" risk="Undefined" locType="sr" hash="-1630627415" causeLocRef="8">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-1310850359" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" srcRngEndLn="57" ln="57" srcRngEndPos="36" srcRngStartln="57" srcRngStartPos="8" desc="Vector vObjs = new Vector();" ElType="." rngLn="57" />
        <ElDesc lineHash="23744578" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" srcRngEndLn="58" ln="58" srcRngEndPos="34" srcRngStartln="58" srcRngStartPos="8" desc="XMLDecoder decoder = null;" ElType=".C" rngLn="58">
          <Props>
            <Prop key="Tracked variables" val="decoder" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: decoder" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1321082029" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" srcRngEndLn="60" ln="60" srcRngEndPos="40" srcRngStartln="60" srcRngStartPos="22" desc="new XMLDecoder(in)" ElType="!E" rngLn="60" thrownTypes="IllegalArgumentException" throwingMethod="XMLDecoder.XMLDecoder">
          <Anns>
            <Ann msg="XMLDecoder.XMLDecoder() throws IllegalArgumentException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="100324464" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" srcRngEndLn="68" ln="68" srcRngEndPos="30" srcRngStartln="68" srcRngStartPos="10" desc="catch (Exception e)" ElType="." rngLn="68" />
        <ElDesc lineHash="957734862" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" srcRngEndLn="69" ln="69" srcRngEndPos="58" srcRngStartln="69" srcRngStartPos="12" desc="System.out.println(&quot;Exception occured: &quot; + e);" ElType="." rngLn="69" />
        <ElDesc lineHash="1116947660" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" srcRngEndLn="71" ln="71" srcRngEndPos="28" srcRngStartln="71" srcRngStartPos="12" desc="decoder.close();" ElType=".P" rngLn="71">
          <Props>
            <Prop key="Tracked variables" val="decoder" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: decoder" kind="var" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;code == 0&quot; always evaluates to false" ln="17" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ruleSAFMsg="Point where senseless condition is used" FirstElSrcRngEndPos="92" auth="tpieczkowski" FirstElSrcRngEndLn="14" rule="BD.PB.CC" FirstElSrcRngStartPos="24" lnHash="2035788877" ruleSCSCMsg="Start of the path" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" rule.header="Avoid conditions that always evaluate to the same value" FirstElSrcRngStartln="14" locStartPos="15" analyzer="com.parasoft.jtest.flowanalyzer" id="-780681677" lang="java" locEndPos="38" urgent="true" prio="Not Defined" locEndLn="17" goals="1," locStartln="17" sev="2" locRef="10" tool="jtest" lineHash="2035788877" risk="Undefined" locType="sr" hash="-1891737324" causeLocRef="10">
      <Props />
      <ElDescList>
        <ElDesc lineHash="907030458" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="14" ln="14" srcRngEndPos="92" srcRngStartln="14" srcRngStartPos="24" desc="calculateDiscountedSum(int code, float initialSum, Consumer person)" ElType=".C" rngLn="14">
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1076318677" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="15" ln="15" srcRngEndPos="71" srcRngStartln="15" srcRngStartPos="8" desc="float discountedSum = calculateCommonDiscountedSum(initialSum);" ElType="." rngLn="15">
          <ElDescList>
            <ElDesc lineHash="1694878475" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="33" ln="33" srcRngEndPos="35" srcRngStartln="33" srcRngStartPos="8" desc="float discountedSum = 0.0f;" ElType="." rngLn="33" />
            <ElDesc lineHash="-167050145" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="34" ln="34" srcRngEndPos="32" srcRngStartln="34" srcRngStartPos="8" desc="if (initialSum > 5.0f) {" ElType="." rngLn="34">
              <Anns>
                <Ann msg="Condition evaluation: (initialSum > 5.0) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-847108515" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="37" ln="37" srcRngEndPos="32" srcRngStartln="37" srcRngStartPos="8" desc="if (initialSum &lt; 5.0f) {" ElType="." rngLn="37">
              <Anns>
                <Ann msg="Condition evaluation: (initialSum &lt; 5.0) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-184886784" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="40" ln="40" srcRngEndPos="29" srcRngStartln="40" srcRngStartPos="8" desc="return discountedSum;" ElType="." rngLn="40" />
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="424308118" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="16" ln="16" srcRngEndPos="40" srcRngStartln="16" srcRngStartPos="8" desc="if (code == PERSONAL_DISCOUNT) {" ElType="." rngLn="16">
          <Anns>
            <Ann msg="Condition evaluation: (code == 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2035788877" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="17" ln="17" srcRngEndPos="38" srcRngStartln="17" srcRngStartPos="15" desc="if (code == DISCOUNT) {" ElType=".P" rngLn="17">
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="The &quot;else&quot; condition always evaluates to &quot;false&quot; because of previous branches" ln="17" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" locStartln="17" sev="1" auth="tpieczkowski" locRef="10" rule="PB.USC.UIF" lnHash="2035788877" pkg="examples.flowanalysis" rule.header="Avoid unreachable &quot;else if&quot; and &quot;else&quot; cases" tool="jtest" lineHash="2035788877" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" risk="Undefined" lang="java" locEndPos="35" locType="sr" urgent="true" prio="Not Defined" hash="-1891737324" locEndLn="17" goals="1," />
    <FlowViol msg="Condition &quot;code == 0&quot; always evaluates to false" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ruleSAFMsg="Point where senseless condition is used" FirstElSrcRngEndPos="92" auth="tpieczkowski" FirstElSrcRngEndLn="14" rule="BD.PB.CC" FirstElSrcRngStartPos="24" lnHash="-1311457596" ruleSCSCMsg="Start of the path" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" rule.header="Avoid conditions that always evaluate to the same value" FirstElSrcRngStartln="14" locStartPos="15" analyzer="com.parasoft.jtest.flowanalyzer" id="-1908253495" lang="java" locEndPos="43" urgent="true" prio="Not Defined" locEndLn="18" goals="1," locStartln="18" sev="2" locRef="10" tool="jtest" lineHash="-1311457596" risk="Undefined" locType="sr" hash="-1891737324" causeLocRef="10">
      <Props />
      <ElDescList>
        <ElDesc lineHash="907030458" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="14" ln="14" srcRngEndPos="92" srcRngStartln="14" srcRngStartPos="24" desc="calculateDiscountedSum(int code, float initialSum, Consumer person)" ElType=".C" rngLn="14">
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1076318677" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="15" ln="15" srcRngEndPos="71" srcRngStartln="15" srcRngStartPos="8" desc="float discountedSum = calculateCommonDiscountedSum(initialSum);" ElType="." rngLn="15">
          <ElDescList>
            <ElDesc lineHash="1694878475" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="33" ln="33" srcRngEndPos="35" srcRngStartln="33" srcRngStartPos="8" desc="float discountedSum = 0.0f;" ElType="." rngLn="33" />
            <ElDesc lineHash="-167050145" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="34" ln="34" srcRngEndPos="32" srcRngStartln="34" srcRngStartPos="8" desc="if (initialSum > 5.0f) {" ElType="." rngLn="34">
              <Anns>
                <Ann msg="Condition evaluation: (initialSum > 5.0) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-847108515" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="37" ln="37" srcRngEndPos="32" srcRngStartln="37" srcRngStartPos="8" desc="if (initialSum &lt; 5.0f) {" ElType="." rngLn="37">
              <Anns>
                <Ann msg="Condition evaluation: (initialSum &lt; 5.0) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-184886784" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="40" ln="40" srcRngEndPos="29" srcRngStartln="40" srcRngStartPos="8" desc="return discountedSum;" ElType="." rngLn="40" />
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="424308118" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="16" ln="16" srcRngEndPos="40" srcRngStartln="16" srcRngStartPos="8" desc="if (code == PERSONAL_DISCOUNT) {" ElType="." rngLn="16">
          <Anns>
            <Ann msg="Condition evaluation: (code == 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2035788877" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="17" ln="17" srcRngEndPos="38" srcRngStartln="17" srcRngStartPos="15" desc="if (code == DISCOUNT) {" ElType="." rngLn="17">
          <Anns>
            <Ann msg="Condition evaluation: (code == 0) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1311457596" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="18" ln="18" srcRngEndPos="43" srcRngStartln="18" srcRngStartPos="15" desc="if (code == SPECIAL_OFFER) {" ElType=".P" rngLn="18">
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="The &quot;else&quot; condition always evaluates to &quot;false&quot; because of previous branches" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" locStartln="18" sev="1" auth="tpieczkowski" locRef="10" rule="PB.USC.UIF" lnHash="-1311457596" pkg="examples.flowanalysis" rule.header="Avoid unreachable &quot;else if&quot; and &quot;else&quot; cases" tool="jtest" lineHash="-1311457596" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" risk="Undefined" lang="java" locEndPos="40" locType="sr" urgent="true" prio="Not Defined" hash="-1891737324" locEndLn="18" goals="1," />
    <FlowViol msg="Division by &quot;discountedSum&quot; which may possibly be zero" ln="22" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ruleSAFMsg="Point of division by zero" FirstElSrcRngEndPos="71" auth="tpieczkowski" FirstElSrcRngEndLn="15" rule="BD.PB.ZERO" FirstElSrcRngStartPos="8" lnHash="203027039" ruleSCSCMsg="Start of the path" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" rule.header="Avoid division by zero" FirstElSrcRngStartln="15" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-1542057993" lang="java" locEndPos="75" urgent="true" prio="Not Defined" locEndLn="22" goals="1," locStartln="22" sev="1" locRef="10" tool="jtest" lineHash="203027039" risk="Undefined" locType="sr" hash="-1891737324" causeLocRef="10">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-1076318677" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="15" ln="15" srcRngEndPos="71" srcRngStartln="15" srcRngStartPos="8" desc="float discountedSum = calculateCommonDiscountedSum(initialSum);" ElType=".C" rngLn="15">
          <ElDescList>
            <ElDesc lineHash="1694878475" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="33" ln="33" srcRngEndPos="35" srcRngStartln="33" srcRngStartPos="8" desc="float discountedSum = 0.0f;" ElType="!" rngLn="33" />
            <ElDesc lineHash="-167050145" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="34" ln="34" srcRngEndPos="32" srcRngStartln="34" srcRngStartPos="8" desc="if (initialSum > 5.0f) {" ElType="." rngLn="34">
              <Anns>
                <Ann msg="Condition evaluation: (initialSum > 5.0) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-847108515" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="37" ln="37" srcRngEndPos="32" srcRngStartln="37" srcRngStartPos="8" desc="if (initialSum &lt; 5.0f) {" ElType="." rngLn="37">
              <Anns>
                <Ann msg="Condition evaluation: (initialSum &lt; 5.0) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-184886784" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="40" ln="40" srcRngEndPos="29" srcRngStartln="40" srcRngStartPos="8" desc="return discountedSum;" ElType="!" rngLn="40" />
          </ElDescList>
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="424308118" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="16" ln="16" srcRngEndPos="40" srcRngStartln="16" srcRngStartPos="8" desc="if (code == PERSONAL_DISCOUNT) {" ElType="." rngLn="16">
          <Anns>
            <Ann msg="Condition evaluation: (code == 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="424308118" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="21" ln="21" srcRngEndPos="40" srcRngStartln="21" srcRngStartPos="8" desc="if (code == PERSONAL_DISCOUNT) {" ElType="." rngLn="21">
          <Anns>
            <Ann msg="Condition evaluation: (code == 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="203027039" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="22" ln="22" srcRngEndPos="75" srcRngStartln="22" srcRngStartPos="12" desc="float progressionCoef = person.getOverallSum() / discountedSum;" ElType=".P" rngLn="22">
          <Anns>
            <Ann msg="Point of division by zero" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Member class could be declared &quot;static&quot;: Consumer" ln="47" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" locStartln="47" sev="3" auth="tpieczkowski" locRef="10" rule="OPT.SI" lnHash="-1389700455" pkg="examples.flowanalysis" rule.header="Declare member classes &quot;static&quot; if possible" tool="jtest" lineHash="-1389700455" locStartPos="10" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" risk="Undefined" lang="java" locEndPos="18" locType="sr" prio="Not Defined" hash="-1891737324" locEndLn="47" goals="0," />
    <FlowViol msg="&quot;fOut&quot; may possibly be null" ln="27" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="37" auth="tpieczkowski" FirstElSrcRngEndLn="21" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="-1243101048" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="21" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-126836633" lang="java" locEndPos="25" urgent="true" prio="Not Defined" locEndLn="27" goals="1," locStartln="27" sev="1" locRef="11" tool="jtest" lineHash="-1243101048" risk="Undefined" locType="sr" hash="686946442" causeLocRef="11">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1883769468" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" srcRngEndLn="21" ln="21" srcRngEndPos="37" srcRngStartln="21" srcRngStartPos="8" desc="FileOutputStream fOut = null;" ElType=".C" rngLn="21">
          <Props>
            <Prop key="Tracked variables" val="fOut" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: fOut" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="760693331" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" srcRngEndLn="23" ln="23" srcRngEndPos="41" srcRngStartln="23" srcRngStartPos="12" desc="String sFileName = storyName;" ElType="." rngLn="23" />
        <ElDesc lineHash="1826395322" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" srcRngEndLn="24" ln="24" srcRngEndPos="50" srcRngStartln="24" srcRngStartPos="19" desc="new FileOutputStream(sFileName)" ElType="!E" rngLn="24" thrownTypes="FileNotFoundException" throwingMethod="FileOutputStream.FileOutputStream">
          <Anns>
            <Ann msg="FileOutputStream.FileOutputStream() throws FileNotFoundException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1243101048" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" srcRngEndLn="27" ln="27" srcRngEndPos="25" srcRngStartln="27" srcRngStartPos="12" desc="fOut.close();" ElType=".P" rngLn="27">
          <Props>
            <Prop key="Tracked variables" val="fOut" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: fOut" kind="var" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Iterator &quot;iter&quot; may possibly be used after iterated collection is modified" ln="16" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" ruleSAFMsg="Iterator usage point" FirstElSrcRngEndPos="49" auth="tpieczkowski" FirstElSrcRngEndLn="15" rule="BD.CO.ITMOD" FirstElSrcRngStartPos="8" lnHash="-1314484653" ruleSCSCMsg="Iterator creation point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" rule.header="Do not modify collection while iterating over it" FirstElSrcRngStartln="15" locStartPos="15" analyzer="com.parasoft.jtest.flowanalyzer" id="-207340259" lang="java" locEndPos="29" urgent="true" prio="Not Defined" locEndLn="16" goals="1," locStartln="16" sev="1" locRef="12" tool="jtest" lineHash="-1314484653" risk="Undefined" locType="sr" hash="438092426" causeLocRef="12">
      <Props>
        <Prop key="Tracked variables" val="Tracked iterators" />
        <Prop key="Tracked collections" val="Tracked collections" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-385742572" locType="sr" srcRnghash="438092426" locRef="12" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" srcRngEndLn="15" ln="15" srcRngEndPos="49" srcRngStartln="15" srcRngStartPos="8" desc="Iterator&lt;?> iter = collection.iterator();" ElType=".C" rngLn="15">
          <Props>
            <Prop key="Tracked variables" val="iter" />
            <Prop key="Tracked collections" val="collection" />
          </Props>
          <Anns>
            <Ann msg="Iterator creation point" kind="cause" />
            <Ann msg="Tracked iterators: iter" kind="var" />
            <Ann msg="Tracked collections: collection" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1314484653" locType="sr" srcRnghash="438092426" locRef="12" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" srcRngEndLn="17" ln="16" srcRngEndPos="0" srcRngStartln="16" srcRngStartPos="8" desc="while (iter.hasNext()) {" ElType="." rngLn="16">
          <Anns>
            <Ann msg="Loop condition evaluation: iter.hasNext() (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1317928354" locType="sr" srcRnghash="438092426" locRef="12" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" srcRngEndLn="17" ln="17" srcRngEndPos="37" srcRngStartln="17" srcRngStartPos="12" desc="Object obj = iter.next();" ElType="." rngLn="17" />
        <ElDesc lineHash="985784051" locType="sr" srcRnghash="438092426" locRef="12" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" srcRngEndLn="18" ln="18" srcRngEndPos="54" srcRngStartln="18" srcRngStartPos="12" desc="if (tp.isAssignableFrom(obj.getClass())) {" ElType="." rngLn="18">
          <Anns>
            <Ann msg="Condition evaluation: tp.isAssignableFrom(obj.getClass()) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1295664149" locType="sr" srcRnghash="438092426" locRef="12" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" srcRngEndLn="21" ln="21" srcRngEndPos="35" srcRngStartln="21" srcRngStartPos="12" desc="collection.remove(obj);" ElType="!" rngLn="21">
          <Anns>
            <Ann msg="Collection modification point" kind="info" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1314484653" locType="sr" srcRnghash="438092426" locRef="12" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" srcRngEndLn="16" ln="16" srcRngEndPos="29" srcRngStartln="16" srcRngStartPos="15" desc="iter.hasNext()" ElType=".P" rngLn="16">
          <Props>
            <Prop key="Tracked variables" val="iter" />
            <Prop key="Tracked collections" val="collection" />
          </Props>
          <Anns>
            <Ann msg="Tracked iterators: iter" kind="var" />
            <Ann msg="Tracked collections: collection" kind="var" />
            <Ann msg="Iterator usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Iterator &quot;iter&quot; may possibly be used after iterated collection is modified" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" ruleSAFMsg="Iterator usage point" FirstElSrcRngEndPos="49" auth="tpieczkowski" FirstElSrcRngEndLn="14" rule="BD.CO.ITMOD" FirstElSrcRngStartPos="8" lnHash="-1314484653" ruleSCSCMsg="Iterator creation point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" rule.header="Do not modify collection while iterating over it" FirstElSrcRngStartln="14" locStartPos="15" analyzer="com.parasoft.jtest.flowanalyzer" id="879893748" lang="java" locEndPos="29" urgent="true" prio="Not Defined" locEndLn="15" goals="1," locStartln="15" sev="1" locRef="13" tool="jtest" lineHash="-1314484653" risk="Undefined" locType="sr" hash="1816383512" causeLocRef="13">
      <Props>
        <Prop key="Tracked variables" val="Tracked iterators" />
        <Prop key="Tracked collections" val="Tracked collections" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-385742572" locType="sr" srcRnghash="1816383512" locRef="13" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" srcRngEndLn="14" ln="14" srcRngEndPos="49" srcRngStartln="14" srcRngStartPos="8" desc="Iterator&lt;?> iter = collection.iterator();" ElType=".C" rngLn="14">
          <Props>
            <Prop key="Tracked variables" val="iter" />
            <Prop key="Tracked collections" val="collection" />
          </Props>
          <Anns>
            <Ann msg="Iterator creation point" kind="cause" />
            <Ann msg="Tracked iterators: iter" kind="var" />
            <Ann msg="Tracked collections: collection" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1314484653" locType="sr" srcRnghash="1816383512" locRef="13" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" srcRngEndLn="16" ln="15" srcRngEndPos="0" srcRngStartln="15" srcRngStartPos="8" desc="while (iter.hasNext()) {" ElType="." rngLn="15">
          <Anns>
            <Ann msg="Loop condition evaluation: iter.hasNext() (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1860144441" locType="sr" srcRnghash="1816383512" locRef="13" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" srcRngEndLn="16" ln="16" srcRngEndPos="41" srcRngStartln="16" srcRngStartPos="12" desc="Object element = iter.next();" ElType="." rngLn="16" />
        <ElDesc lineHash="-1848798502" locType="sr" srcRnghash="1816383512" locRef="13" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" srcRngEndLn="17" ln="17" srcRngEndPos="39" srcRngStartln="17" srcRngStartPos="12" desc="collection.remove(element);" ElType="!" rngLn="17">
          <Anns>
            <Ann msg="Collection modification point" kind="info" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1314484653" locType="sr" srcRnghash="1816383512" locRef="13" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" srcRngEndLn="15" ln="15" srcRngEndPos="29" srcRngStartln="15" srcRngStartPos="15" desc="iter.hasNext()" ElType=".P" rngLn="15">
          <Props>
            <Prop key="Tracked variables" val="iter" />
            <Prop key="Tracked collections" val="collection" />
          </Props>
          <Anns>
            <Ann msg="Tracked iterators: iter" kind="var" />
            <Ann msg="Tracked collections: collection" kind="var" />
            <Ann msg="Iterator usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="'hasNext()' is called on the variable &quot;iter&quot; in the loop's condition, but 'next()' is never called on this variable in the loop's body" ln="28" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" locStartln="28" sev="2" auth="tpieczkowski" locRef="13" rule="PB.LOGIC.OAMC" lnHash="-1314484653" pkg="examples.flowanalysis" rule.header="Ensure that the objects used within a loop's condition are properly accessed within the loop's body" tool="jtest" lineHash="-1314484653" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" locEndPos="19" locType="sr" hash="1816383512" locEndLn="28" goals="0," />
    <FlowViol msg="Iterator &quot;iter&quot; may possibly be used after iterated collection is modified" ln="16" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" ruleSAFMsg="Iterator usage point" FirstElSrcRngEndPos="51" auth="tpieczkowski" FirstElSrcRngEndLn="15" rule="BD.CO.ITMOD" FirstElSrcRngStartPos="8" lnHash="-1314484653" ruleSCSCMsg="Iterator creation point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" rule.header="Do not modify collection while iterating over it" FirstElSrcRngStartln="15" locStartPos="15" analyzer="com.parasoft.jtest.flowanalyzer" id="123114575" lang="java" locEndPos="29" urgent="true" prio="Not Defined" locEndLn="16" goals="1," locStartln="16" sev="1" locRef="14" tool="jtest" lineHash="-1314484653" risk="Undefined" locType="sr" hash="-417185865" causeLocRef="14">
      <Props>
        <Prop key="Tracked variables" val="Tracked iterators" />
        <Prop key="Tracked collections" val="Tracked collections" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-1650191732" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" srcRngEndLn="15" ln="15" srcRngEndPos="51" srcRngStartln="15" srcRngStartPos="8" desc="Iterator&lt;?> iter = map.keySet().iterator();" ElType=".C" rngLn="15">
          <Props>
            <Prop key="Tracked variables" val="iter" />
            <Prop key="Tracked collections" val="map" />
          </Props>
          <Anns>
            <Ann msg="Iterator creation point" kind="cause" />
            <Ann msg="Tracked iterators: iter" kind="var" />
            <Ann msg="Tracked collections: map" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1314484653" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" srcRngEndLn="17" ln="16" srcRngEndPos="0" srcRngStartln="16" srcRngStartPos="8" desc="while (iter.hasNext()) {" ElType="." rngLn="16">
          <Anns>
            <Ann msg="Loop condition evaluation: iter.hasNext() (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-927722506" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" srcRngEndLn="17" ln="17" srcRngEndPos="37" srcRngStartln="17" srcRngStartPos="12" desc="Object key = iter.next();" ElType="." rngLn="17" />
        <ElDesc lineHash="-943711873" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" srcRngEndLn="18" ln="18" srcRngEndPos="28" srcRngStartln="18" srcRngStartPos="12" desc="map.remove(key);" ElType="!" rngLn="18">
          <Anns>
            <Ann msg="Collection modification point" kind="info" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1314484653" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" srcRngEndLn="16" ln="16" srcRngEndPos="29" srcRngStartln="16" srcRngStartPos="15" desc="iter.hasNext()" ElType=".P" rngLn="16">
          <Props>
            <Prop key="Tracked variables" val="iter" />
            <Prop key="Tracked collections" val="map" />
          </Props>
          <Anns>
            <Ann msg="Tracked iterators: iter" kind="var" />
            <Ann msg="Tracked collections: map" kind="var" />
            <Ann msg="Iterator usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Iterator &quot;iter&quot; may possibly be used after iterated collection is modified" ln="29" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" ruleSAFMsg="Iterator usage point" FirstElSrcRngEndPos="53" auth="tpieczkowski" FirstElSrcRngEndLn="28" rule="BD.CO.ITMOD" FirstElSrcRngStartPos="8" lnHash="-1314484653" ruleSCSCMsg="Iterator creation point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" rule.header="Do not modify collection while iterating over it" FirstElSrcRngStartln="28" locStartPos="15" analyzer="com.parasoft.jtest.flowanalyzer" id="-1846913671" lang="java" locEndPos="29" urgent="true" prio="Not Defined" locEndLn="29" goals="1," locStartln="29" sev="1" locRef="14" tool="jtest" lineHash="-1314484653" risk="Undefined" locType="sr" hash="-417185865" causeLocRef="14">
      <Props>
        <Prop key="Tracked variables" val="Tracked iterators" />
        <Prop key="Tracked collections" val="Tracked collections" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1391720025" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" srcRngEndLn="28" ln="28" srcRngEndPos="53" srcRngStartln="28" srcRngStartPos="8" desc="Iterator&lt;?> iter = map.entrySet().iterator();" ElType=".C" rngLn="28">
          <Props>
            <Prop key="Tracked variables" val="iter" />
            <Prop key="Tracked collections" val="map" />
          </Props>
          <Anns>
            <Ann msg="Iterator creation point" kind="cause" />
            <Ann msg="Tracked iterators: iter" kind="var" />
            <Ann msg="Tracked collections: map" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1314484653" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" srcRngEndLn="30" ln="29" srcRngEndPos="0" srcRngStartln="29" srcRngStartPos="8" desc="while (iter.hasNext()) {" ElType="." rngLn="29">
          <Anns>
            <Ann msg="Loop condition evaluation: iter.hasNext() (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="655636977" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" srcRngEndLn="30" ln="30" srcRngEndPos="58" srcRngStartln="30" srcRngStartPos="12" desc="Entry&lt;?, ?> entry = (Entry&lt;?, ?>) iter.next();" ElType="." rngLn="30" />
        <ElDesc lineHash="-1719244368" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" srcRngEndLn="31" ln="31" srcRngEndPos="40" srcRngStartln="31" srcRngStartPos="12" desc="Object key = entry.getKey();" ElType="." rngLn="31" />
        <ElDesc lineHash="-943711873" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" srcRngEndLn="32" ln="32" srcRngEndPos="28" srcRngStartln="32" srcRngStartPos="12" desc="map.remove(key);" ElType="!" rngLn="32">
          <Anns>
            <Ann msg="Collection modification point" kind="info" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1314484653" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" srcRngEndLn="29" ln="29" srcRngEndPos="29" srcRngStartln="29" srcRngStartPos="15" desc="iter.hasNext()" ElType=".P" rngLn="29">
          <Props>
            <Prop key="Tracked variables" val="iter" />
            <Prop key="Tracked collections" val="map" />
          </Props>
          <Anns>
            <Ann msg="Tracked iterators: iter" kind="var" />
            <Ann msg="Tracked collections: map" kind="var" />
            <Ann msg="Iterator usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="'hasNext()' is called on the variable &quot;iter&quot; in the loop's condition, but 'next()' is never called on this variable in the loop's body" ln="43" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" locStartln="43" sev="2" auth="tpieczkowski" locRef="14" rule="PB.LOGIC.OAMC" lnHash="-1314484653" pkg="examples.flowanalysis" rule.header="Ensure that the objects used within a loop's condition are properly accessed within the loop's body" tool="jtest" lineHash="-1314484653" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" locEndPos="19" locType="sr" urgent="true" hash="-417185865" locEndLn="43" goals="1," />
    <StdViol msg="'hasNext()' is called on the variable &quot;iter&quot; in the loop's condition, but 'next()' is never called on this variable in the loop's body" ln="55" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" locStartln="55" sev="2" auth="tpieczkowski" locRef="14" rule="PB.LOGIC.OAMC" lnHash="-1314484653" pkg="examples.flowanalysis" rule.header="Ensure that the objects used within a loop's condition are properly accessed within the loop's body" tool="jtest" lineHash="-1314484653" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" locEndPos="19" locType="sr" urgent="true" hash="-417185865" locEndLn="55" goals="1," />
    <StdViol msg="Variable 'value' is never used" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" locStartln="18" sev="3" auth="tpieczkowski" locRef="15" rule="UC.AURV" lnHash="-1032022773" pkg="examples.flowanalysis" rule.header="Avoid local variables that are never read" tool="jtest" lineHash="-1032022773" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" risk="Undefined" lang="java" locEndPos="24" locType="sr" prio="Not Defined" hash="-359565455" locEndLn="18" goals="0," />
    <StdViol msg="Variable 'key' is never used" ln="32" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" locStartln="32" sev="3" auth="tpieczkowski" locRef="15" rule="UC.AURV" lnHash="-1719244368" pkg="examples.flowanalysis" rule.header="Avoid local variables that are never read" tool="jtest" lineHash="-1719244368" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" risk="Undefined" lang="java" locEndPos="22" locType="sr" prio="Not Defined" hash="-359565455" locEndLn="32" goals="0," />
    <StdViol msg="Variable 'value' is never used" ln="33" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" locStartln="33" sev="3" auth="tpieczkowski" locRef="15" rule="UC.AURV" lnHash="-518523280" pkg="examples.flowanalysis" rule.header="Avoid local variables that are never read" tool="jtest" lineHash="-518523280" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" risk="Undefined" lang="java" locEndPos="24" locType="sr" prio="Not Defined" hash="-359565455" locEndLn="33" goals="0," />
    <FlowViol msg="Condition &quot;result instanceof RuntimeException&quot; always evaluates to false" ln="11" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" ruleSAFMsg="Point where senseless condition is used" FirstElSrcRngEndPos="54" auth="tpieczkowski" FirstElSrcRngEndLn="8" rule="BD.PB.CC" FirstElSrcRngStartPos="16" lnHash="-1443263063" ruleSCSCMsg="Start of the path" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" rule.header="Avoid conditions that always evaluate to the same value" FirstElSrcRngStartln="8" locStartPos="15" analyzer="com.parasoft.jtest.flowanalyzer" id="-507222183" lang="java" locEndPos="56" urgent="true" prio="Not Defined" locEndLn="11" goals="1," locStartln="11" sev="2" locRef="18" tool="jtest" lineHash="-1443263063" risk="Undefined" locType="sr" hash="1709312165" causeLocRef="18">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-987516032" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" srcRngEndLn="8" ln="8" srcRngEndPos="54" srcRngStartln="8" srcRngStartPos="16" desc="printCalculationResult(Object result)" ElType=".C" rngLn="8">
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1532976715" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" srcRngEndLn="9" ln="9" srcRngEndPos="42" srcRngStartln="9" srcRngStartPos="8" desc="if (result instanceof Exception) {" ElType="." rngLn="9">
          <Anns>
            <Ann msg="Condition evaluation: result instanceof java.lang.Exception (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1443263063" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" srcRngEndLn="11" ln="11" srcRngEndPos="56" srcRngStartln="11" srcRngStartPos="15" desc="if (result instanceof RuntimeException) {" ElType=".P" rngLn="11">
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;!volumetric&quot; always evaluates to true" ln="23" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" ruleSAFMsg="Point where senseless condition is used" FirstElSrcRngEndPos="63" auth="tpieczkowski" FirstElSrcRngEndLn="19" rule="BD.PB.CC" FirstElSrcRngStartPos="16" lnHash="2035781366" ruleSCSCMsg="Start of the path" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" rule.header="Avoid conditions that always evaluate to the same value" FirstElSrcRngStartln="19" locStartPos="19" analyzer="com.parasoft.jtest.flowanalyzer" id="-1602486109" lang="java" locEndPos="39" urgent="true" prio="Not Defined" locEndLn="23" goals="1," locStartln="23" sev="2" locRef="18" tool="jtest" lineHash="2035781366" risk="Undefined" locType="sr" hash="1709312165" causeLocRef="18">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-917251182" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" srcRngEndLn="19" ln="19" srcRngEndPos="63" srcRngStartln="19" srcRngStartPos="16" desc="guessFigure(boolean round, boolean volumetric)" ElType=".C" rngLn="19">
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1554350844" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" srcRngEndLn="20" ln="20" srcRngEndPos="25" srcRngStartln="20" srcRngStartPos="8" desc="final int figure;" ElType="." rngLn="20" />
        <ElDesc lineHash="733119465" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" srcRngEndLn="21" ln="21" srcRngEndPos="34" srcRngStartln="21" srcRngStartPos="8" desc="if (round &amp;&amp; volumetric) {" ElType="!" rngLn="21">
          <Anns>
            <Ann msg="Condition evaluation: round (assuming true)" kind="condEval" />
            <Ann msg="Condition evaluation: volumetric (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: round &amp;&amp; volumetric (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2035781366" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" srcRngEndLn="23" ln="23" srcRngEndPos="39" srcRngStartln="23" srcRngStartPos="19" desc="round &amp;&amp; !volumetric" ElType=".P" rngLn="23">
          <Anns>
            <Ann msg="Condition evaluation: round (true)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;!round&quot; always evaluates to true" ln="25" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" ruleSAFMsg="Point where senseless condition is used" FirstElSrcRngEndPos="63" auth="tpieczkowski" FirstElSrcRngEndLn="19" rule="BD.PB.CC" FirstElSrcRngStartPos="16" lnHash="834780796" ruleSCSCMsg="Start of the path" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" rule.header="Avoid conditions that always evaluate to the same value" FirstElSrcRngStartln="19" locStartPos="19" analyzer="com.parasoft.jtest.flowanalyzer" id="1213110304" lang="java" locEndPos="25" urgent="true" prio="Not Defined" locEndLn="25" goals="1," locStartln="25" sev="2" locRef="18" tool="jtest" lineHash="834780796" risk="Undefined" locType="sr" hash="1709312165" causeLocRef="18">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-917251182" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" srcRngEndLn="19" ln="19" srcRngEndPos="63" srcRngStartln="19" srcRngStartPos="16" desc="guessFigure(boolean round, boolean volumetric)" ElType=".C" rngLn="19">
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1554350844" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" srcRngEndLn="20" ln="20" srcRngEndPos="25" srcRngStartln="20" srcRngStartPos="8" desc="final int figure;" ElType="." rngLn="20" />
        <ElDesc lineHash="733119465" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" srcRngEndLn="21" ln="21" srcRngEndPos="34" srcRngStartln="21" srcRngStartPos="8" desc="if (round &amp;&amp; volumetric) {" ElType="!" rngLn="21">
          <Anns>
            <Ann msg="Condition evaluation: round (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: round &amp;&amp; volumetric (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2035781366" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" srcRngEndLn="23" ln="23" srcRngEndPos="42" srcRngStartln="23" srcRngStartPos="15" desc="if (round &amp;&amp; !volumetric) {" ElType="." rngLn="23">
          <Anns>
            <Ann msg="Condition evaluation: round (false)" kind="condEval" />
            <Ann msg="Condition evaluation: round &amp;&amp; !volumetric (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="834780796" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" srcRngEndLn="25" ln="25" srcRngEndPos="25" srcRngStartln="25" srcRngStartPos="19" desc="!round" ElType=".P" rngLn="25">
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;this.minLoginLength&quot; is used prior to explicit initialization" ln="40" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" ruleSAFMsg="Usage point" FirstElSrcRngEndPos="31" auth="tpieczkowski" FirstElSrcRngEndLn="28" rule="BD.PB.NOTINITCTOR" FirstElSrcRngStartPos="8" lnHash="-395689623" ruleSCSCMsg="Point of explicit initialization" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" rule.header="Avoid use of fields before initialization in constructors and static initializers" FirstElSrcRngStartln="28" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="899807045" lang="java" locEndPos="60" urgent="true" prio="Not Defined" locEndLn="40" goals="1," locStartln="40" sev="1" locRef="19" tool="jtest" lineHash="-395689623" risk="Undefined" locType="sr" hash="-635152949" causeLocRef="19">
      <Props>
        <Prop key="Tracked variables" val="Not explicitly initialized value" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-749467591" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" srcRngEndLn="28" ln="28" srcRngEndPos="31" srcRngStartln="28" srcRngStartPos="8" desc="int minLoginLength = 7;" ElType="!" rngLn="28">
          <Props>
            <Prop key="Tracked variables" val="this.minLoginLength" />
          </Props>
          <Anns>
            <Ann msg="Not explicitly initialized value: this.minLoginLength" kind="var" />
            <Ann msg="Point of implicit initialization" kind="info" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1444358553" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" srcRngEndLn="31" ln="31" srcRngEndPos="34" srcRngStartln="31" srcRngStartPos="12" desc="super(name, password);" ElType="!" rngLn="31">
          <ElDescList>
            <ElDesc lineHash="32660008" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" srcRngEndLn="16" ln="16" srcRngEndPos="29" srcRngStartln="16" srcRngStartPos="12" desc="this.name = name;" ElType="." rngLn="16">
              <Props>
                <Prop key="Tracked variables" val="this.minLoginLength" />
              </Props>
              <Anns>
                <Ann msg="Not explicitly initialized value: this.minLoginLength" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="555503656" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" srcRngEndLn="17" ln="17" srcRngEndPos="37" srcRngStartln="17" srcRngStartPos="12" desc="this.password = password;" ElType="." rngLn="17" />
            <ElDesc lineHash="1197745480" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" srcRngEndLn="18" ln="18" srcRngEndPos="24" srcRngStartln="18" srcRngStartPos="12" desc="checkData();" ElType="!" rngLn="18">
              <ElDescList>
                <ElDesc lineHash="-395689623" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" srcRngEndLn="40" ln="40" srcRngEndPos="60" srcRngStartln="40" srcRngStartPos="12" desc="if (super.name.length() &lt; this.minLoginLength) {" ElType=".P" rngLn="40">
                  <Props>
                    <Prop key="Tracked variables" val="this.minLoginLength" />
                  </Props>
                  <Anns>
                    <Ann msg="Not explicitly initialized value: this.minLoginLength" kind="var" />
                    <Ann msg="Condition evaluation: (super.name.length() &lt; this.minLoginLength) (false)" kind="condEval" />
                    <Ann msg="Usage point" kind="point" />
                  </Anns>
                </ElDesc>
              </ElDescList>
            </ElDesc>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-749467591" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" srcRngEndLn="28" ln="28" srcRngEndPos="31" srcRngStartln="28" srcRngStartPos="8" desc="int minLoginLength = 7;" ElType=".C" rngLn="28">
          <Anns>
            <Ann msg="Point of explicit initialization" kind="cause" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;this.minLoginLength&quot; is used prior to explicit initialization" ln="40" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" ruleSAFMsg="Usage point" FirstElSrcRngEndPos="31" auth="tpieczkowski" FirstElSrcRngEndLn="28" rule="BD.PB.NOTEXPLINIT" FirstElSrcRngStartPos="8" lnHash="-395689623" ruleSCSCMsg="Source of implicitly initialized value" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" rule.header="Avoid use before explicit initialization" FirstElSrcRngStartln="28" locStartPos="16" analyzer="com.parasoft.jtest.flowanalyzer" id="-458188754" lang="java" locEndPos="57" urgent="true" prio="Not Defined" locEndLn="40" goals="1," locStartln="40" sev="1" locRef="19" tool="jtest" lineHash="-395689623" risk="Undefined" locType="sr" hash="-635152949" causeLocRef="19">
      <Props>
        <Prop key="Tracked variables" val="Not explicitly initialized value" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-749467591" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" srcRngEndLn="28" ln="28" srcRngEndPos="31" srcRngStartln="28" srcRngStartPos="8" desc="int minLoginLength = 7;" ElType=".C" rngLn="28">
          <Props>
            <Prop key="Tracked variables" val="this.minLoginLength" />
          </Props>
          <Anns>
            <Ann msg="Source of implicitly initialized value" kind="cause" />
            <Ann msg="Not explicitly initialized value: this.minLoginLength" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1444358553" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" srcRngEndLn="31" ln="31" srcRngEndPos="34" srcRngStartln="31" srcRngStartPos="12" desc="super(name, password);" ElType="!" rngLn="31">
          <ElDescList>
            <ElDesc lineHash="32660008" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" srcRngEndLn="16" ln="16" srcRngEndPos="29" srcRngStartln="16" srcRngStartPos="12" desc="this.name = name;" ElType="." rngLn="16">
              <Props>
                <Prop key="Tracked variables" val="this.minLoginLength" />
              </Props>
              <Anns>
                <Ann msg="Not explicitly initialized value: this.minLoginLength" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="555503656" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" srcRngEndLn="17" ln="17" srcRngEndPos="37" srcRngStartln="17" srcRngStartPos="12" desc="this.password = password;" ElType="." rngLn="17" />
            <ElDesc lineHash="1197745480" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" srcRngEndLn="18" ln="18" srcRngEndPos="24" srcRngStartln="18" srcRngStartPos="12" desc="checkData();" ElType="!" rngLn="18">
              <ElDescList>
                <ElDesc lineHash="-395689623" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" srcRngEndLn="40" ln="40" srcRngEndPos="57" srcRngStartln="40" srcRngStartPos="16" desc="super.name.length() &lt; this.minLoginLength" ElType=".P" rngLn="40">
                  <Props>
                    <Prop key="Tracked variables" val="this.minLoginLength" />
                  </Props>
                  <Anns>
                    <Ann msg="Not explicitly initialized value: this.minLoginLength" kind="var" />
                    <Ann msg="Usage point" kind="point" />
                  </Anns>
                </ElDesc>
              </ElDescList>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Stream not closed: new FileInputStream(&quot;...&quot;)" ln="22" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ruleSAFMsg="Point where the allocated resource is lost" FirstElSrcRngEndPos="69" auth="tpieczkowski" FirstElSrcRngEndLn="22" rule="BD.RES.LEAKS" FirstElSrcRngStartPos="43" lnHash="1794515364" ruleSCSCMsg="Point where the resource is allocated" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" rule.header="Ensure resources are deallocated" FirstElSrcRngStartln="22" locStartPos="21" analyzer="com.parasoft.jtest.flowanalyzer" id="-537165082" lang="java" locEndPos="70" urgent="true" prio="Not Defined" locEndLn="22" goals="1," locStartln="22" sev="1" locRef="20" tool="jtest" lineHash="1794515364" risk="Undefined" locType="sr" hash="2110246917" causeLocRef="20">
      <Props>
        <Prop key="Tracked variables" val="Allocated resource variable" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="274607265" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="20" ln="20" srcRngEndPos="40" srcRngStartln="20" srcRngStartPos="8" desc="ObjectInputStream source = null;" ElType="." rngLn="20" />
        <ElDesc lineHash="1794515364" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="22" ln="22" srcRngEndPos="70" srcRngStartln="22" srcRngStartPos="21" desc="new ObjectInputStream(new FileInputStream(&quot;...&quot;))" ElType="ECP" rngLn="22" thrownTypes="IOException" throwingMethod="ObjectInputStream.ObjectInputStream">
          <Props>
            <Prop key="Tracked variables" val="new FileInputStream(&quot;...&quot;)" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is allocated" kind="cause" />
            <Ann msg="ObjectInputStream.ObjectInputStream() throws IOException" kind="except" />
            <Ann msg="Allocated resource variable: new FileInputStream(&quot;...&quot;)" kind="var" />
            <Ann msg="Point where the allocated resource is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Member class could be declared &quot;static&quot;: ValueStorage" ln="55" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" locStartln="55" sev="3" auth="tpieczkowski" locRef="20" rule="OPT.SI" lnHash="1017003716" pkg="examples.flowanalysis" rule.header="Declare member classes &quot;static&quot; if possible" tool="jtest" lineHash="1017003716" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" risk="Undefined" lang="java" locEndPos="29" locType="sr" prio="Not Defined" hash="2110246917" locEndLn="55" goals="0," />
    <FlowViol msg="&quot;strKey&quot; may possibly be null" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MyDictionary.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="29" auth="tpieczkowski" FirstElSrcRngEndLn="14" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="-1504762512" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis.np" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MyDictionary.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="14" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="-1727847030" lang="java" locEndPos="32" urgent="true" prio="Not Defined" locEndLn="18" goals="1," locStartln="18" sev="1" locRef="26" tool="jtest" lineHash="-1504762512" risk="Undefined" locType="sr" hash="1067996598" causeLocRef="26">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-1935852018" locType="sr" srcRnghash="1067996598" locRef="26" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MyDictionary.java" srcRngEndLn="14" ln="14" srcRngEndPos="29" srcRngStartln="14" srcRngStartPos="8" desc="String strKey = null;" ElType=".C" rngLn="14">
          <Props>
            <Prop key="Tracked variables" val="strKey" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: strKey" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1183172741" locType="sr" srcRnghash="1067996598" locRef="26" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MyDictionary.java" srcRngEndLn="15" ln="15" srcRngEndPos="36" srcRngStartln="15" srcRngStartPos="8" desc="if (key instanceof String) {" ElType="." rngLn="15">
          <Anns>
            <Ann msg="Condition evaluation: key instanceof java.lang.String (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1504762512" locType="sr" srcRnghash="1067996598" locRef="26" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MyDictionary.java" srcRngEndLn="18" ln="18" srcRngEndPos="32" srcRngStartln="18" srcRngStartPos="8" desc="dict.put(strKey, value);" ElType=".P" rngLn="18">
          <Props>
            <Prop key="Tracked variables" val="strKey" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: strKey" kind="var" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;sFirstLine&quot; may possibly be null" ln="22" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="33" auth="tpieczkowski" FirstElSrcRngEndLn="12" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="-1543564921" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis.np" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="12" locStartPos="15" analyzer="com.parasoft.jtest.flowanalyzer" id="-905475100" lang="java" locEndPos="34" urgent="true" prio="Not Defined" locEndLn="22" goals="1," locStartln="22" sev="1" locRef="27" tool="jtest" lineHash="-1543564921" risk="Undefined" locType="sr" hash="-51902665" causeLocRef="27">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-989328207" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" srcRngEndLn="12" ln="12" srcRngEndPos="33" srcRngStartln="12" srcRngStartPos="8" desc="String sFirstLine = null;" ElType=".C" rngLn="12">
          <Props>
            <Prop key="Tracked variables" val="sFirstLine" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: sFirstLine" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="191709394" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" srcRngEndLn="13" ln="13" srcRngEndPos="37" srcRngStartln="13" srcRngStartPos="8" desc="BufferedReader reader = null;" ElType="." rngLn="13" />
        <ElDesc lineHash="-1664407388" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" srcRngEndLn="15" ln="15" srcRngEndPos="65" srcRngStartln="15" srcRngStartPos="40" desc="new FileReader(sFileName)" ElType="!E" rngLn="15" thrownTypes="FileNotFoundException" throwingMethod="FileReader.FileReader">
          <Anns>
            <Ann msg="FileReader.FileReader() throws FileNotFoundException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="100324464" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" srcRngEndLn="17" ln="17" srcRngEndPos="30" srcRngStartln="17" srcRngStartPos="10" desc="catch (Exception e)" ElType="." rngLn="17" />
        <ElDesc lineHash="-747252483" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" srcRngEndLn="18" ln="18" srcRngEndPos="69" srcRngStartln="18" srcRngStartPos="12" desc="System.out.println(&quot;Exception occured. &quot; + e.toString());" ElType="." rngLn="18" />
        <ElDesc lineHash="853738085" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" srcRngEndLn="20" ln="20" srcRngEndPos="26" srcRngStartln="20" srcRngStartPos="12" desc="close(reader);" ElType="." rngLn="20">
          <ElDescList>
            <ElDesc lineHash="-2039937235" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" srcRngEndLn="27" ln="27" srcRngEndPos="27" srcRngStartln="27" srcRngStartPos="12" desc="reader.close();" ElType="." rngLn="27" />
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-1543564921" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" srcRngEndLn="22" ln="22" srcRngEndPos="34" srcRngStartln="22" srcRngStartPos="15" desc="sFirstLine.length()" ElType=".P" rngLn="22">
          <Props>
            <Prop key="Tracked variables" val="sFirstLine" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: sFirstLine" kind="var" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;reader&quot; may possibly be null" ln="27" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="37" auth="tpieczkowski" FirstElSrcRngEndLn="13" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="-2039937235" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis.np" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="13" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="1268810782" lang="java" locEndPos="27" urgent="true" prio="Not Defined" locEndLn="27" goals="1," locStartln="27" sev="1" locRef="27" tool="jtest" lineHash="-2039937235" risk="Undefined" locType="sr" hash="-51902665" causeLocRef="27">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-989328207" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" srcRngEndLn="12" ln="12" srcRngEndPos="33" srcRngStartln="12" srcRngStartPos="8" desc="String sFirstLine = null;" ElType="." rngLn="12" />
        <ElDesc lineHash="191709394" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" srcRngEndLn="13" ln="13" srcRngEndPos="37" srcRngStartln="13" srcRngStartPos="8" desc="BufferedReader reader = null;" ElType=".C" rngLn="13">
          <Props>
            <Prop key="Tracked variables" val="reader" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: reader" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1664407388" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" srcRngEndLn="15" ln="15" srcRngEndPos="65" srcRngStartln="15" srcRngStartPos="40" desc="new FileReader(sFileName)" ElType="!E" rngLn="15" thrownTypes="FileNotFoundException" throwingMethod="FileReader.FileReader">
          <Anns>
            <Ann msg="FileReader.FileReader() throws FileNotFoundException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="100324464" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" srcRngEndLn="17" ln="17" srcRngEndPos="30" srcRngStartln="17" srcRngStartPos="10" desc="catch (Exception e)" ElType="." rngLn="17" />
        <ElDesc lineHash="-747252483" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" srcRngEndLn="18" ln="18" srcRngEndPos="69" srcRngStartln="18" srcRngStartPos="12" desc="System.out.println(&quot;Exception occured. &quot; + e.toString());" ElType="." rngLn="18" />
        <ElDesc lineHash="853738085" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" srcRngEndLn="20" ln="20" srcRngEndPos="26" srcRngStartln="20" srcRngStartPos="12" desc="close(reader);" ElType="!" rngLn="20">
          <ElDescList>
            <ElDesc lineHash="-2039937235" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" srcRngEndLn="27" ln="27" srcRngEndPos="27" srcRngStartln="27" srcRngStartPos="12" desc="reader.close();" ElType=".P" rngLn="27">
              <Props>
                <Prop key="Tracked variables" val="reader" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: reader" kind="var" />
                <Ann msg="NullPointerException point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <MetViol msg="Value 8 is out of acceptable range: 'lower than 7'" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/metrics/MetricsExample.java" locStartln="13" sev="3" auth="tpieczkowski" locRef="36" rule="METRIC.NBD" lnHash="844216599" rule.header="Nested Blocks Depth" tool="jtest" lineHash="844216599" locStartPos="0" analyzer="com.parasoft.jtest.standards.metrics.analyzer" lang="java" locEndPos="0" locType="sr" urgent="true" hash="-1994237948" locEndLn="14" goals="1," />
    <FlowViol msg="File not closed: file" ln="14" locFile="/com.parasoft:demo/src/main/java/examples/mock/ConstructorExample.java" ruleSAFMsg="Point where the allocated resource is lost" FirstElSrcRngEndPos="64" auth="tpieczkowski" FirstElSrcRngEndLn="12" rule="BD.RES.LEAKS" FirstElSrcRngStartPos="32" lnHash="30537853" ruleSCSCMsg="Point where the resource is allocated" pkg="examples.mock" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/mock/ConstructorExample.java" rule.header="Ensure resources are deallocated" FirstElSrcRngStartln="12" locStartPos="4" analyzer="com.parasoft.jtest.flowanalyzer" id="770945057" lang="java" locEndPos="5" urgent="true" prio="Not Defined" locEndLn="14" goals="1," locStartln="14" sev="1" locRef="38" tool="jtest" lineHash="30537853" risk="Undefined" locType="sr" hash="-458905718" causeLocRef="38">
      <Props>
        <Prop key="Tracked variables" val="Allocated resource variable" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="89628897" locType="sr" srcRnghash="-458905718" locRef="38" srcRngFile="/com.parasoft:demo/src/main/java/examples/mock/ConstructorExample.java" srcRngEndLn="12" ln="12" srcRngEndPos="65" srcRngStartln="12" srcRngStartPos="8" desc="RandomAccessFile file = new RandomAccessFile(path, &quot;rw&quot;);" ElType=".C" rngLn="12">
          <Props>
            <Prop key="Tracked variables" val="new RandomAccessFile(path, &quot;rw&quot;)" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is allocated" kind="cause" />
            <Ann msg="Allocated resource variable: new RandomAccessFile(path, &quot;rw&quot;)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1885716046" locType="sr" srcRnghash="-458905718" locRef="38" srcRngFile="/com.parasoft:demo/src/main/java/examples/mock/ConstructorExample.java" srcRngEndLn="13" ln="13" srcRngEndPos="28" srcRngStartln="13" srcRngStartPos="15" desc="file.length()" ElType="!E" rngLn="13" thrownTypes="IOException" throwingMethod="RandomAccessFile.length">
          <Props>
            <Prop key="Tracked variables" val="file" />
          </Props>
          <Anns>
            <Ann msg="RandomAccessFile.length() throws IOException" kind="except" />
            <Ann msg="Allocated resource variable: file" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="30537853" locType="sr" srcRnghash="-458905718" locRef="38" srcRngFile="/com.parasoft:demo/src/main/java/examples/mock/ConstructorExample.java" srcRngEndLn="14" ln="14" srcRngEndPos="5" srcRngStartln="14" srcRngStartPos="4" desc="}" ElType=".P" rngLn="14">
          <Props>
            <Prop key="Tracked variables" val="file" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: file" kind="var" />
            <Ann msg="Point where the allocated resource is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;balance >= 5000&quot; always evaluates to true" ln="36" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" ruleSAFMsg="Point where senseless condition is used" FirstElSrcRngEndPos="49" auth="Mark Wilson" FirstElSrcRngEndLn="33" rule="BD.PB.CC" FirstElSrcRngStartPos="19" lnHash="729855832" ruleSCSCMsg="Start of the path" pkg="examples.nbank" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" rule.header="Avoid conditions that always evaluate to the same value" FirstElSrcRngStartln="33" locStartPos="19" analyzer="com.parasoft.jtest.flowanalyzer" id="-566745273" lang="java" locEndPos="48" urgent="true" prio="Not Defined" locEndLn="36" goals="1," locStartln="36" sev="2" locRef="43" tool="jtest" lineHash="729855832" risk="Undefined" locType="sr" hash="-2109136904" causeLocRef="43">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-1809142446" locType="sr" srcRnghash="-2109136904" locRef="43" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" srcRngEndLn="33" ln="33" srcRngEndPos="49" srcRngStartln="33" srcRngStartPos="19" desc="setAccountStatus(int balance)" ElType=".C" rngLn="33">
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1153895073" locType="sr" srcRnghash="-2109136904" locRef="43" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" srcRngEndLn="34" ln="34" srcRngEndPos="41" srcRngStartln="34" srcRngStartPos="8" desc="if (balance &lt; BALANCE_GOLD_MIN) {" ElType="." rngLn="34">
          <Anns>
            <Ann msg="Condition evaluation: (balance &lt; 5000) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="729855832" locType="sr" srcRnghash="-2109136904" locRef="43" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" srcRngEndLn="36" ln="36" srcRngEndPos="48" srcRngStartln="36" srcRngStartPos="19" desc="(balance >= BALANCE_GOLD_MIN)" ElType=".P" rngLn="36">
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;balance >= 5000&quot; always evaluates to true" ln="73" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" ruleSAFMsg="Point where senseless condition is used" FirstElSrcRngEndPos="40" auth="Mark Wilson" FirstElSrcRngEndLn="69" rule="BD.PB.CC" FirstElSrcRngStartPos="16" lnHash="729855832" ruleSCSCMsg="Start of the path" pkg="examples.nbank" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" rule.header="Avoid conditions that always evaluate to the same value" FirstElSrcRngStartln="69" locStartPos="19" analyzer="com.parasoft.jtest.flowanalyzer" id="-183718716" lang="java" locEndPos="48" urgent="true" prio="Not Defined" locEndLn="73" goals="1," locStartln="73" sev="2" locRef="43" tool="jtest" lineHash="729855832" risk="Undefined" locType="sr" hash="-2109136904" causeLocRef="43">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-349452654" locType="sr" srcRnghash="-2109136904" locRef="43" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" srcRngEndLn="69" ln="69" srcRngEndPos="40" srcRngStartln="69" srcRngStartPos="16" desc="setBalance(int balance)" ElType=".C" rngLn="69">
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1662992443" locType="sr" srcRnghash="-2109136904" locRef="43" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" srcRngEndLn="70" ln="70" srcRngEndPos="27" srcRngStartln="70" srcRngStartPos="8" desc="_balance = balance;" ElType="." rngLn="70" />
        <ElDesc lineHash="1153895073" locType="sr" srcRnghash="-2109136904" locRef="43" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" srcRngEndLn="71" ln="71" srcRngEndPos="41" srcRngStartln="71" srcRngStartPos="8" desc="if (balance &lt; BALANCE_GOLD_MIN) {" ElType="." rngLn="71">
          <Anns>
            <Ann msg="Condition evaluation: (balance &lt; 5000) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="729855832" locType="sr" srcRnghash="-2109136904" locRef="43" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" srcRngEndLn="73" ln="73" srcRngEndPos="48" srcRngStartln="73" srcRngStartPos="19" desc="(balance >= BALANCE_GOLD_MIN)" ElType=".P" rngLn="73">
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="'List' field '_accountsLog' is never read" ln="116" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" locStartln="116" sev="3" auth="Mark Wilson" locRef="43" rule="UC.AURCO" lnHash="2040230778" pkg="examples.nbank" rule.header="Avoid collection objects that are never read" tool="jtest" lineHash="2040230778" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" locEndPos="36" locType="sr" urgent="true" hash="-2109136904" locEndLn="116" goals="1," />
    <StdViol msg="&quot;!=&quot; is used when comparing 'String' Objects. 'equals()' should be used instead" ln="104" locFile="/com.parasoft:demo/src/main/java/examples/nbank/CreditCard.java" locStartln="104" sev="2" auth="tpieczkowski" locRef="47" rule="PB.CUB.UEIC" lnHash="1821395361" pkg="examples.nbank" rule.header="Do not use '==' or '!=' to compare objects" tool="jtest" lineHash="1821395361" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" risk="Undefined" lang="java" locEndPos="42" locType="sr" urgent="true" prio="Not Defined" hash="3241407" locEndLn="104" goals="1," />
    <StdViol msg="'0' is not a valid index value for this method call" ln="86" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" locStartln="86" sev="1" auth="Mark Wilson" locRef="48" rule="JDBC.BRSA" lnHash="612379775" pkg="examples.nbank" rule.header="Ensure index is valid in JDBC method invocation" tool="jtest" lineHash="612379775" locStartPos="40" analyzer="com.parasoft.jtest.standards.checkers.java" risk="Undefined" lang="java" locEndPos="41" locType="sr" urgent="true" prio="Not Defined" hash="2046383933" locEndLn="86" goals="1," />
    <FlowViol msg="JDBC statement not closed: statement" ln="95" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" ruleSAFMsg="Point where the allocated resource is lost" FirstElSrcRngEndPos="94" auth="Mark Wilson" FirstElSrcRngEndLn="84" rule="BD.RES.LEAKS" FirstElSrcRngStartPos="12" lnHash="30537853" ruleSCSCMsg="Point where the resource is allocated" pkg="examples.nbank" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" rule.header="Ensure resources are deallocated" FirstElSrcRngStartln="84" locStartPos="4" analyzer="com.parasoft.jtest.flowanalyzer" id="117974623" lang="java" locEndPos="5" urgent="true" prio="Not Defined" locEndLn="95" goals="1," locStartln="95" sev="1" locRef="48" tool="jtest" lineHash="30537853" risk="Undefined" locType="sr" hash="2046383933" causeLocRef="48">
      <Props>
        <Prop key="Tracked variables" val="Allocated resource variable" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-1809401071" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="70" ln="70" srcRngEndPos="37" srcRngStartln="70" srcRngStartPos="8" desc="Connection connection = null;" ElType="." rngLn="70" />
        <ElDesc lineHash="-185589454" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="71" ln="71" srcRngEndPos="43" srcRngStartln="71" srcRngStartPos="8" desc="PreparedStatement statement = null;" ElType="." rngLn="71" />
        <ElDesc lineHash="-1589018789" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="72" ln="72" srcRngEndPos="35" srcRngStartln="72" srcRngStartPos="8" desc="ResultSet resultSet = null;" ElType="." rngLn="72" />
        <ElDesc lineHash="-439487439" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="74" ln="74" srcRngEndPos="53" srcRngStartln="74" srcRngStartPos="12" desc="Class.forName(&quot;org.gjt.mm.mysql.Driver&quot;);" ElType="." rngLn="74" />
        <ElDesc lineHash="1774293749" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="75" ln="75" srcRngEndPos="78" srcRngStartln="75" srcRngStartPos="12" desc="connection = DriverManager.getConnection(&quot;bank&quot;, &quot;bank&quot;, &quot;system&quot;)" ElType="." rngLn="75" />
        <ElDesc lineHash="-1624193955" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="84" ln="84" srcRngEndPos="94" srcRngStartln="84" srcRngStartPos="12" desc="statement = connection.prepareStatement(&quot;select * from accounts where id=&quot; + _ssn)" ElType=".C" rngLn="84">
          <Props>
            <Prop key="Tracked variables" val="statement" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is allocated" kind="cause" />
            <Ann msg="Allocated resource variable: statement" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1368283926" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="85" ln="85" srcRngEndPos="48" srcRngStartln="85" srcRngStartPos="12" desc="resultSet = statement.executeQuery()" ElType="!E" rngLn="85" thrownTypes="SQLException" throwingMethod="PreparedStatement.executeQuery">
          <Anns>
            <Ann msg="PreparedStatement.executeQuery() throws SQLException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1741528140" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="90" ln="90" srcRngEndPos="41" srcRngStartln="90" srcRngStartPos="10" desc="catch (SQLException exception)" ElType="." rngLn="90" />
        <ElDesc lineHash="875386708" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="91" ln="91" srcRngEndPos="94" srcRngStartln="91" srcRngStartPos="12" desc="System.err.println(&quot;Error loading data from database: &quot; + exception.getMessage());" ElType="." rngLn="91" />
        <ElDesc lineHash="14739560" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="92" ln="92" srcRngEndPos="25" srcRngStartln="92" srcRngStartPos="12" desc="return false;" ElType="." rngLn="92" />
        <ElDesc lineHash="30537853" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="95" ln="95" srcRngEndPos="5" srcRngStartln="95" srcRngStartPos="4" desc="}" ElType=".P" rngLn="95">
          <Props>
            <Prop key="Tracked variables" val="statement" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: statement" kind="var" />
            <Ann msg="Point where the allocated resource is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="JDBC resultset not closed: statement.resultSet(), resultSet" ln="95" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" ruleSAFMsg="Point where the allocated resource is lost" FirstElSrcRngEndPos="48" auth="Mark Wilson" FirstElSrcRngEndLn="85" rule="BD.RES.LEAKS" FirstElSrcRngStartPos="12" lnHash="30537853" ruleSCSCMsg="Point where the resource is allocated" pkg="examples.nbank" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" rule.header="Ensure resources are deallocated" FirstElSrcRngStartln="85" locStartPos="4" analyzer="com.parasoft.jtest.flowanalyzer" id="259349403" lang="java" locEndPos="5" urgent="true" prio="Not Defined" locEndLn="95" goals="1," locStartln="95" sev="1" locRef="48" tool="jtest" lineHash="30537853" risk="Undefined" locType="sr" hash="2046383933" causeLocRef="48">
      <Props>
        <Prop key="Tracked variables" val="Allocated resource variable" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-1809401071" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="70" ln="70" srcRngEndPos="37" srcRngStartln="70" srcRngStartPos="8" desc="Connection connection = null;" ElType="." rngLn="70" />
        <ElDesc lineHash="-185589454" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="71" ln="71" srcRngEndPos="43" srcRngStartln="71" srcRngStartPos="8" desc="PreparedStatement statement = null;" ElType="." rngLn="71" />
        <ElDesc lineHash="-1589018789" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="72" ln="72" srcRngEndPos="35" srcRngStartln="72" srcRngStartPos="8" desc="ResultSet resultSet = null;" ElType="." rngLn="72" />
        <ElDesc lineHash="-439487439" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="74" ln="74" srcRngEndPos="53" srcRngStartln="74" srcRngStartPos="12" desc="Class.forName(&quot;org.gjt.mm.mysql.Driver&quot;);" ElType="." rngLn="74" />
        <ElDesc lineHash="1774293749" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="75" ln="75" srcRngEndPos="78" srcRngStartln="75" srcRngStartPos="12" desc="connection = DriverManager.getConnection(&quot;bank&quot;, &quot;bank&quot;, &quot;system&quot;)" ElType="." rngLn="75" />
        <ElDesc lineHash="-1624193955" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="84" ln="84" srcRngEndPos="94" srcRngStartln="84" srcRngStartPos="12" desc="statement = connection.prepareStatement(&quot;select * from accounts where id=&quot; + _ssn)" ElType="." rngLn="84" />
        <ElDesc lineHash="-1368283926" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="85" ln="85" srcRngEndPos="48" srcRngStartln="85" srcRngStartPos="12" desc="resultSet = statement.executeQuery()" ElType=".C" rngLn="85">
          <Props>
            <Prop key="Tracked variables" val="statement.resultSet(), resultSet" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is allocated" kind="cause" />
            <Ann msg="Allocated resource variable: statement.resultSet(), resultSet" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="612379775" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="86" ln="86" srcRngEndPos="42" srcRngStartln="86" srcRngStartPos="12" desc="_name = resultSet.getString(0)" ElType="!E" rngLn="86" thrownTypes="SQLException" throwingMethod="ResultSet.getString">
          <Anns>
            <Ann msg="ResultSet.getString() throws SQLException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1741528140" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="90" ln="90" srcRngEndPos="41" srcRngStartln="90" srcRngStartPos="10" desc="catch (SQLException exception)" ElType="." rngLn="90" />
        <ElDesc lineHash="875386708" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="91" ln="91" srcRngEndPos="94" srcRngStartln="91" srcRngStartPos="12" desc="System.err.println(&quot;Error loading data from database: &quot; + exception.getMessage());" ElType="." rngLn="91" />
        <ElDesc lineHash="14739560" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="92" ln="92" srcRngEndPos="25" srcRngStartln="92" srcRngStartPos="12" desc="return false;" ElType="." rngLn="92" />
        <ElDesc lineHash="30537853" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="95" ln="95" srcRngEndPos="5" srcRngStartln="95" srcRngStartPos="4" desc="}" ElType=".P" rngLn="95">
          <Props>
            <Prop key="Tracked variables" val="statement.resultSet(), resultSet" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: statement.resultSet(), resultSet" kind="var" />
            <Ann msg="Point where the allocated resource is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="JDBC Connection not closed: connection" ln="95" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" ruleSAFMsg="Point where the allocated resource is lost" FirstElSrcRngEndPos="78" auth="Mark Wilson" FirstElSrcRngEndLn="75" rule="BD.RES.LEAKS" FirstElSrcRngStartPos="12" lnHash="30537853" ruleSCSCMsg="Point where the resource is allocated" pkg="examples.nbank" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" rule.header="Ensure resources are deallocated" FirstElSrcRngStartln="75" locStartPos="4" analyzer="com.parasoft.jtest.flowanalyzer" id="1559708005" lang="java" locEndPos="5" urgent="true" prio="Not Defined" locEndLn="95" goals="1," locStartln="95" sev="1" locRef="48" tool="jtest" lineHash="30537853" risk="Undefined" locType="sr" hash="2046383933" causeLocRef="48">
      <Props>
        <Prop key="Tracked variables" val="Allocated resource variable" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-1809401071" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="70" ln="70" srcRngEndPos="37" srcRngStartln="70" srcRngStartPos="8" desc="Connection connection = null;" ElType="." rngLn="70" />
        <ElDesc lineHash="-185589454" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="71" ln="71" srcRngEndPos="43" srcRngStartln="71" srcRngStartPos="8" desc="PreparedStatement statement = null;" ElType="." rngLn="71" />
        <ElDesc lineHash="-1589018789" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="72" ln="72" srcRngEndPos="35" srcRngStartln="72" srcRngStartPos="8" desc="ResultSet resultSet = null;" ElType="." rngLn="72" />
        <ElDesc lineHash="-439487439" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="74" ln="74" srcRngEndPos="53" srcRngStartln="74" srcRngStartPos="12" desc="Class.forName(&quot;org.gjt.mm.mysql.Driver&quot;);" ElType="." rngLn="74" />
        <ElDesc lineHash="1774293749" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="75" ln="75" srcRngEndPos="78" srcRngStartln="75" srcRngStartPos="12" desc="connection = DriverManager.getConnection(&quot;bank&quot;, &quot;bank&quot;, &quot;system&quot;)" ElType=".C" rngLn="75">
          <Props>
            <Prop key="Tracked variables" val="connection" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is allocated" kind="cause" />
            <Ann msg="Allocated resource variable: connection" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1624193955" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="84" ln="84" srcRngEndPos="94" srcRngStartln="84" srcRngStartPos="12" desc="statement = connection.prepareStatement(&quot;select * from accounts where id=&quot; + _ssn)" ElType="!E" rngLn="84" thrownTypes="SQLException" throwingMethod="Connection.prepareStatement">
          <Anns>
            <Ann msg="Connection.prepareStatement() throws SQLException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1741528140" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="90" ln="90" srcRngEndPos="41" srcRngStartln="90" srcRngStartPos="10" desc="catch (SQLException exception)" ElType="." rngLn="90" />
        <ElDesc lineHash="875386708" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="91" ln="91" srcRngEndPos="94" srcRngStartln="91" srcRngStartPos="12" desc="System.err.println(&quot;Error loading data from database: &quot; + exception.getMessage());" ElType="." rngLn="91" />
        <ElDesc lineHash="14739560" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="92" ln="92" srcRngEndPos="25" srcRngStartln="92" srcRngStartPos="12" desc="return false;" ElType="." rngLn="92" />
        <ElDesc lineHash="30537853" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="95" ln="95" srcRngEndPos="5" srcRngStartln="95" srcRngStartPos="4" desc="}" ElType=".P" rngLn="95">
          <Props>
            <Prop key="Tracked variables" val="connection" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: connection" kind="var" />
            <Ann msg="Point where the allocated resource is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="&quot;!=&quot; is used when comparing Objects. 'equals()' should be used instead" ln="46" locFile="/com.parasoft:demo/src/main/java/examples/queue/Queue.java" locStartln="46" sev="2" auth="tpieczkowski" locRef="54" rule="PB.CUB.UEIC" lnHash="-1001377924" pkg="examples.queue" rule.header="Do not use '==' or '!=' to compare objects" tool="jtest" lineHash="-1001377924" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" risk="Undefined" lang="java" locEndPos="30" locType="sr" urgent="true" prio="Not Defined" hash="-981357238" locEndLn="46" goals="1," />
    <StdViol msg="Member class could be declared &quot;static&quot;: QueueItem" ln="58" locFile="/com.parasoft:demo/src/main/java/examples/queue/Queue.java" locStartln="58" sev="3" auth="tpieczkowski" locRef="54" rule="OPT.SI" lnHash="-1361581318" pkg="examples.queue" rule.header="Declare member classes &quot;static&quot; if possible" tool="jtest" lineHash="-1361581318" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" risk="Undefined" lang="java" locEndPos="27" locType="sr" prio="Not Defined" hash="-981357238" locEndLn="58" goals="0," />
    <StdViol msg="The field '_connection' is used but is never assigned a non-&quot;null&quot; value" ln="59" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" locStartln="59" sev="2" auth="tpieczkowski" locRef="55" rule="PB.USC.FCBS" lnHash="-628236893" pkg="examples.security" rule.header="Avoid using &quot;private&quot; fields which are never given a meaningful value" tool="jtest" lineHash="-628236893" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" risk="Undefined" lang="java" locEndPos="34" locType="sr" prio="Not Defined" hash="-1145404863" locEndLn="59" goals="0," />
    <FlowViol msg="JDBC resultset not closed: stmt.resultSet(), rs" ln="102" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ruleSAFMsg="Point where the allocated resource is lost" FirstElSrcRngEndPos="41" auth="tpieczkowski" FirstElSrcRngEndLn="91" rule="BD.RES.LEAKS" FirstElSrcRngStartPos="12" lnHash="30537853" ruleSCSCMsg="Point where the resource is allocated" pkg="examples.security" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" rule.header="Ensure resources are deallocated" FirstElSrcRngStartln="91" locStartPos="4" analyzer="com.parasoft.jtest.flowanalyzer" id="-996506264" lang="java" locEndPos="5" urgent="true" prio="Not Defined" locEndLn="102" goals="1," locStartln="102" sev="1" locRef="55" tool="jtest" lineHash="30537853" risk="Undefined" locType="sr" hash="-1145404863" causeLocRef="55">
      <Props>
        <Prop key="Tracked variables" val="Allocated resource variable" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-271783734" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="83" ln="83" srcRngEndPos="30" srcRngStartln="83" srcRngStartPos="8" desc="Statement stmt = null;" ElType="." rngLn="83" />
        <ElDesc lineHash="920994605" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="84" ln="84" srcRngEndPos="28" srcRngStartln="84" srcRngStartPos="8" desc="ResultSet rs = null;" ElType="." rngLn="84" />
        <ElDesc lineHash="-168135453" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="89" ln="89" srcRngEndPos="115" srcRngStartln="89" srcRngStartPos="12" desc="String query = &quot;SELECT * FROM users WHERE username='&quot; + username + &quot;' AND password='&quot; + password + &quot;'&quot;;" ElType="." rngLn="89" />
        <ElDesc lineHash="-1686616749" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="90" ln="90" srcRngEndPos="48" srcRngStartln="90" srcRngStartPos="12" desc="stmt = _connection.createStatement()" ElType="." rngLn="90" />
        <ElDesc lineHash="849041673" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="91" ln="91" srcRngEndPos="41" srcRngStartln="91" srcRngStartPos="12" desc="rs = stmt.executeQuery(query)" ElType=".C" rngLn="91">
          <Props>
            <Prop key="Tracked variables" val="stmt.resultSet(), rs" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is allocated" kind="cause" />
            <Ann msg="Allocated resource variable: stmt.resultSet(), rs" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-846123640" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="92" ln="92" srcRngEndPos="28" srcRngStartln="92" srcRngStartPos="12" desc="if (rs.next()) {" ElType="." rngLn="92">
          <Anns>
            <Ann msg="Condition evaluation: rs.next() (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="14739560" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="97" ln="97" srcRngEndPos="25" srcRngStartln="97" srcRngStartPos="12" desc="return false;" ElType="." rngLn="97" />
        <ElDesc lineHash="30537853" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="102" ln="102" srcRngEndPos="5" srcRngStartln="102" srcRngStartPos="4" desc="}" ElType=".P" rngLn="102">
          <Props>
            <Prop key="Tracked variables" val="stmt.resultSet(), rs" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: stmt.resultSet(), rs" kind="var" />
            <Ann msg="Point where the allocated resource is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="JDBC statement not closed: stmt" ln="102" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ruleSAFMsg="Point where the allocated resource is lost" FirstElSrcRngEndPos="48" auth="tpieczkowski" FirstElSrcRngEndLn="90" rule="BD.RES.LEAKS" FirstElSrcRngStartPos="12" lnHash="30537853" ruleSCSCMsg="Point where the resource is allocated" pkg="examples.security" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" rule.header="Ensure resources are deallocated" FirstElSrcRngStartln="90" locStartPos="4" analyzer="com.parasoft.jtest.flowanalyzer" id="1551110277" lang="java" locEndPos="5" urgent="true" prio="Not Defined" locEndLn="102" goals="1," locStartln="102" sev="1" locRef="55" tool="jtest" lineHash="30537853" risk="Undefined" locType="sr" hash="-1145404863" causeLocRef="55">
      <Props>
        <Prop key="Tracked variables" val="Allocated resource variable" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-271783734" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="83" ln="83" srcRngEndPos="30" srcRngStartln="83" srcRngStartPos="8" desc="Statement stmt = null;" ElType="." rngLn="83" />
        <ElDesc lineHash="920994605" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="84" ln="84" srcRngEndPos="28" srcRngStartln="84" srcRngStartPos="8" desc="ResultSet rs = null;" ElType="." rngLn="84" />
        <ElDesc lineHash="-168135453" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="89" ln="89" srcRngEndPos="115" srcRngStartln="89" srcRngStartPos="12" desc="String query = &quot;SELECT * FROM users WHERE username='&quot; + username + &quot;' AND password='&quot; + password + &quot;'&quot;;" ElType="." rngLn="89" />
        <ElDesc lineHash="-1686616749" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="90" ln="90" srcRngEndPos="48" srcRngStartln="90" srcRngStartPos="12" desc="stmt = _connection.createStatement()" ElType=".C" rngLn="90">
          <Props>
            <Prop key="Tracked variables" val="stmt" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is allocated" kind="cause" />
            <Ann msg="Allocated resource variable: stmt" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="849041673" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="91" ln="91" srcRngEndPos="41" srcRngStartln="91" srcRngStartPos="12" desc="rs = stmt.executeQuery(query)" ElType="!E" rngLn="91" thrownTypes="SQLException" throwingMethod="Statement.executeQuery">
          <Anns>
            <Ann msg="Statement.executeQuery() throws SQLException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-975238224" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="98" ln="98" srcRngEndPos="30" srcRngStartln="98" srcRngStartPos="10" desc="catch (Throwable t)" ElType="." rngLn="98" />
        <ElDesc lineHash="14739560" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="100" ln="100" srcRngEndPos="25" srcRngStartln="100" srcRngStartPos="12" desc="return false;" ElType="." rngLn="100" />
        <ElDesc lineHash="30537853" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="102" ln="102" srcRngEndPos="5" srcRngStartln="102" srcRngStartPos="4" desc="}" ElType=".P" rngLn="102">
          <Props>
            <Prop key="Tracked variables" val="stmt" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: stmt" kind="var" />
            <Ann msg="Point where the allocated resource is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="JDBC statement not closed: stmt" ln="123" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ruleSAFMsg="Point where the allocated resource is lost" FirstElSrcRngEndPos="59" auth="tpieczkowski" FirstElSrcRngEndLn="120" rule="BD.RES.LEAKS" FirstElSrcRngStartPos="12" lnHash="-813710626" ruleSCSCMsg="Point where the resource is allocated" pkg="examples.security" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" rule.header="Ensure resources are deallocated" FirstElSrcRngStartln="120" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="1611772074" lang="java" locEndPos="9" urgent="true" prio="Not Defined" locEndLn="123" goals="1," locStartln="123" sev="1" locRef="55" tool="jtest" lineHash="-813710626" risk="Undefined" locType="sr" hash="-1145404863" causeLocRef="55">
      <Props>
        <Prop key="Tracked variables" val="Allocated resource variable" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-2050969790" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="120" ln="120" srcRngEndPos="59" srcRngStartln="120" srcRngStartPos="12" desc="Statement stmt = _connection.createStatement();" ElType=".C" rngLn="120">
          <Props>
            <Prop key="Tracked variables" val="stmt" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is allocated" kind="cause" />
            <Ann msg="Allocated resource variable: stmt" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="351897144" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="121" ln="121" srcRngEndPos="104" srcRngStartln="121" srcRngStartPos="12" desc="String query = &quot;INSERT INTO invalid_logins VALUES ('&quot; + username + &quot;', '&quot; + password + &quot;')&quot;;" ElType="." rngLn="121" />
        <ElDesc lineHash="512503585" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="122" ln="122" srcRngEndPos="32" srcRngStartln="122" srcRngStartPos="12" desc="stmt.execute(query);" ElType="!E" rngLn="122" thrownTypes="SQLException" throwingMethod="Statement.execute">
          <Anns>
            <Ann msg="Statement.execute() throws SQLException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-813710626" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="123" ln="123" srcRngEndPos="9" srcRngStartln="123" srcRngStartPos="8" desc="}" ElType=".P" rngLn="123">
          <Props>
            <Prop key="Tracked variables" val="stmt" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: stmt" kind="var" />
            <Ann msg="Point where the allocated resource is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Variable 'pr' is never used" ln="32" locFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" locStartln="32" sev="3" auth="tpieczkowski" locRef="56" rule="UC.AURV" lnHash="1530337033" pkg="examples.servlets" rule.header="Avoid local variables that are never read" tool="jtest" lineHash="1530337033" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" risk="Undefined" lang="java" locEndPos="21" locType="sr" urgent="true" prio="Not Defined" hash="-1999350871" locEndLn="32" goals="1," />
    <FlowViol msg="Condition &quot;n > 0&quot; always evaluates to true" ln="33" locFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" ruleSAFMsg="Point where senseless condition is used" FirstElSrcRngEndPos="43" auth="tpieczkowski" FirstElSrcRngEndLn="26" rule="BD.PB.CC" FirstElSrcRngStartPos="16" lnHash="692340273" ruleSCSCMsg="Start of the path" pkg="examples.servlets" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" rule.header="Avoid conditions that always evaluate to the same value" FirstElSrcRngStartln="26" locStartPos="15" analyzer="com.parasoft.jtest.flowanalyzer" id="-2033553978" lang="java" locEndPos="27" urgent="true" prio="Not Defined" locEndLn="33" goals="1," locStartln="33" sev="2" locRef="56" tool="jtest" lineHash="692340273" risk="Undefined" locType="sr" hash="-1999350871" causeLocRef="56">
      <Props />
      <ElDescList>
        <ElDesc lineHash="203116546" locType="sr" srcRnghash="-1999350871" locRef="56" srcRngFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" srcRngEndLn="26" ln="26" srcRngEndPos="43" srcRngStartln="26" srcRngStartPos="16" desc="tryThis(ServletContext sc)" ElType=".C" rngLn="26">
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="971443945" locType="sr" srcRnghash="-1999350871" locRef="56" srcRngFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" srcRngEndLn="27" ln="27" srcRngEndPos="31" srcRngStartln="27" srcRngStartPos="8" desc="String hello = &quot;hello&quot;;" ElType="." rngLn="27" />
        <ElDesc lineHash="997799750" locType="sr" srcRnghash="-1999350871" locRef="56" srcRngFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" srcRngEndLn="28" ln="28" srcRngEndPos="53" srcRngStartln="28" srcRngStartPos="8" desc="String result = sc.getInitParameter(&quot;hello&quot;);" ElType="." rngLn="28" />
        <ElDesc lineHash="1005479687" locType="sr" srcRnghash="-1999350871" locRef="56" srcRngFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" srcRngEndLn="29" ln="29" srcRngEndPos="35" srcRngStartln="29" srcRngStartPos="8" desc="System.out.println(result);" ElType="." rngLn="29" />
        <ElDesc lineHash="-881802199" locType="sr" srcRnghash="-1999350871" locRef="56" srcRngFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" srcRngEndLn="30" ln="30" srcRngEndPos="32" srcRngStartln="30" srcRngStartPos="8" desc="int n = result.length();" ElType="!" rngLn="30" />
        <ElDesc lineHash="-261099875" locType="sr" srcRnghash="-1999350871" locRef="56" srcRngFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" srcRngEndLn="31" ln="31" srcRngEndPos="21" srcRngStartln="31" srcRngStartPos="8" desc="if (n == 0) {" ElType="." rngLn="31">
          <Anns>
            <Ann msg="Condition evaluation: (n == 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="692340273" locType="sr" srcRnghash="-1999350871" locRef="56" srcRngFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" srcRngEndLn="33" ln="33" srcRngEndPos="27" srcRngStartln="33" srcRngStartPos="15" desc="if (n > 0) {" ElType=".P" rngLn="33">
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Variable 'pr' is never used" ln="34" locFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" locStartln="34" sev="3" auth="tpieczkowski" locRef="56" rule="UC.AURV" lnHash="1012570095" pkg="examples.servlets" rule.header="Avoid local variables that are never read" tool="jtest" lineHash="1012570095" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" risk="Undefined" lang="java" locEndPos="21" locType="sr" urgent="true" prio="Not Defined" hash="-1999350871" locEndLn="34" goals="1," />
    <StdViol msg="Variable 'value' is never used" ln="79" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" locStartln="79" sev="3" auth="tpieczkowski" locRef="58" rule="UC.AURV" lnHash="100329092" pkg="examples.stackmachine" rule.header="Avoid local variables that are never read" tool="jtest" lineHash="100329092" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" risk="Undefined" lang="java" locEndPos="25" locType="sr" prio="Not Defined" hash="-1581767335" locEndLn="79" goals="0," />
  </StdViols>

      <TestedFilesDetails>
         <Total name="Total (Suppressed)" supp="0" total="67">
            <Project id="com.parasoft:demo" name="com.parasoft:demo" supp="0" total="67">
               <Res name="src" supp="0" total="67">
                  <Res name="main" supp="0" total="67">
                     <Res name="java" supp="0" total="67">
                        <Res name="examples" supp="0" total="67">
                           <Res name="eval" supp="0" total="2">
                              <Res loc="/com.parasoft:demo/src/main/java/examples/eval/Simple.java" locRef="1" locType="sr" name="Simple.java" supp="0" total="2" />
                           </Res>
                           <Res name="flowanalysis" supp="0" total="45">
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" locRef="2" locType="sr" name="AlwaysCloseGSS.java" supp="0" total="2" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" locRef="3" locType="sr" name="AlwaysCloseImages.java" supp="0" total="2" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseLogging.java" locRef="4" locType="sr" name="AlwaysCloseLogging.java" supp="0" total="1" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" locRef="5" locType="sr" name="AlwaysCloseNIOChannels.java" supp="0" total="4" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" locRef="6" locType="sr" name="AlwaysCloseRAFs.java" supp="0" total="4" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" locRef="7" locType="sr" name="AlwaysCloseSockets.java" supp="0" total="3" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" locRef="8" locType="sr" name="AlwaysCloseXMLEncDec.java" supp="0" total="2" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/DereferenceBeforeNullCheck.java" locRef="9" locType="sr" name="DereferenceBeforeNullCheck.java" supp="0" total="0" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" locRef="10" locType="sr" name="DivisionByZero.java" supp="0" total="6" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" locRef="11" locType="sr" name="FilesInjection.java" supp="0" total="1" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" locRef="12" locType="sr" name="IncorrectIteratorUsage.java" supp="0" total="1" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" locRef="13" locType="sr" name="InefficientCollectionRemoval.java" supp="0" total="2" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" locRef="14" locType="sr" name="InefficientMapRemoval.java" supp="0" total="4" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" locRef="15" locType="sr" name="InefficientMapUsage.java" supp="0" total="3" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" locRef="16" locType="sr" name="SQLInjection.java" supp="0" total="0" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" locRef="17" locType="sr" name="SystemInjection.java" supp="0" total="0" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" locRef="18" locType="sr" name="UnreachableCode.java" supp="0" total="3" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" locRef="19" locType="sr" name="UseBeforeInConstructorInitialization.java" supp="0" total="2" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" locRef="20" locType="sr" name="UseBeforeInitialization.java" supp="0" total="2" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" locRef="21" locType="sr" name="WebApplication.java" supp="0" total="0" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" locRef="22" locType="sr" name="XMLInjection.java" supp="0" total="0" />
                              <Res name="np" supp="0" total="3">
                                 <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" locRef="23" locType="sr" name="DatabaseObject.java" supp="0" total="0" />
                                 <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" locRef="24" locType="sr" name="ExtendedNullPointer.java" supp="0" total="0" />
                                 <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MessageFormatter.java" locRef="25" locType="sr" name="MessageFormatter.java" supp="0" total="0" />
                                 <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MyDictionary.java" locRef="26" locType="sr" name="MyDictionary.java" supp="0" total="1" />
                                 <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" locRef="27" locType="sr" name="NullPointer.java" supp="0" total="2" />
                              </Res>
                           </Res>
                           <Res name="junit" supp="0" total="0">
                              <Res loc="/com.parasoft:demo/src/main/java/examples/junit/ChoosingConstructor.java" locRef="28" locType="sr" name="ChoosingConstructor.java" supp="0" total="0" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/junit/CustomMoney.java" locRef="29" locType="sr" name="CustomMoney.java" supp="0" total="0" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/junit/IMoney.java" locRef="30" locType="sr" name="IMoney.java" supp="0" total="0" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/junit/IntegerComparator.java" locRef="31" locType="sr" name="IntegerComparator.java" supp="0" total="0" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/junit/Money.java" locRef="32" locType="sr" name="Money.java" supp="0" total="0" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" locRef="33" locType="sr" name="MoneyBag.java" supp="0" total="0" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/junit/NaiveStringBuilder.java" locRef="34" locType="sr" name="NaiveStringBuilder.java" supp="0" total="0" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/junit/SimpleObjectHandler.java" locRef="35" locType="sr" name="SimpleObjectHandler.java" supp="0" total="0" />
                           </Res>
                           <Res name="metrics" supp="0" total="1">
                              <Res loc="/com.parasoft:demo/src/main/java/examples/metrics/MetricsExample.java" locRef="36" locType="sr" name="MetricsExample.java" supp="0" total="1" />
                           </Res>
                           <Res name="mock" supp="0" total="1">
                              <Res loc="/com.parasoft:demo/src/main/java/examples/mock/CharacterReader.java" locRef="37" locType="sr" name="CharacterReader.java" supp="0" total="0" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/mock/ConstructorExample.java" locRef="38" locType="sr" name="ConstructorExample.java" supp="0" total="1" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/mock/FileExample.java" locRef="39" locType="sr" name="FileExample.java" supp="0" total="0" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/mock/Interpreter.java" locRef="40" locType="sr" name="Interpreter.java" supp="0" total="0" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/mock/MultiSourceCharacterReader.java" locRef="41" locType="sr" name="MultiSourceCharacterReader.java" supp="0" total="0" />
                           </Res>
                           <Res name="nbank" supp="0" total="8">
                              <Res loc="/com.parasoft:demo/src/main/java/examples/nbank/AbstractTransaction.java" locRef="42" locType="sr" name="AbstractTransaction.java" supp="0" total="0" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" locRef="43" locType="sr" name="Account.java" supp="0" total="3" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/nbank/Bank.java" locRef="44" locType="sr" name="Bank.java" supp="0" total="0" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/nbank/BankState.java" locRef="45" locType="sr" name="BankState.java" supp="0" total="0" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/nbank/ConnectionException.java" locRef="46" locType="sr" name="ConnectionException.java" supp="0" total="0" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/nbank/CreditCard.java" locRef="47" locType="sr" name="CreditCard.java" supp="0" total="1" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" locRef="48" locType="sr" name="Customer.java" supp="0" total="4" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/nbank/DepositTransaction.java" locRef="49" locType="sr" name="DepositTransaction.java" supp="0" total="0" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/nbank/ICreditAgency.java" locRef="50" locType="sr" name="ICreditAgency.java" supp="0" total="0" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/nbank/ITransaction.java" locRef="51" locType="sr" name="ITransaction.java" supp="0" total="0" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/nbank/LogAccountInfo.java" locRef="52" locType="sr" name="LogAccountInfo.java" supp="0" total="0" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/nbank/WithdrawalTransaction.java" locRef="53" locType="sr" name="WithdrawalTransaction.java" supp="0" total="0" />
                           </Res>
                           <Res name="queue" supp="0" total="2">
                              <Res loc="/com.parasoft:demo/src/main/java/examples/queue/Queue.java" locRef="54" locType="sr" name="Queue.java" supp="0" total="2" />
                           </Res>
                           <Res name="security" supp="0" total="4">
                              <Res loc="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" locRef="55" locType="sr" name="InputValidation.java" supp="0" total="4" />
                           </Res>
                           <Res name="servlets" supp="0" total="3">
                              <Res loc="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" locRef="56" locType="sr" name="ExampleServlet.java" supp="0" total="3" />
                           </Res>
                           <Res name="stackmachine" supp="0" total="1">
                              <Res loc="/com.parasoft:demo/src/main/java/examples/stackmachine/AbstractStackMachine.java" locRef="57" locType="sr" name="AbstractStackMachine.java" supp="0" total="0" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" locRef="58" locType="sr" name="CommandLineStackMachine.java" supp="0" total="1" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/stackmachine/CustomListRenderer.java" locRef="59" locType="sr" name="CustomListRenderer.java" supp="0" total="0" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/stackmachine/FifoStackMachine.java" locRef="60" locType="sr" name="FifoStackMachine.java" supp="0" total="0" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/stackmachine/LifoStackMachine.java" locRef="61" locType="sr" name="LifoStackMachine.java" supp="0" total="0" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" locRef="62" locType="sr" name="RunnableStackMachine.java" supp="0" total="0" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/stackmachine/StackInterface.java" locRef="63" locType="sr" name="StackInterface.java" supp="0" total="0" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/stackmachine/StackList.java" locRef="64" locType="sr" name="StackList.java" supp="0" total="0" />
                           </Res>
                           <Res name="suppress" supp="0" total="0">
                              <Res loc="/com.parasoft:demo/src/main/java/examples/suppress/AllFileSuppress.java" locRef="65" locType="sr" name="AllFileSuppress.java" supp="0" total="0" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/suppress/Example.java" locRef="66" locType="sr" name="Example.java" supp="0" total="0" />
                           </Res>
                        </Res>
                     </Res>
                  </Res>
               </Res>
               <Res name="META-INF" supp="0" total="0">
                  <Res loc="/com.parasoft:demo/META-INF/MANIFEST.MF" locRef="67" locType="sr" name="MANIFEST.MF" supp="0" total="0" />
               </Res>
            </Project>
         </Total>
      </TestedFilesDetails>
   </CodingStandards>
   <Statistics>
      
   </Statistics>
</ResultsSession>
