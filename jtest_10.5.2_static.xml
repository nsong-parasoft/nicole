<?xml version='1.0' encoding='UTF-8'?>
<ResultsSession buildId="2021-11-10" climode="true" execEnv="win32_x86_64" hasViols="true" id="1634740139609" lang="en_US" machine="CONQUEROR" prjModule="com.parasoft:demo" project="" tag="${scontrol_branch}-win32_x86_64" time="2021-11-10T15:11:08+01:00" toolDispName="Jtest" toolId="jtest" toolName="DTP Engine for Java" toolVer="2021.2.0" user="mgorecka">
   <TestConfig machine="CONQUEROR" name="Demo Configuration" pseudoUrl="builtin://Demo Configuration" user="mgorecka" />
   <Authors>
      <Author id="dev1" name="mgorecka" />
      <Author id="dev2" name="John" />
      <Author id="dev3" name="Mark Wilson" />
      <Author id="dev4" name="Developer007" />
      <Author id="dev5" name="Gina" />
      <Author id="dev6" name="staff" />
      <Author id="dev7" name="Elizabeth" />
   </Authors>
   <Analyzers>
      <Analyzer id="com.parasoft.jtest.flowanalyzer" name="Parasoft Java Flow Analyzer" ver="10.5.2.20211014B3008" />
      <Analyzer id="com.parasoft.jtest.globals.ioc.springxml.analyzer.IOCAnalyzer" name="Parasoft IOC Analyzer" ver="10.5.2.20211026" />
      <Analyzer id="com.parasoft.jtest.standards.checkers.java" name="Parasoft Java Static Analyzer" ver="10.5.2.20211026" />
      <Analyzer id="com.parasoft.jtest.standards.metrics.analyzer" name="Parasoft Metrics Analyzer" ver="10.5.2.20211026" />
      <Analyzer id="com.parasoft.jtest.standards.checkers.rulewizard" name="Parasoft RuleWizard Static Analyzer" ver="10.5.2.20211026" />
   </Analyzers>
   <VersionInfos>
      <StorageInfo ownerId="" resultId="ISetupResult" ver="1" ver10x="1" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IMetricsViolation" ver="2" ver10x="1" />
      <StorageInfo ownerId="" resultId="IExecutionViolation" ver="1" ver10x="1" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IDupCodeViolation" ver="2" ver10x="1" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IFlowAnalysisViolation" ver="2" ver10x="1" />
      <StorageInfo ownerId="" resultId="IFunctionalViolation" ver="1" ver10x="1" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="ICodingStandardsViolation" ver="2" ver10x="1" />
      <StorageInfo ownerId="" resultId="IUnitTestViolation" ver="1" ver10x="1" />
   </VersionInfos>
   <Goals tsks="198">
      
   </Goals>
   <Metrics>
      <Metric avg="1.626" disp="true" id="METRIC.CC" max="10" min="1" name="McCabe Cyclomatic Complexity" noi="310" stddev="1.224">
         <Info avg="1.626" disp="true" elem="com.parasoft:demo" max="10" min="1" noi="310" stddev="1.224" />
      </Metric>
      <Metric avg="0.377" disp="true" id="METRIC.NBD" max="8" min="0" name="Nested Blocks Depth" noi="310" stddev="0.78">
         <Info avg="0.377" disp="true" elem="com.parasoft:demo" max="8" min="0" noi="310" stddev="0.78" />
      </Metric>
      <Metric avg="56.879" disp="true" id="METRIC.NOPLIF" max="396" min="8" name="Physical Lines in Files" noi="66" stddev="55.785">
         <Info avg="56.879" disp="true" elem="com.parasoft:demo" max="396" min="8" noi="66" stddev="55.785" />
      </Metric>
      <Metric avg="6.594" disp="true" id="METRIC.NOSLIM" max="38" min="1" name="Source Lines in Methods" noi="310" stddev="5.651">
         <Info avg="6.594" disp="true" elem="com.parasoft:demo" max="38" min="1" noi="310" stddev="5.651" />
      </Metric>
   </Metrics>
   <Scope>
      <Repositories />
      <Locations>
         <Loc hash="-2121569923" locRef="1" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/eval/Simple.java" totLns="68" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/eval/Simple.java" />
         <Loc hash="-32679949" locRef="2" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" totLns="34" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" />
         <Loc hash="1088242968" locRef="3" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/AlwaysCloseImages.java" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" />
         <Loc hash="-89489575" locRef="4" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/AlwaysCloseLogging.java" totLns="25" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/flowanalysis/AlwaysCloseLogging.java" />
         <Loc hash="1710944294" locRef="5" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" />
         <Loc hash="-1842798386" locRef="6" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" />
         <Loc hash="-69784133" locRef="7" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" />
         <Loc hash="-1630627415" locRef="8" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" />
         <Loc hash="726838777" locRef="9" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/DereferenceBeforeNullCheck.java" totLns="55" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/flowanalysis/DereferenceBeforeNullCheck.java" />
         <Loc hash="-1891737324" locRef="10" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/DivisionByZero.java" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" />
         <Loc hash="686946442" locRef="11" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/FilesInjection.java" totLns="30" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/flowanalysis/FilesInjection.java" />
         <Loc hash="438092426" locRef="12" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" />
         <Loc hash="1816383512" locRef="13" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" />
         <Loc hash="-417185865" locRef="14" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/InefficientMapRemoval.java" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" />
         <Loc hash="-359565455" locRef="15" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/InefficientMapUsage.java" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" />
         <Loc hash="1862789318" locRef="16" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/SQLInjection.java" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/flowanalysis/SQLInjection.java" />
         <Loc hash="-152258803" locRef="17" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/SystemInjection.java" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/flowanalysis/SystemInjection.java" />
         <Loc hash="1709312165" locRef="18" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/UnreachableCode.java" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/flowanalysis/UnreachableCode.java" />
         <Loc hash="-635152949" locRef="19" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" />
         <Loc hash="2110246917" locRef="20" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/UseBeforeInitialization.java" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" />
         <Loc hash="565976681" locRef="21" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/WebApplication.java" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/flowanalysis/WebApplication.java" />
         <Loc hash="-367659159" locRef="22" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/XMLInjection.java" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/flowanalysis/XMLInjection.java" />
         <Loc hash="635578452" locRef="23" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/np/DatabaseObject.java" totLns="63" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" />
         <Loc hash="1118499003" locRef="24" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" totLns="57" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" />
         <Loc hash="796982299" locRef="25" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/np/MessageFormatter.java" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/flowanalysis/np/MessageFormatter.java" />
         <Loc hash="1067996598" locRef="26" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/np/MyDictionary.java" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/flowanalysis/np/MyDictionary.java" />
         <Loc hash="-51902665" locRef="27" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/flowanalysis/np/NullPointer.java" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/flowanalysis/np/NullPointer.java" />
         <Loc hash="13842231" locRef="28" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/junit/ChoosingConstructor.java" totLns="59" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/junit/ChoosingConstructor.java" />
         <Loc hash="1460192582" locRef="29" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/junit/CustomMoney.java" totLns="15" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/junit/CustomMoney.java" />
         <Loc hash="-47973091" locRef="30" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/junit/IMoney.java" totLns="52" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/junit/IMoney.java" />
         <Loc hash="1622384320" locRef="31" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/junit/IntegerComparator.java" totLns="15" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/junit/IntegerComparator.java" />
         <Loc hash="-1765121077" locRef="32" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/junit/Money.java" totLns="91" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/junit/Money.java" />
         <Loc hash="-113332437" locRef="33" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/junit/MoneyBag.java" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/junit/MoneyBag.java" />
         <Loc hash="1434598914" locRef="34" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/junit/NaiveStringBuilder.java" totLns="26" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/junit/NaiveStringBuilder.java" />
         <Loc hash="1554031451" locRef="35" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/junit/SimpleObjectHandler.java" totLns="39" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/junit/SimpleObjectHandler.java" />
         <Loc hash="-1994237948" locRef="36" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/metrics/MetricsExample.java" totLns="52" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/metrics/MetricsExample.java" />
         <Loc hash="1497176251" locRef="37" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/mock/CharacterReader.java" totLns="57" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/mock/CharacterReader.java" />
         <Loc hash="-458905718" locRef="38" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/mock/ConstructorExample.java" totLns="15" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/mock/ConstructorExample.java" />
         <Loc hash="-220867651" locRef="39" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/mock/FileExample.java" totLns="35" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/mock/FileExample.java" />
         <Loc hash="-141343473" locRef="40" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/mock/Interpreter.java" totLns="28" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/mock/Interpreter.java" />
         <Loc hash="-762775565" locRef="41" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/mock/MultiSourceCharacterReader.java" totLns="34" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/mock/MultiSourceCharacterReader.java" />
         <Loc hash="-251506569" locRef="42" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/nbank/AbstractTransaction.java" totLns="22" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/nbank/AbstractTransaction.java" />
         <Loc hash="-2109136904" locRef="43" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/nbank/Account.java" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/nbank/Account.java" />
         <Loc hash="-1683403269" locRef="44" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/nbank/Bank.java" totLns="82" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/nbank/Bank.java" />
         <Loc hash="2120971007" locRef="45" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/nbank/BankState.java" totLns="22" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/nbank/BankState.java" />
         <Loc hash="-368683629" locRef="46" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/nbank/ConnectionException.java" totLns="8" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/nbank/ConnectionException.java" />
         <Loc hash="3241407" locRef="47" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/nbank/CreditCard.java" totLns="199" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/nbank/CreditCard.java" />
         <Loc hash="2046383933" locRef="48" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/nbank/Customer.java" totLns="106" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/nbank/Customer.java" />
         <Loc hash="-249228641" locRef="49" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/nbank/DepositTransaction.java" totLns="24" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/nbank/DepositTransaction.java" />
         <Loc hash="1948271967" locRef="50" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/nbank/ICreditAgency.java" totLns="8" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/nbank/ICreditAgency.java" />
         <Loc hash="1398902534" locRef="51" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/nbank/ITransaction.java" totLns="25" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/nbank/ITransaction.java" />
         <Loc hash="-179143843" locRef="52" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/nbank/LogAccountInfo.java" totLns="48" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/nbank/LogAccountInfo.java" />
         <Loc hash="-1206559161" locRef="53" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/nbank/WithdrawalTransaction.java" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/nbank/WithdrawalTransaction.java" />
         <Loc hash="-981357238" locRef="54" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/queue/Queue.java" totLns="83" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/queue/Queue.java" />
         <Loc hash="-1145404863" locRef="55" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/security/InputValidation.java" totLns="127" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/security/InputValidation.java" />
         <Loc hash="-1999350871" locRef="56" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/servlets/ExampleServlet.java" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/servlets/ExampleServlet.java" />
         <Loc hash="1553680728" locRef="57" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/stackmachine/AbstractStackMachine.java" totLns="123" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/stackmachine/AbstractStackMachine.java" />
         <Loc hash="-1581767335" locRef="58" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/stackmachine/CommandLineStackMachine.java" totLns="147" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" />
         <Loc hash="1782082961" locRef="59" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/stackmachine/CustomListRenderer.java" totLns="30" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/stackmachine/CustomListRenderer.java" />
         <Loc hash="-726989549" locRef="60" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/stackmachine/FifoStackMachine.java" totLns="39" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/stackmachine/FifoStackMachine.java" />
         <Loc hash="-1559173645" locRef="61" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/stackmachine/LifoStackMachine.java" totLns="39" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/stackmachine/LifoStackMachine.java" />
         <Loc hash="-339219917" locRef="62" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/stackmachine/RunnableStackMachine.java" totLns="396" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" />
         <Loc hash="963698942" locRef="63" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/stackmachine/StackInterface.java" totLns="26" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/stackmachine/StackInterface.java" />
         <Loc hash="-1082942404" locRef="64" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/stackmachine/StackList.java" totLns="100" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/stackmachine/StackList.java" />
         <Loc hash="-2129128806" locRef="65" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/suppress/AllFileSuppress.java" totLns="13" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/suppress/AllFileSuppress.java" />
         <Loc hash="2004133938" locRef="66" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="src/main/java/examples/suppress/Example.java" totLns="10" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/src/main/java/examples/suppress/Example.java" />
         <Loc hash="836988928" locRef="67" projId="com.parasoft:demo" projPath="/com.parasoft:demo" project="com.parasoft:demo" resProjPath="META-INF/MANIFEST.MF" totLns="3" uri="file://CONQUEROR/C:/Program%20Files/Parasoft/parasoft_jtest_2021.2.0_win32_x86_64/jtest/examples/demo/META-INF/MANIFEST.MF" />
      </Locations>
   </Scope>
   
  <SetupProblems>
    <Problem msg="Could not report coverage" sev="2" totErrs="1" type="Coverage">
      <ErrorList>
        <Error val="Could not find coverage files, probably instrumentation was not done." />
      </ErrorList>
    </Problem>
  </SetupProblems>

   <CodingStandards ownerId="com.parasoft.xtest.checkers.api.standards" time="0:00:05">
      <Projects>
         <Project bdCheckedFiles="0" bdTotalFiles="0" checkedFiles="67" checkedLns="3757" id="com.parasoft:demo" name="com.parasoft:demo" qfixErrs="0" suppErrs="1" totErrs="808" totFiles="67" totLns="3757" />
      </Projects>
      
      
      <Rules>
         <CategoriesList>
            <Category authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" desc="Flow Analysis" name="BD" rules="74" total="0">
               <Category authTot="11;2;2;0;0;0;0;" authUrg="11;2;2;0;0;0;0;" desc="Possible Bugs" name="BD.PB" rules="23" total="15" />
               <Category authTot="5;0;0;0;0;0;0;" authUrg="5;0;0;0;0;0;0;" desc="Optimization" name="BD.OPT" rules="3" total="5" />
               <Category authTot="4;0;0;0;0;0;0;" authUrg="4;0;0;0;0;0;0;" desc="Collections" name="BD.CO" rules="1" total="4" />
               <Category authTot="11;0;0;4;0;0;0;" authUrg="11;0;0;4;0;0;0;" desc="Security" name="BD.SECURITY" rules="35" total="15" />
               <Category authTot="12;0;0;0;0;0;0;" authUrg="11;0;0;0;0;0;0;" desc="Exceptions" name="BD.EXCEPT" rules="1" total="12" />
            </Category>
            <Category authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" desc="Coding Conventions" name="CODSTA" rules="112" total="0">
               <Category authTot="4;0;1;0;0;0;0;" authUrg="0;0;1;0;0;0;0;" desc="Poor Object Oriented Design" name="CODSTA.POD" rules="11" total="5" />
               <Category authTot="37;2;5;4;0;1;0;" authUrg="0;2;5;4;0;1;0;" desc="Bad Practice" name="CODSTA.BP" rules="24" total="49" />
               <Category authTot="2;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" desc="Organization" name="CODSTA.ORG" rules="15" total="2" />
               <Category authTot="27;0;0;0;0;0;0;" authUrg="1;0;0;0;0;0;0;" desc="Error-Prone Coding" name="CODSTA.EPC" rules="15" total="27" />
               <Category authTot="30;0;2;0;0;0;4;" authUrg="0;0;2;0;0;0;4;" desc="Readability" name="CODSTA.READ" rules="39" total="36" />
               <Category authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" desc="Overriding and Implementing Methods" name="CODSTA.OIM" rules="8" total="0" />
            </Category>
            <Category authTot="24;0;0;0;0;0;0;" authUrg="2;0;0;0;0;0;0;" desc="Design by Contract" name="DBC" rules="18" total="24" />
            <Category authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" desc="Exceptions" name="EXCEPT" rules="19" total="0" />
            <Category authTot="65;4;2;1;2;12;1;" authUrg="2;4;2;1;2;12;1;" desc="Formatting" name="FORMAT" rules="37" total="87" />
            <Category authTot="0;0;1;0;0;0;0;" authUrg="0;0;1;0;0;0;0;" desc="Garbage Collection" name="GC" rules="12" total="1" />
            <Category authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" desc="Initialization" name="INIT" rules="14" total="0" />
            <Category authTot="8;0;0;0;1;0;0;" authUrg="1;0;0;0;1;0;0;" desc="Internationalization" name="INTER" rules="17" total="9" />
            <Category authTot="169;8;11;0;2;20;8;" authUrg="1;8;11;0;2;20;8;" desc="Javadoc Comments" name="JAVADOC" rules="25" total="218" />
            <Category authTot="0;0;3;0;0;0;0;" authUrg="0;0;3;0;0;0;0;" desc="Java Database Connectivity" name="JDBC" rules="10" total="3" />
            <Category authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" desc="JUnit Test Case" name="JUNIT" rules="31" total="0" />
            <Category authTot="12;0;1;1;0;0;0;" authUrg="0;0;1;1;0;0;0;" desc="Naming Conventions" name="NAMING" rules="38" total="14" />
            <Category authTot="31;3;0;1;1;24;0;" authUrg="0;3;0;1;1;17;0;" desc="Object Oriented Programming" name="OOP" rules="35" total="60" />
            <Category authTot="22;0;1;0;1;0;1;" authUrg="0;0;1;0;1;0;1;" desc="Optimization" name="OPT" rules="56" total="25" />
            <Category authTot="6;0;0;0;0;0;0;" authUrg="1;0;0;0;0;0;0;" desc="Possible Bugs" name="PB" rules="142" total="6">
               <Category authTot="10;0;1;0;0;0;0;" authUrg="0;0;1;0;0;0;0;" desc="Typographical Errors" name="PB.TYPO" rules="12" total="11" />
               <Category authTot="3;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" desc="Useless Code" name="PB.USC" rules="12" total="3" />
               <Category authTot="8;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" desc="Numerical Errors" name="PB.NUM" rules="17" total="8" />
               <Category authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" desc="API Usage and Implementation" name="PB.API" rules="25" total="0" />
               <Category authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" desc="Logical Errors" name="PB.LOGIC" rules="18" total="0" />
               <Category authTot="2;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" desc="Confusing or Unintended Behavior" name="PB.CUB" rules="33" total="2" />
               <Category authTot="3;1;1;0;0;0;0;" authUrg="0;1;1;0;0;0;0;" desc="Runtime Exceptions" name="PB.RE" rules="17" total="5" />
            </Category>
            <Category authTot="6;0;0;1;0;0;0;" authUrg="0;0;0;1;0;0;0;" desc="Portability" name="PORT" rules="9" total="7" />
            <Category authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" desc="Security" name="SECURITY" rules="174" total="0">
               <Category authTot="7;0;1;0;0;0;0;" authUrg="0;0;1;0;0;0;0;" desc="Input-Based Attacks" name="SECURITY.IBA" rules="14" total="8" />
               <Category authTot="3;0;2;0;0;1;0;" authUrg="0;0;2;0;0;0;0;" desc="Weak Security Controls" name="SECURITY.WSC" rules="81" total="6" />
               <Category authTot="0;0;1;0;1;0;0;" authUrg="0;0;1;0;1;0;0;" desc="Erratic Application Behavior" name="SECURITY.EAB" rules="14" total="2" />
               <Category authTot="78;0;5;0;2;0;0;" authUrg="0;0;5;0;2;0;0;" desc="Exposing Sensitive Data" name="SECURITY.ESD" rules="13" total="85" />
            </Category>
            <Category authTot="10;0;0;0;0;11;0;" authUrg="0;0;0;0;0;0;0;" desc="Serialization" name="SERIAL" rules="18" total="21" />
            <Category authTot="6;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" desc="Servlets" name="SERVLET" rules="17" total="6" />
            <Category authTot="25;0;2;0;0;0;0;" authUrg="0;0;2;0;0;0;0;" desc="Unused Code" name="UC" rules="28" total="27" />
         </CategoriesList>
         <RulesList>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="4;0;0;0;0;0;0;" authUrg="4;0;0;0;0;0;0;" cat="BD.CO" desc="Do not modify collection while iterating over it" id="BD.CO.ITMOD" sev="1" total="4" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="12;0;0;0;0;0;0;" authUrg="11;0;0;0;0;0;0;" cat="BD.EXCEPT" desc="Avoid NullPointerException" id="BD.EXCEPT.NP" sev="1" total="12" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="3;0;0;0;0;0;0;" authUrg="3;0;0;0;0;0;0;" cat="BD.OPT" desc="Avoid inefficient removal of Collection elements" id="BD.OPT.INEFCOL" sev="3" total="3" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="1;0;0;0;0;0;0;" authUrg="1;0;0;0;0;0;0;" cat="BD.OPT" desc="Avoid inefficient iteration over Map entries" id="BD.OPT.INEFMAP" sev="3" total="1" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="1;0;0;0;0;0;0;" authUrg="1;0;0;0;0;0;0;" cat="BD.OPT" desc="Avoid inefficient removal of Map entries" id="BD.OPT.INEFMAPRM" sev="3" total="1" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="2;0;0;0;0;0;0;" authUrg="2;0;0;0;0;0;0;" cat="BD.PB" desc="Avoid use before explicit initialization" id="BD.PB.NOTEXPLINIT" sev="1" total="2" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="1;0;0;0;0;0;0;" authUrg="1;0;0;0;0;0;0;" cat="BD.PB" desc="Avoid use of fields before initialization in constructors and static initializers" id="BD.PB.NOTINITCTOR" sev="1" total="1" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="1;0;0;0;0;0;0;" authUrg="1;0;0;0;0;0;0;" cat="BD.PB" desc="Do not append null value to strings" id="BD.PB.STRNULL" sev="1" total="1" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="1;0;0;0;0;0;0;" authUrg="1;0;0;0;0;0;0;" cat="BD.PB" desc="Avoid division by zero" id="BD.PB.ZERO" sev="1" total="1" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="6;2;2;0;0;0;0;" authUrg="6;2;2;0;0;0;0;" cat="BD.PB" desc="Avoid conditions that always evaluate to the same value" id="BD.PB.CC" sev="2" total="10" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;0;1;0;0;0;" authUrg="0;0;0;1;0;0;0;" cat="BD.SECURITY" desc="Protect against Command injection" id="BD.SECURITY.TDCMD" sev="1" total="1" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;0;1;0;0;0;" authUrg="0;0;0;1;0;0;0;" cat="BD.SECURITY" desc="Protect against Environment injection" id="BD.SECURITY.TDENV" sev="1" total="1" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="1;0;0;0;0;0;0;" authUrg="1;0;0;0;0;0;0;" cat="BD.SECURITY" desc="Protect against File contents injection" id="BD.SECURITY.TDFILES" sev="1" total="1" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="1;0;0;0;0;0;0;" authUrg="1;0;0;0;0;0;0;" cat="BD.SECURITY" desc="Protect against File names injection" id="BD.SECURITY.TDFNAMES" sev="1" total="1" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;0;1;0;0;0;" authUrg="0;0;0;1;0;0;0;" cat="BD.SECURITY" desc="Protect against Library injection" id="BD.SECURITY.TDLIB" sev="1" total="1" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;0;1;0;0;0;" authUrg="0;0;0;1;0;0;0;" cat="BD.SECURITY" desc="Protect against Reflection injection" id="BD.SECURITY.TDRFL" sev="1" total="1" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="4;0;0;0;0;0;0;" authUrg="4;0;0;0;0;0;0;" cat="BD.SECURITY" desc="Protect against SQL injection" id="BD.SECURITY.TDSQL" sev="1" total="4" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="4;0;0;0;0;0;0;" authUrg="4;0;0;0;0;0;0;" cat="BD.SECURITY" desc="Protect against XML data injection" id="BD.SECURITY.TDXML" sev="1" total="4" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="1;0;0;0;0;0;0;" authUrg="1;0;0;0;0;0;0;" cat="BD.SECURITY" desc="Protect against XSS vulnerabilities" id="BD.SECURITY.TDXSS" sev="1" total="1" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="1;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="CODSTA.BP" desc="Avoid label statements" id="CODSTA.BP.AULS" sev="3" total="1" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="33;2;4;0;0;0;0;" authUrg="0;2;4;0;0;0;0;" cat="CODSTA.BP" desc="Provide a '{}' block for conditional statements" id="CODSTA.BP.BLK" sev="3" total="39" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;0;0;0;1;0;" authUrg="0;0;0;0;0;1;0;" cat="CODSTA.BP" desc="Do not call methods which terminates Java Virtual Machine" id="CODSTA.BP.EXIT" sev="3" total="1" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;0;1;0;0;0;0;" authUrg="0;0;1;0;0;0;0;" cat="CODSTA.BP" desc="Avoid or enforce usage of '*' form of import statements" id="CODSTA.BP.IMPTD" sev="3" total="4" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;0;4;0;0;0;" authUrg="0;0;0;4;0;0;0;" cat="CODSTA.BP" desc="Avoid declaring methods to throw general or unchecked Exception types" id="CODSTA.BP.NTX" sev="3" total="4" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="27;0;0;0;0;0;0;" authUrg="1;0;0;0;0;0;0;" cat="CODSTA.EPC" desc="Do not catch exception types which are too general or are unchecked exceptions" id="CODSTA.EPC.NCE" sev="3" total="27" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="CODSTA.OIM" desc="Override 'Object.hashCode()' when you override 'Object.equals()' and vice versa" id="CODSTA.OIM.OVERRIDE" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="2;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="CODSTA.ORG" desc="Do not have more than one type in each file" id="CODSTA.ORG.AMOC" sev="4" total="2" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="CODSTA.POD" desc="Avoid chains of &quot;instanceof&quot; comparisons" id="CODSTA.POD.CIOC" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="CODSTA.POD" desc="Use &quot;enum&quot; types instead of a series of &quot;static final&quot; constants" id="CODSTA.POD.UET" sev="3" total="1" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;0;1;0;0;0;0;" authUrg="0;0;1;0;0;0;0;" cat="CODSTA.POD" desc="Enforce or avoid the use of parameterized types" id="CODSTA.POD.UPT" sev="3" total="4" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="6;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="CODSTA.READ" desc="Avoid unnecessary calls to 'toString()'" id="CODSTA.READ.AUTS" sev="3" total="6" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="13;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="CODSTA.READ" desc="Comment empty blocks" id="CODSTA.READ.CEB" sev="3" total="13" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;0;0;0;0;0;1;" authUrg="0;0;0;0;0;0;1;" cat="CODSTA.READ" desc="Use 'isEmpty()' for Collections and Maps instead of comparing 'size()' to 0" id="CODSTA.READ.SIE" sev="3" total="2" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="6;0;0;0;0;0;3;" authUrg="0;0;0;0;0;0;3;" cat="CODSTA.READ" desc="Avoid or enforce the use of &quot;this&quot; and &quot;super&quot; expressions" id="CODSTA.READ.UATS" sev="3" total="9" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="4;0;2;0;0;0;0;" authUrg="0;0;2;0;0;0;0;" cat="CODSTA.READ" desc="Declare variables as close as possible to where they are used" id="CODSTA.READ.DVCU" sev="4" total="6" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="24;0;0;0;0;0;0;" authUrg="2;0;0;0;0;0;0;" cat="DBC" desc="Include a '@pre != null' tag for each parameter that is dereferenced before being checked for null" id="DBC.IPAN" sev="3" total="24" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="EXCEPT" desc="Do not declare any thrown exceptions in the 'main()' method" id="EXCEPT.MTE" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="EXCEPT" desc="Do not throw exception types which are too general or are unchecked exceptions" id="EXCEPT.NTERR" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="FORMAT" desc="Use '()' to separate complex expressions" id="FORMAT.APAREN" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="63;4;2;1;2;11;1;" authUrg="2;4;2;1;2;11;1;" cat="FORMAT" desc="Enforce number of blank line(s) before type declarations" id="FORMAT.BLCD" sev="3" total="84" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="FORMAT" desc="Do not leave spaces between qualified names and method invocations" id="FORMAT.DOT" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="FORMAT" desc="Enforce the order of annotations and modifiers" id="FORMAT.MO" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="FORMAT" desc="Write one statement per line" id="FORMAT.OSPL" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="FORMAT" desc="Enforce number of space character(s) on each side of an assignment operator" id="FORMAT.SAOP" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="2;0;0;0;0;1;0;" authUrg="0;0;0;0;0;1;0;" cat="FORMAT" desc="Enforce number of blank line(s) between major sections" id="FORMAT.U2BL" sev="3" total="3" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;1;0;0;0;0;" authUrg="0;0;1;0;0;0;0;" cat="GC" desc="Avoid &quot;static&quot; collections or maps; they can grow without bounds" id="GC.STV" sev="3" total="1" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="INIT" desc="Avoid uninitialized reads of fields before or during constructor execution" id="INIT.UIRC" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="8;0;0;0;1;0;0;" authUrg="1;0;0;0;1;0;0;" cat="INTER" desc="Avoid calling methods and constructors which do not allow you to specify a character encoding option" id="INTER.SEO" sev="3" total="9" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="JAVADOC" desc="Avoid unused Javadoc tags" id="JAVADOC.DPMT" sev="3" total="1" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="22;1;0;0;0;0;0;" authUrg="0;1;0;0;0;0;0;" cat="JAVADOC" desc="Include a meaningful description in Javadoc tags" id="JAVADOC.MDJT" sev="3" total="23" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="10;1;0;0;0;0;0;" authUrg="0;1;0;0;0;0;0;" cat="JAVADOC" desc="Use the '@return' Javadoc tag in method Javadoc comments" id="JAVADOC.MRDC" sev="3" total="11" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="19;0;1;0;0;0;0;" authUrg="0;0;1;0;0;0;0;" cat="JAVADOC" desc="Use the '@param' Javadoc tag for each parameter of methods" id="JAVADOC.PARAM" sev="3" total="20" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="27;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="JAVADOC" desc="Provide Javadoc comments and descriptions for types" id="JAVADOC.PJDC" sev="3" total="27" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="90;6;10;0;2;20;8;" authUrg="1;6;10;0;2;20;8;" cat="JAVADOC" desc="Provide Javadoc comments and descriptions for methods" id="JAVADOC.PJDM" sev="3" total="136" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;1;0;0;0;0;" authUrg="0;0;1;0;0;0;0;" cat="JDBC" desc="Ensure index is valid in JDBC method invocation" id="JDBC.BRSA" sev="1" total="1" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;1;0;0;0;0;" authUrg="0;0;1;0;0;0;0;" cat="JDBC" desc="Use &quot;PreparedStatements&quot; correctly" id="JDBC.UPSC" sev="1" total="1" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="JDBC" desc="Do not store database connection objects in &quot;static&quot; fields" id="JDBC.SCSF" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;1;0;0;0;0;" authUrg="0;0;1;0;0;0;0;" cat="JDBC" desc="Use javax.sql.DataSource to get the database connection" id="JDBC.UDS" sev="3" total="1" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="JUNIT" desc="Avoid negating boolean parameters to assertTrue() or assertFalse()" id="JUNIT.ANBA" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="JUNIT" desc="Include a message string in JUnit assertions" id="JUNIT.ASSERT" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="JUNIT" desc="Set all fields which are initialized in the 'setUp()' method to &quot;null&quot; in the 'tearDown()' method" id="JUNIT.SIFN" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="9;0;1;0;0;0;0;" authUrg="0;0;1;0;0;0;0;" cat="NAMING" desc="Use a naming convention for array and collection variables" id="NAMING.NAC" sev="3" total="10" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;0;0;1;0;0;0;" authUrg="0;0;0;1;0;0;0;" cat="NAMING" desc="Use a naming convention for &quot;abstract&quot; classes" id="NAMING.NACL" sev="3" total="4" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="NAMING" desc="Use a naming convention for local variables" id="NAMING.NLV" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="NAMING" desc="Use a naming convention for JUnit test classes" id="NAMING.NTEST" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="1;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="OOP" desc="Do not extend concrete classes in &quot;abstract&quot; classes" id="OOP.ACECC" sev="3" total="1" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;0;0;1;0;4;0;" authUrg="0;0;0;1;0;4;0;" cat="OOP" desc="Avoid &quot;public&quot;/&quot;protected&quot;/package-private fields" id="OOP.AF" sev="3" total="8" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="20;3;0;0;1;20;0;" authUrg="0;3;0;0;1;13;0;" cat="OOP" desc="Add the &quot;@Override&quot; annotation to overriding methods" id="OOP.AOA" sev="3" total="44" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="5;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="OOP" desc="Do not hide fields and local variables declared in enclosing scopes" id="OOP.HIF" sev="3" total="5" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="2;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="OOP" desc="Avoid &quot;abstract&quot; classes without &quot;abstract&quot; methods" id="OOP.NAM" sev="3" total="2" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="OPT" desc="Do not use a &quot;private&quot; field that is accessed in only one method; change it to a local variable" id="OPT.CTLV" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="7;0;1;0;0;0;1;" authUrg="0;0;1;0;0;0;1;" cat="OPT" desc="Define initial capacities for 'ArrayList', 'HashMap', 'HashSet', 'Hashtable', 'Vector' and 'WeakHashMap'" id="OPT.DIC" sev="3" total="9" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="OPT" desc="Move invariants outside of loops wherever possible" id="OPT.LIOL" sev="3" total="1" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="3;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="OPT" desc="Declare member classes &quot;static&quot; if possible" id="OPT.SI" sev="3" total="3" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="10;0;0;0;1;0;0;" authUrg="0;0;0;0;1;0;0;" cat="OPT" desc="Use single quotes instead of double quotes for single character string concatenation" id="OPT.STR" sev="3" total="11" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="OPT" desc="Use 'StringBuffer' instead of 'String' when concatenating strings" id="OPT.USB" sev="3" total="1" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="6;0;0;0;0;0;0;" authUrg="1;0;0;0;0;0;0;" cat="PB" desc="Unrestricted lock resource" id="PB.CLOSE" sev="1" total="6" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="PB.API" desc="Ensure that all types which are used as keys in Sets and Maps override the 'equals()' and 'hashCode()' methods" id="PB.API.KOEH" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="PB.API" desc="Do not use deprecated APIs" id="PB.API.DPRAPI" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="2;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="PB.CUB" desc="Do not use '==' or '!=' to compare objects" id="PB.CUB.UEIC" sev="2" total="2" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="PB.LOGIC" desc="Do not call 'equals()' methods that always return false" id="PB.LOGIC.EQUS" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="PB.LOGIC" desc="Use 'getClass()' or &quot;instanceof&quot; within 'equals()' and 'compareTo()' method implementations" id="PB.LOGIC.EQLC" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="8;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="PB.NUM" desc="Do not use &quot;float&quot; and &quot;double&quot; if exact answers are required" id="PB.NUM.UBD" sev="3" total="8" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;1;0;0;0;0;0;" authUrg="0;1;0;0;0;0;0;" cat="PB.RE" desc="Do not call 'String.equals(constant)' or 'String.equalsIgnoreCase(constant)'" id="PB.RE.ISEM" sev="3" total="4" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;1;0;0;0;0;" authUrg="0;0;1;0;0;0;0;" cat="PB.RE" desc="Make sure the IllegalArgumentException message matches the code logic" id="PB.RE.IIAE" sev="4" total="1" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="10;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="PB.TYPO" desc="Avoid &quot;try&quot;, &quot;catch&quot; and &quot;finally&quot; blocks with empty bodies" id="PB.TYPO.AECB" sev="3" total="10" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;1;0;0;0;0;" authUrg="0;0;1;0;0;0;0;" cat="PB.TYPO" desc="Ensure the overriding method name does not have a typo" id="PB.TYPO.IMO" sev="3" total="1" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="2;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="PB.USC" desc="Avoid unreachable &quot;else if&quot; and &quot;else&quot; cases" id="PB.USC.UIF" sev="1" total="2" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="PB.USC" desc="Avoid using &quot;private&quot; fields which are never given a meaningful value" id="PB.USC.FCBS" sev="2" total="1" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="PB.USC" desc="Avoid self assignments/initializations to fields and/or local variables" id="PB.USC.SAFL" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;0;1;0;0;0;" authUrg="0;0;0;1;0;0;0;" cat="PORT" desc="Do not use 'Runtime.exec()'" id="PORT.EXEC" sev="3" total="1" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="6;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="PORT" desc="Do not hard code '\n' or '\r' as a line separator" id="PORT.LNSP" sev="3" total="6" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;1;0;1;0;0;" authUrg="0;0;1;0;1;0;0;" cat="SECURITY.EAB" desc="Do not store user-given mutable objects directly into variables" id="SECURITY.EAB.SMO" sev="3" total="2" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="16;0;2;0;1;0;0;" authUrg="0;0;2;0;1;0;0;" cat="SECURITY.ESD" desc="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" id="SECURITY.ESD.PEO" sev="1" total="19" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="62;0;3;0;1;0;0;" authUrg="0;0;3;0;1;0;0;" cat="SECURITY.ESD" desc="Avoid calling print methods of 'System.err' or 'System.out'" id="SECURITY.ESD.SIO" sev="3" total="66" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="SECURITY.IBA" desc="Do not extend from the Struts classes 'ActionForm' and 'DynaActionForm'" id="SECURITY.IBA.AEAF" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;0;1;0;0;0;0;" authUrg="0;0;1;0;0;0;0;" cat="SECURITY.IBA" desc="Avoid using &quot;SELECT *&quot; in SQL queries" id="SECURITY.IBA.AUSS" sev="1" total="4" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="4;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="SECURITY.IBA" desc="Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'" id="SECURITY.IBA.UPS" sev="1" total="4" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="SECURITY.WSC" desc="Always clone array parameters which are stored to fields" id="SECURITY.WSC.CAP" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="0;0;1;0;0;0;0;" authUrg="0;0;1;0;0;0;0;" cat="SECURITY.WSC" desc="Avoid passing hardcoded usernames/passwords/URLs to database connection methods" id="SECURITY.WSC.HCCS" sev="1" total="1" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="2;0;1;0;0;1;0;" authUrg="0;0;1;0;0;0;0;" cat="SECURITY.WSC" desc="Avoid 'main()' methods because they may allow unauthorized access to classes" id="SECURITY.WSC.UMAIN" sev="2" total="4" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="SECURITY.WSC" desc="Do not call the 'printStackTrace()' method of &quot;Throwable&quot; objects" id="SECURITY.WSC.ACPST" sev="3" total="1" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="10;0;0;0;0;11;0;" authUrg="0;0;0;0;0;0;0;" cat="SERIAL" desc="Create a 'serialVersionUID' for all 'Serializable' classes" id="SERIAL.DUID" sev="3" total="21" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="1;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="SERVLET" desc="Do not define instance fields in Servlet classes" id="SERVLET.IF" sev="1" total="1" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="4;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="SERVLET" desc="Use a Context Object to manage HTTP request parameters" id="SERVLET.UCO" sev="2" total="4" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.rulewizard" authTot="1;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="SERVLET" desc="Do not use JDBC code in Servlet classes" id="SERVLET.AJDBC" sev="3" total="1" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="10;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="UC" desc="Avoid unnecessary modifiers in an &quot;interface&quot;" id="UC.AAI" sev="3" total="10" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="3;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="UC" desc="Remove commented out Java code" id="UC.ACC" sev="3" total="3" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="11;0;0;0;0;0;0;" authUrg="0;0;0;0;0;0;0;" cat="UC" desc="Avoid local variables that are never read" id="UC.AURV" sev="3" total="11" />
            <Rule analyzer="com.parasoft.jtest.standards.checkers.java" authTot="1;0;2;0;0;0;0;" authUrg="0;0;2;0;0;0;0;" cat="UC" desc="Avoid unnecessary &quot;else&quot; statements" id="UC.UES" sev="3" total="3" />
         </RulesList>
         <SeverityList>
            <Severity authTot="64;0;6;4;1;0;0;" authUrg="32;0;6;4;1;0;0;" id="1" total="75" />
            <Severity authTot="15;2;3;0;0;1;0;" authUrg="6;2;3;0;0;0;0;" id="2" total="21" />
            <Severity authTot="556;18;30;8;9;68;14;" authUrg="12;18;30;8;9;50;14;" id="3" total="703" />
            <Severity authTot="6;0;3;0;0;0;0;" authUrg="0;0;3;0;0;0;0;" id="4" total="9" />
         </SeverityList>
      </Rules>
      
  <Supps>
    <Supp suppAuth="mgorecka" locRef="66" suppRsn="" refId="1" suppLine="7" type="comment" suppMsg="Instance field is declared &quot;public&quot;: _field2" suppRule="OOP.AF" suppLoc="/com.parasoft:demo/src/main/java/examples/suppress/Example.java" />
  </Supps>

      
  <StdViols>
    <StdViol msg="Use 2 blank lines before type declaration" ln="7" locFile="/com.parasoft:demo/src/main/java/examples/eval/Simple.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.eval" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="85491485-29fc-3bd9-8de8-c7da9d22bc00" locEndPos="2" prio="Not Defined" locEndLn="7" goals="0," locStartln="7" sev="3" locRef="1" tool="jtest" lineHash="46511" unbViolId="4b1d568d-7b78-3146-9b09-5be5fbf51f8d" risk="Undefined" locType="sr" hash="-2121569923" />
    <StdViol msg="This '@param' tag does not contain a meaningful description of the parameter" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/eval/Simple.java" auth="mgorecka" rule="JAVADOC.MDJT" lnHash="1860531093" pkg="examples.eval" rule.header="Include a meaningful description in Javadoc tags" locStartPos="7" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b5d6e53f-636a-34dd-b66d-0601ea5d02d4" locEndPos="19" prio="Not Defined" locEndLn="18" goals="0," locStartln="18" sev="3" locRef="1" tool="jtest" lineHash="1860531093" unbViolId="c397db9b-32ab-3ab7-95e3-2d5d0a29181f" risk="Undefined" locType="sr" hash="-2121569923" />
    <StdViol msg="Avoid label statement: 'case10'" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/eval/Simple.java" auth="mgorecka" rule="CODSTA.BP.AULS" lnHash="337657500" pkg="examples.eval" rule.header="Avoid label statements" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="2632ba0d-faa1-3c0f-a846-61894e78eb5e" locEndPos="18" prio="Not Defined" locEndLn="24" goals="0," locStartln="24" sev="3" locRef="1" tool="jtest" lineHash="337657500" unbViolId="61cf6fb5-4180-3535-b2a1-9ef067fd9f85" risk="Undefined" locType="sr" hash="-2121569923" />
    <StdViol msg="&quot;for&quot; statement without a &quot;{ }&quot; block" ln="63" locFile="/com.parasoft:demo/src/main/java/examples/eval/Simple.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="-1989293143" pkg="examples.eval" rule.header="Provide a '{}' block for conditional statements" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="61dfcf72-0ed0-3edf-b491-b81e21ab1e22" locEndPos="11" prio="Not Defined" locEndLn="63" goals="0," locStartln="63" sev="3" locRef="1" tool="jtest" lineHash="-1989293143" unbViolId="25650d36-82cc-3294-a820-fe7906a0fe5f" risk="Undefined" locType="sr" hash="-2121569923" />
    <StdViol msg="Parameter 'match' dereferenced before being checked for null" ln="63" locFile="/com.parasoft:demo/src/main/java/examples/eval/Simple.java" auth="mgorecka" rule="DBC.IPAN" lnHash="-1989293143" pkg="examples.eval" rule.header="Include a '@pre != null' tag for each parameter that is dereferenced before being checked for null" locStartPos="28" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4fb0d691-cee9-376c-a66c-3875a076cb90" locEndPos="33" prio="Not Defined" locEndLn="63" goals="0," locStartln="63" sev="3" locRef="1" tool="jtest" lineHash="-1989293143" unbViolId="76d8a6fb-d58a-32da-89a7-678a8f8359e4" risk="Undefined" locType="sr" hash="-2121569923" />
    <StdViol msg="&quot;if&quot; statement without a &quot;{ }&quot; block" ln="64" locFile="/com.parasoft:demo/src/main/java/examples/eval/Simple.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="1872987476" pkg="examples.eval" rule.header="Provide a '{}' block for conditional statements" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e2be92f0-1ead-37f6-a7fe-02a4222ef942" locEndPos="14" prio="Not Defined" locEndLn="64" goals="0," locStartln="64" sev="3" locRef="1" tool="jtest" lineHash="1872987476" unbViolId="c8ea86ae-db17-37ee-bfcc-4c3e6bc8fbeb" risk="Undefined" locType="sr" hash="-2121569923" />
    <StdViol msg="Parameter 'str' dereferenced before being checked for null" ln="64" locFile="/com.parasoft:demo/src/main/java/examples/eval/Simple.java" auth="mgorecka" rule="DBC.IPAN" lnHash="1872987476" pkg="examples.eval" rule.header="Include a '@pre != null' tag for each parameter that is dereferenced before being checked for null" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0f6eb286-442a-311c-b68a-95ce06ccf425" locEndPos="19" prio="Not Defined" locEndLn="64" goals="0," locStartln="64" sev="3" locRef="1" tool="jtest" lineHash="1872987476" unbViolId="3edf2246-7763-3274-b175-1e7a27ef582b" risk="Undefined" locType="sr" hash="-2121569923" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="6" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="-1152693928" pkg="examples.flowanalysis" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5e0158f6-49e0-39c7-aecc-5c3a451cbfce" locEndPos="2" prio="Not Defined" locEndLn="6" goals="0," locStartln="6" sev="3" locRef="2" tool="jtest" lineHash="-1152693928" unbViolId="1bd0b1f5-3691-3bad-b1f9-48e1f7a79118" risk="Undefined" locType="sr" hash="-32679949" />
    <StdViol msg="Missing Javadoc comment for 'AlwaysCloseGSS'" ln="6" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" auth="mgorecka" rule="JAVADOC.PJDC" lnHash="-1152693928" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for types" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8d72b5a5-6b81-33d2-8492-8628d798e37b" locEndPos="27" prio="Not Defined" locEndLn="6" goals="0," locStartln="6" sev="3" locRef="2" tool="jtest" lineHash="-1152693928" unbViolId="4855d4f6-9e63-3d87-8aaa-57d99ca1b728" risk="Undefined" locType="sr" hash="-32679949" />
    <StdViol msg="Missing Javadoc comment for method 'process()'" ln="8" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="286824290" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="dcf507d7-b06b-3817-9943-5f33818af049" locEndPos="23" prio="Not Defined" locEndLn="8" goals="0," locStartln="8" sev="3" locRef="2" tool="jtest" lineHash="286824290" unbViolId="fc38e90f-4a50-399d-ba5d-aa52ecb9c576" risk="Undefined" locType="sr" hash="-32679949" />
    <StdViol msg="Variable name 'inputBuff' does not match user-specified regular expression '(s|List|Set|Array|Table)$' for array and collection variables" ln="10" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" auth="mgorecka" rule="NAMING.NAC" lnHash="-1084133542" pkg="examples.flowanalysis" rule.header="Use a naming convention for array and collection variables" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3322a674-f76e-3672-9450-66b5f8105efa" locEndPos="28" prio="Not Defined" locEndLn="10" goals="0," locStartln="10" sev="3" locRef="2" tool="jtest" lineHash="-1084133542" unbViolId="052da311-34b2-314d-91de-42fa29fb081f" risk="Undefined" locType="sr" hash="-32679949" />
    <StdViol msg="&quot;catch&quot; statement directly catches the general exception type 'Exception'" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" auth="mgorecka" rule="CODSTA.EPC.NCE" lnHash="2103670358" pkg="examples.flowanalysis" rule.header="Do not catch exception types which are too general or are unchecked exceptions" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d706775f-ed17-368f-9ebd-38e8d42f5e8b" locEndPos="26" prio="Not Defined" locEndLn="13" goals="0," locStartln="13" sev="3" locRef="2" tool="jtest" lineHash="2103670358" unbViolId="f81f2a7e-d13e-33de-b687-1bf4edd6c3bb" risk="Undefined" locType="sr" hash="-32679949" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="14" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="1266022184" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="83c7e3a5-81fd-335d-81f6-6b44fa76614f" locEndPos="59" prio="Not Defined" locEndLn="14" goals="0," locStartln="14" sev="3" locRef="2" tool="jtest" lineHash="1266022184" unbViolId="0e9a120a-e0c0-3f55-85cc-0f99aa899d8a" risk="Undefined" locType="sr" hash="-32679949" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="14" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" auth="mgorecka" rule="SECURITY.ESD.PEO" lnHash="1266022184" pkg="examples.flowanalysis" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="60d49eb0-d12a-3c1e-bd98-3d07ef7bd6d7" locEndPos="30" prio="Not Defined" locEndLn="14" goals="0," locStartln="14" sev="1" locRef="2" tool="jtest" lineHash="1266022184" unbViolId="ab52d889-54e1-3700-a948-203b17117946" risk="Undefined" locType="sr" hash="-32679949" />
    <StdViol msg="Missing Javadoc comment for method 'processClose()'" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="311300670" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8adfe3e3-5ffc-32ae-b0f8-56efd09c41b6" locEndPos="28" prio="Not Defined" locEndLn="18" goals="0," locStartln="18" sev="3" locRef="2" tool="jtest" lineHash="311300670" unbViolId="44b6eaac-b45e-3930-84ea-a8cde566e20e" risk="Undefined" locType="sr" hash="-32679949" />
    <StdViol msg="Variable name 'inputBuff' does not match user-specified regular expression '(s|List|Set|Array|Table)$' for array and collection variables" ln="22" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" auth="mgorecka" rule="NAMING.NAC" lnHash="-1084133542" pkg="examples.flowanalysis" rule.header="Use a naming convention for array and collection variables" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6ced7e63-1511-37d8-9849-0fe88f065b79" locEndPos="28" prio="Not Defined" locEndLn="22" goals="0," locStartln="22" sev="3" locRef="2" tool="jtest" lineHash="-1084133542" unbViolId="180f949d-e605-3040-b4bf-af94b9e89074" risk="Undefined" locType="sr" hash="-32679949" />
    <StdViol msg="&quot;catch&quot; statement directly catches the general exception type 'Exception'" ln="25" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" auth="mgorecka" rule="CODSTA.EPC.NCE" lnHash="2103670358" pkg="examples.flowanalysis" rule.header="Do not catch exception types which are too general or are unchecked exceptions" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="508a79ed-027b-3f48-bd98-f7ca2fa5f83c" locEndPos="26" prio="Not Defined" locEndLn="25" goals="0," locStartln="25" sev="3" locRef="2" tool="jtest" lineHash="2103670358" unbViolId="45246f45-85e1-3f10-b714-ef324b614338" risk="Undefined" locType="sr" hash="-32679949" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="26" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="1266022184" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="43c3595c-f53a-3919-8f4b-435d2648b3ea" locEndPos="59" prio="Not Defined" locEndLn="26" goals="0," locStartln="26" sev="3" locRef="2" tool="jtest" lineHash="1266022184" unbViolId="26f78add-0506-3605-a38c-d8f629cafa63" risk="Undefined" locType="sr" hash="-32679949" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="26" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" auth="mgorecka" rule="SECURITY.ESD.PEO" lnHash="1266022184" pkg="examples.flowanalysis" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="381111db-9814-3536-9615-55a10c5c1fd7" locEndPos="30" prio="Not Defined" locEndLn="26" goals="0," locStartln="26" sev="1" locRef="2" tool="jtest" lineHash="1266022184" unbViolId="71ca25bf-3895-3f4e-a04d-99fd7a2c4ffa" risk="Undefined" locType="sr" hash="-32679949" />
    <FlowViol msg="&quot;context&quot; may possibly be null" ln="29" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="34" auth="mgorecka" FirstElSrcRngEndLn="19" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="-1273380230" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="19" locStartPos="16" analyzer="com.parasoft.jtest.flowanalyzer" id="-1409706191" lang="java" violId="5ee1c08a-9432-37f9-b720-6205faf822ba" locEndPos="34" prio="Not Defined" locEndLn="29" goals="0," locStartln="29" sev="1" locRef="2" tool="jtest" lineHash="-1273380230" unbViolId="89c8a007-7ae3-31f9-b43e-69380817df54" risk="Undefined" locType="sr" hash="-32679949" causeLocRef="2">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-1434008792" locType="sr" srcRnghash="-32679949" locRef="2" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" ln="19" srcRngStartPos="8" srcRngEndPos="34" srcRngStartln="19" srcRngEndLn="19" desc="GSSContext context = null;" ElType=".C" rngLn="19">
          <Props>
            <Prop key="Tracked variables" val="context" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: context" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1900478135" locType="sr" srcRnghash="-32679949" locRef="2" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" ln="21" srcRngStartPos="12" srcRngEndPos="68" srcRngStartln="21" srcRngEndLn="21" desc="context = GSSManager.getInstance().createContext(tokens)" ElType="!E" rngLn="21" thrownTypes="GSSException" throwingMethod="GSSManager.createContext">
          <Anns>
            <Ann msg="GSSManager.createContext() throws GSSException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2103670358" locType="sr" srcRnghash="-32679949" locRef="2" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" ln="25" srcRngStartPos="10" srcRngEndPos="32" srcRngStartln="25" srcRngEndLn="25" desc="catch (Exception ioe)" ElType="." rngLn="25" />
        <ElDesc lineHash="1266022184" locType="sr" srcRnghash="-32679949" locRef="2" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" ln="26" srcRngStartPos="12" srcRngEndPos="60" srcRngStartln="26" srcRngEndLn="26" desc="System.out.println(&quot;Exception occured: &quot; + ioe);" ElType="." rngLn="26" />
        <ElDesc lineHash="-1273380230" locType="sr" srcRnghash="-32679949" locRef="2" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" ln="29" srcRngStartPos="16" srcRngEndPos="34" srcRngStartln="29" srcRngEndLn="29" desc="context.dispose();" ElType=".P" rngLn="29">
          <Props>
            <Prop key="Tracked variables" val="context" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: context" kind="var" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="&quot;catch&quot; block has an empty body" ln="30" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" auth="mgorecka" rule="PB.TYPO.AECB" lnHash="1175112816" pkg="examples.flowanalysis" rule.header="Avoid &quot;try&quot;, &quot;catch&quot; and &quot;finally&quot; blocks with empty bodies" locStartPos="14" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="dad58bf8-3686-32b6-b605-e9d4792e08d8" locEndPos="19" prio="Not Defined" locEndLn="30" goals="0," locStartln="30" sev="3" locRef="2" tool="jtest" lineHash="1175112816" unbViolId="6b37ad03-909a-3fa7-a874-f139dc97def4" risk="Undefined" locType="sr" hash="-32679949" />
    <StdViol msg="&quot;catch&quot; statement directly catches the general exception type 'Exception'" ln="30" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" auth="mgorecka" rule="CODSTA.EPC.NCE" lnHash="1175112816" pkg="examples.flowanalysis" rule.header="Do not catch exception types which are too general or are unchecked exceptions" locStartPos="21" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="76574da2-b025-3ed2-a4a5-7a8f8c76c958" locEndPos="30" prio="Not Defined" locEndLn="30" goals="0," locStartln="30" sev="3" locRef="2" tool="jtest" lineHash="1175112816" unbViolId="58a973ab-e515-3f83-86ad-fd3bcbde6168" risk="Undefined" locType="sr" hash="-32679949" />
    <StdViol msg="This block should contain a comment explaining why it is empty" ln="30" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" auth="mgorecka" rule="CODSTA.READ.CEB" lnHash="1175112816" pkg="examples.flowanalysis" rule.header="Comment empty blocks" locStartPos="34" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="48d71835-f43c-37a0-9e78-19ddc42a246a" locEndPos="35" prio="Not Defined" locEndLn="30" goals="0," locStartln="30" sev="3" locRef="2" tool="jtest" lineHash="1175112816" unbViolId="0db43cda-4182-3362-8fd2-91998dde87bd" risk="Undefined" locType="sr" hash="-32679949" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="9" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="-384530595" pkg="examples.flowanalysis" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9213bea1-aacc-361e-91ca-d5d1b40db246" locEndPos="2" prio="Not Defined" locEndLn="9" goals="0," locStartln="9" sev="3" locRef="3" tool="jtest" lineHash="-384530595" unbViolId="c9a549c2-3731-3cea-9db7-2c6b9a54fddf" risk="Undefined" locType="sr" hash="1088242968" />
    <StdViol msg="Missing Javadoc comment for 'AlwaysCloseImages'" ln="9" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" auth="mgorecka" rule="JAVADOC.PJDC" lnHash="-384530595" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for types" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="58c158ac-d963-37c8-9e28-169d4e407801" locEndPos="30" prio="Not Defined" locEndLn="9" goals="0," locStartln="9" sev="3" locRef="3" tool="jtest" lineHash="-384530595" unbViolId="d531bda1-4c6f-3dd3-a8aa-f5bff8cc411d" risk="Undefined" locType="sr" hash="1088242968" />
    <StdViol msg="Missing Javadoc comment for method 'readImage()'" ln="11" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-1148275797" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="caae4f82-4287-3cbf-9f3f-17c6e92b3517" locEndPos="26" prio="Not Defined" locEndLn="11" goals="0," locStartln="11" sev="3" locRef="3" tool="jtest" lineHash="-1148275797" unbViolId="28581d50-2ca1-375c-83b6-c623fd989a48" risk="Undefined" locType="sr" hash="1088242968" />
    <StdViol msg="&quot;catch&quot; statement directly catches the general exception type 'Exception'" ln="16" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" auth="mgorecka" rule="CODSTA.EPC.NCE" lnHash="100324464" pkg="examples.flowanalysis" rule.header="Do not catch exception types which are too general or are unchecked exceptions" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d4b4c062-c60f-33e5-b855-cbd2c5d2fef4" locEndPos="26" prio="Not Defined" locEndLn="16" goals="0," locStartln="16" sev="3" locRef="3" tool="jtest" lineHash="100324464" unbViolId="731e05ba-e019-3f82-b13f-c4f6eb052fac" risk="Undefined" locType="sr" hash="1088242968" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="17" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="957734862" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7476118f-4c65-39ba-aa8d-70c3512c5fd9" locEndPos="57" prio="Not Defined" locEndLn="17" goals="0," locStartln="17" sev="3" locRef="3" tool="jtest" lineHash="957734862" unbViolId="169bc9c8-c3b1-3544-a5e9-b4e2f45532bb" risk="Undefined" locType="sr" hash="1088242968" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="17" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" auth="mgorecka" rule="SECURITY.ESD.PEO" lnHash="957734862" pkg="examples.flowanalysis" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="eb8f53fc-73d4-3cf0-9cce-f625d271e722" locEndPos="30" prio="Not Defined" locEndLn="17" goals="0," locStartln="17" sev="1" locRef="3" tool="jtest" lineHash="957734862" unbViolId="79b659ee-7484-3516-94b3-8e4bd8602bd8" risk="Undefined" locType="sr" hash="1088242968" />
    <StdViol msg="Missing Javadoc comment for method 'readImageClose()'" ln="22" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="1938140305" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d3d883e6-16a6-3712-acba-98c08713f7c5" locEndPos="31" prio="Not Defined" locEndLn="22" goals="0," locStartln="22" sev="3" locRef="3" tool="jtest" lineHash="1938140305" unbViolId="cb9a794b-dd9e-37cd-b370-40359e02db4a" risk="Undefined" locType="sr" hash="1088242968" />
    <StdViol msg="&quot;catch&quot; statement directly catches the general exception type 'Exception'" ln="28" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" auth="mgorecka" rule="CODSTA.EPC.NCE" lnHash="100324464" pkg="examples.flowanalysis" rule.header="Do not catch exception types which are too general or are unchecked exceptions" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f24280b4-240f-3e3c-8610-3b5060f9b81d" locEndPos="26" prio="Not Defined" locEndLn="28" goals="0," locStartln="28" sev="3" locRef="3" tool="jtest" lineHash="100324464" unbViolId="34944629-bc84-3a08-9bd7-06ccdee665d0" risk="Undefined" locType="sr" hash="1088242968" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="29" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="957734862" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4793b1e6-963c-3fb8-a9a2-b1d4b8603ae8" locEndPos="57" prio="Not Defined" locEndLn="29" goals="0," locStartln="29" sev="3" locRef="3" tool="jtest" lineHash="957734862" unbViolId="400d3e8e-4e91-3625-979c-1c33fd1f0a78" risk="Undefined" locType="sr" hash="1088242968" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="29" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" auth="mgorecka" rule="SECURITY.ESD.PEO" lnHash="957734862" pkg="examples.flowanalysis" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d669c8d0-deed-3314-b2d0-40c6a1a86f9e" locEndPos="30" prio="Not Defined" locEndLn="29" goals="0," locStartln="29" sev="1" locRef="3" tool="jtest" lineHash="957734862" unbViolId="a8a5e3ca-3ab5-39f4-880c-d9e1d287975a" risk="Undefined" locType="sr" hash="1088242968" />
    <FlowViol msg="&quot;imgReader&quot; may possibly be null" ln="31" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="37" auth="mgorecka" FirstElSrcRngEndLn="24" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="-281777821" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="24" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-1065131086" lang="java" violId="1e02d452-84fc-36d2-8021-ff72ae3e1f66" locEndPos="32" urgent="true" prio="Not Defined" locEndLn="31" goals="1," locStartln="31" sev="1" locRef="3" tool="jtest" lineHash="-281777821" unbViolId="62a41291-9ff1-3a3f-8747-e0e1affa0e29" risk="Undefined" locType="sr" hash="1088242968" causeLocRef="3">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-2075299321" locType="sr" srcRnghash="1088242968" locRef="3" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" ln="23" srcRngStartPos="8" srcRngEndPos="27" srcRngStartln="23" srcRngEndLn="23" desc="Image image = null;" ElType="." rngLn="23" />
        <ElDesc lineHash="1423331445" locType="sr" srcRnghash="1088242968" locRef="3" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" ln="24" srcRngStartPos="8" srcRngEndPos="37" srcRngStartln="24" srcRngEndLn="24" desc="ImageReader imgReader = null;" ElType=".C" rngLn="24">
          <Props>
            <Prop key="Tracked variables" val="imgReader" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: imgReader" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="379037799" locType="sr" srcRnghash="1088242968" locRef="3" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" ln="26" srcRngStartPos="12" srcRngEndPos="50" srcRngStartln="26" srcRngEndLn="26" desc="imgReader = spi.createReaderInstance()" ElType="!E" rngLn="26" thrownTypes="IOException" throwingMethod="ImageReaderSpi.createReaderInstance">
          <Anns>
            <Ann msg="ImageReaderSpi.createReaderInstance() throws IOException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="100324464" locType="sr" srcRnghash="1088242968" locRef="3" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" ln="28" srcRngStartPos="10" srcRngEndPos="30" srcRngStartln="28" srcRngEndLn="28" desc="catch (Exception e)" ElType="." rngLn="28" />
        <ElDesc lineHash="957734862" locType="sr" srcRnghash="1088242968" locRef="3" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" ln="29" srcRngStartPos="12" srcRngEndPos="58" srcRngStartln="29" srcRngEndLn="29" desc="System.out.println(&quot;Exception occured: &quot; + e);" ElType="." rngLn="29" />
        <ElDesc lineHash="-281777821" locType="sr" srcRnghash="1088242968" locRef="3" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" ln="31" srcRngStartPos="12" srcRngEndPos="32" srcRngStartln="31" srcRngEndLn="31" desc="imgReader.dispose();" ElType=".P" rngLn="31">
          <Props>
            <Prop key="Tracked variables" val="imgReader" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: imgReader" kind="var" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Use 2 blank lines before type declaration" ln="7" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseLogging.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="61376176" pkg="examples.flowanalysis" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a26a7b46-57a2-3a13-be57-a3279d8ca0ea" locEndPos="2" prio="Not Defined" locEndLn="7" goals="0," locStartln="7" sev="3" locRef="4" tool="jtest" lineHash="61376176" unbViolId="7c6985e7-24d7-36ec-bd4b-1d97b94693e7" risk="Undefined" locType="sr" hash="-89489575" />
    <StdViol msg="Missing Javadoc comment for 'AlwaysCloseLogging'" ln="7" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseLogging.java" auth="mgorecka" rule="JAVADOC.PJDC" lnHash="61376176" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for types" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8dcb86ec-7441-32fd-8086-c49a8ccf8684" locEndPos="31" prio="Not Defined" locEndLn="7" goals="0," locStartln="7" sev="3" locRef="4" tool="jtest" lineHash="61376176" unbViolId="8828a09c-520b-3a70-bc72-4f0372e37907" risk="Undefined" locType="sr" hash="-89489575" />
    <StdViol msg="Missing Javadoc comment for method 'log()'" ln="9" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseLogging.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-1980218839" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8000eaa9-6c63-394f-9e90-373959de741a" locEndPos="19" prio="Not Defined" locEndLn="9" goals="0," locStartln="9" sev="3" locRef="4" tool="jtest" lineHash="-1980218839" unbViolId="2ba5e511-e1b5-3c29-af0f-55b8125cc0fc" risk="Undefined" locType="sr" hash="-89489575" />
    <StdViol msg="Missing Javadoc comment for method 'logClose()'" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseLogging.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-1952115505" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d6b373dc-3663-3a95-a541-f7baffca1242" locEndPos="24" prio="Not Defined" locEndLn="15" goals="0," locStartln="15" sev="3" locRef="4" tool="jtest" lineHash="-1952115505" unbViolId="5286c500-d089-3169-a322-e8bca17f4a10" risk="Undefined" locType="sr" hash="-89489575" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="9" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="-566807275" pkg="examples.flowanalysis" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8307f567-f0ca-3285-8e74-03dc34521396" locEndPos="2" prio="Not Defined" locEndLn="9" goals="0," locStartln="9" sev="3" locRef="5" tool="jtest" lineHash="-566807275" unbViolId="0aec49ff-81bc-3881-be12-0ca3d6ed7b03" risk="Undefined" locType="sr" hash="1710944294" />
    <StdViol msg="Missing Javadoc comment for 'AlwaysCloseNIOChannels'" ln="9" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" auth="mgorecka" rule="JAVADOC.PJDC" lnHash="-566807275" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for types" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3218ff65-d007-39b5-94da-4d211f417ddf" locEndPos="35" prio="Not Defined" locEndLn="9" goals="0," locStartln="9" sev="3" locRef="5" tool="jtest" lineHash="-566807275" unbViolId="6b2a7d29-450b-36ed-8eb7-d3b0aefbc9c9" risk="Undefined" locType="sr" hash="1710944294" />
    <StdViol msg="Missing Javadoc comment for method 'process()'" ln="11" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="1769998620" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b26bc155-4d83-3517-be25-d7bf3652631d" locEndPos="23" prio="Not Defined" locEndLn="11" goals="0," locStartln="11" sev="3" locRef="5" tool="jtest" lineHash="1769998620" unbViolId="9a6cc1a9-8b6c-3291-b0bf-c26a83e3d575" risk="Undefined" locType="sr" hash="1710944294" />
    <StdViol msg="Variable 'fInput' may not have a close resource" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" auth="mgorecka" rule="PB.CLOSE" lnHash="-408098528" pkg="examples.flowanalysis" rule.header="Unrestricted lock resource" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2e8e57cc-80af-383f-a4bc-0e71619f131a" locEndPos="67" prio="Not Defined" locEndLn="13" goals="0," locStartln="13" sev="1" locRef="5" tool="jtest" lineHash="-408098528" unbViolId="08fcf5ec-adcd-34e8-a02a-99843a4674f7" risk="Undefined" locType="sr" hash="1710944294" />
    <StdViol msg="Variable 'read' is never used" ln="16" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" auth="mgorecka" rule="UC.AURV" lnHash="1533291916" pkg="examples.flowanalysis" rule.header="Avoid local variables that are never read" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a233f4b7-3267-3ec3-a9c9-06137b38f91b" locEndPos="20" prio="Not Defined" locEndLn="16" goals="0," locStartln="16" sev="3" locRef="5" tool="jtest" lineHash="1533291916" unbViolId="cb92b184-4fb2-3b72-8b99-c341c252361a" risk="Undefined" locType="sr" hash="1710944294" />
    <StdViol msg="&quot;catch&quot; statement directly catches the general exception type 'Exception'" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" auth="mgorecka" rule="CODSTA.EPC.NCE" lnHash="2103670358" pkg="examples.flowanalysis" rule.header="Do not catch exception types which are too general or are unchecked exceptions" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3eed57fe-31c5-31a4-b5bc-482eaeecc863" locEndPos="26" prio="Not Defined" locEndLn="18" goals="0," locStartln="18" sev="3" locRef="5" tool="jtest" lineHash="2103670358" unbViolId="9ab6b122-dbba-3516-885c-2d42b2905310" risk="Undefined" locType="sr" hash="1710944294" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="19" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="1266022184" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="cf288de2-45a4-3d7a-930a-3ae22c233267" locEndPos="59" prio="Not Defined" locEndLn="19" goals="0," locStartln="19" sev="3" locRef="5" tool="jtest" lineHash="1266022184" unbViolId="87f22946-9663-338d-8ef6-2e25726dd30c" risk="Undefined" locType="sr" hash="1710944294" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="19" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" auth="mgorecka" rule="SECURITY.ESD.PEO" lnHash="1266022184" pkg="examples.flowanalysis" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d0d3663c-3c02-31e9-a941-09de87009eca" locEndPos="30" prio="Not Defined" locEndLn="19" goals="0," locStartln="19" sev="1" locRef="5" tool="jtest" lineHash="1266022184" unbViolId="9d104db7-6ca5-306c-9325-81c53cd4c8fe" risk="Undefined" locType="sr" hash="1710944294" />
    <StdViol msg="Missing Javadoc comment for method 'processClose()'" ln="23" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-478003976" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b640a722-5a7b-3fbc-b659-db72c4556573" locEndPos="28" prio="Not Defined" locEndLn="23" goals="0," locStartln="23" sev="3" locRef="5" tool="jtest" lineHash="-478003976" unbViolId="429a6ed4-220d-34f4-92af-b3e4df7a43d8" risk="Undefined" locType="sr" hash="1710944294" />
    <StdViol msg="Variable 'fInput' may not have a close resource" ln="26" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" auth="mgorecka" rule="PB.CLOSE" lnHash="-408098528" pkg="examples.flowanalysis" rule.header="Unrestricted lock resource" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9e1b1e8d-01f3-33a9-b9a9-66a4faa4680d" locEndPos="67" prio="Not Defined" locEndLn="26" goals="0," locStartln="26" sev="1" locRef="5" tool="jtest" lineHash="-408098528" unbViolId="5d454679-a317-3854-9ab0-53e847a5770f" risk="Undefined" locType="sr" hash="1710944294" />
    <StdViol msg="Variable 'read' is never used" ln="29" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" auth="mgorecka" rule="UC.AURV" lnHash="1533291916" pkg="examples.flowanalysis" rule.header="Avoid local variables that are never read" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ac193c05-a6d5-36e3-9104-4b12015b08e6" locEndPos="20" prio="Not Defined" locEndLn="29" goals="0," locStartln="29" sev="3" locRef="5" tool="jtest" lineHash="1533291916" unbViolId="e6d503dd-bcdf-3c6d-a547-aeff97210248" risk="Undefined" locType="sr" hash="1710944294" />
    <StdViol msg="&quot;catch&quot; statement directly catches the general exception type 'Exception'" ln="31" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" auth="mgorecka" rule="CODSTA.EPC.NCE" lnHash="2103670358" pkg="examples.flowanalysis" rule.header="Do not catch exception types which are too general or are unchecked exceptions" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e379a3ba-3e8c-32d9-b31b-9a65b058ad82" locEndPos="26" prio="Not Defined" locEndLn="31" goals="0," locStartln="31" sev="3" locRef="5" tool="jtest" lineHash="2103670358" unbViolId="b342669c-b636-3030-bcc9-4d10494f3abd" risk="Undefined" locType="sr" hash="1710944294" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="32" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="1266022184" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8e4466ae-aaa4-3d8b-b062-742fb9a63f99" locEndPos="59" prio="Not Defined" locEndLn="32" goals="0," locStartln="32" sev="3" locRef="5" tool="jtest" lineHash="1266022184" unbViolId="0680e756-e111-3db5-ae59-0a7ba7e55f00" risk="Undefined" locType="sr" hash="1710944294" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="32" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" auth="mgorecka" rule="SECURITY.ESD.PEO" lnHash="1266022184" pkg="examples.flowanalysis" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4aa3347c-343f-3091-81b6-ee1094b620f5" locEndPos="30" prio="Not Defined" locEndLn="32" goals="0," locStartln="32" sev="1" locRef="5" tool="jtest" lineHash="1266022184" unbViolId="306de72b-712d-3365-9537-8edd79815216" risk="Undefined" locType="sr" hash="1710944294" />
    <FlowViol msg="&quot;channel&quot; may possibly be null" ln="35" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="35" auth="mgorecka" FirstElSrcRngEndLn="24" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="843047661" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="24" locStartPos="16" analyzer="com.parasoft.jtest.flowanalyzer" id="980048666" lang="java" violId="c17e7ef4-57b3-37a7-8d9c-6a220a8af714" locEndPos="32" urgent="true" prio="Not Defined" locEndLn="35" goals="1," locStartln="35" sev="1" locRef="5" tool="jtest" lineHash="843047661" unbViolId="4bbda0f6-fb5f-32a9-b0bf-8bb0f21a31a5" risk="Undefined" locType="sr" hash="1710944294" causeLocRef="5">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1200399739" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" ln="24" srcRngStartPos="8" srcRngEndPos="35" srcRngStartln="24" srcRngEndLn="24" desc="FileChannel channel = null;" ElType=".C" rngLn="24">
          <Props>
            <Prop key="Tracked variables" val="channel" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: channel" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-408098528" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" ln="26" srcRngStartPos="37" srcRngEndPos="66" srcRngStartln="26" srcRngEndLn="26" desc="new FileInputStream(filename)" ElType="!E" rngLn="26" thrownTypes="FileNotFoundException" throwingMethod="FileInputStream.FileInputStream">
          <Anns>
            <Ann msg="FileInputStream.FileInputStream() throws FileNotFoundException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2103670358" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" ln="31" srcRngStartPos="10" srcRngEndPos="32" srcRngStartln="31" srcRngEndLn="31" desc="catch (Exception ioe)" ElType="." rngLn="31" />
        <ElDesc lineHash="1266022184" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" ln="32" srcRngStartPos="12" srcRngEndPos="60" srcRngStartln="32" srcRngEndLn="32" desc="System.out.println(&quot;Exception occured: &quot; + ioe);" ElType="." rngLn="32" />
        <ElDesc lineHash="843047661" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" ln="35" srcRngStartPos="16" srcRngEndPos="32" srcRngStartln="35" srcRngEndLn="35" desc="channel.close();" ElType=".P" rngLn="35">
          <Props>
            <Prop key="Tracked variables" val="channel" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: channel" kind="var" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="&quot;catch&quot; block has an empty body" ln="36" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" auth="mgorecka" rule="PB.TYPO.AECB" lnHash="1175112816" pkg="examples.flowanalysis" rule.header="Avoid &quot;try&quot;, &quot;catch&quot; and &quot;finally&quot; blocks with empty bodies" locStartPos="14" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1e6a1a92-bcd7-3b60-9748-7d29114b05ec" locEndPos="19" prio="Not Defined" locEndLn="36" goals="0," locStartln="36" sev="3" locRef="5" tool="jtest" lineHash="1175112816" unbViolId="68bd0937-e7a5-3cb9-9da3-ee3241bf642d" risk="Undefined" locType="sr" hash="1710944294" />
    <StdViol msg="&quot;catch&quot; statement directly catches the general exception type 'Exception'" ln="36" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" auth="mgorecka" rule="CODSTA.EPC.NCE" lnHash="1175112816" pkg="examples.flowanalysis" rule.header="Do not catch exception types which are too general or are unchecked exceptions" locStartPos="21" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e03d6687-be88-38d7-976c-1de181541fbc" locEndPos="30" prio="Not Defined" locEndLn="36" goals="0," locStartln="36" sev="3" locRef="5" tool="jtest" lineHash="1175112816" unbViolId="d2d682df-248d-3a19-9000-bc5bca3b0ef0" risk="Undefined" locType="sr" hash="1710944294" />
    <StdViol msg="This block should contain a comment explaining why it is empty" ln="36" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" auth="mgorecka" rule="CODSTA.READ.CEB" lnHash="1175112816" pkg="examples.flowanalysis" rule.header="Comment empty blocks" locStartPos="34" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="74199b5c-e054-3d78-aa17-ecbcd9b74bea" locEndPos="35" prio="Not Defined" locEndLn="36" goals="0," locStartln="36" sev="3" locRef="5" tool="jtest" lineHash="1175112816" unbViolId="bb6d0599-7807-3631-bd1a-cd95c708d4f4" risk="Undefined" locType="sr" hash="1710944294" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="5" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="-1075786335" pkg="examples.flowanalysis" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="02126309-3856-3ce7-b9fd-016050a41923" locEndPos="2" prio="Not Defined" locEndLn="5" goals="0," locStartln="5" sev="3" locRef="6" tool="jtest" lineHash="-1075786335" unbViolId="3a3a050c-cfb9-3e35-af84-30fc396b64f3" risk="Undefined" locType="sr" hash="-1842798386" />
    <StdViol msg="Missing Javadoc comment for 'AlwaysCloseRAFs'" ln="5" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" auth="mgorecka" rule="JAVADOC.PJDC" lnHash="-1075786335" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for types" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="887d4590-0369-31a1-abe4-ba471261da67" locEndPos="28" prio="Not Defined" locEndLn="5" goals="0," locStartln="5" sev="3" locRef="6" tool="jtest" lineHash="-1075786335" unbViolId="98e8d619-c7fe-3946-97a1-ebaa797e40f8" risk="Undefined" locType="sr" hash="-1842798386" />
    <StdViol msg="Missing Javadoc comment for method 'read()'" ln="7" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="883730092" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a340a021-ea8b-3fb6-a246-e373a90cfa25" locEndPos="22" prio="Not Defined" locEndLn="7" goals="0," locStartln="7" sev="3" locRef="6" tool="jtest" lineHash="883730092" unbViolId="be5b1744-a0d0-33ba-ae14-b11ee019c8d2" risk="Undefined" locType="sr" hash="-1842798386" />
    <StdViol msg="Variable 'raf' may not have a close resource" ln="10" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" auth="mgorecka" rule="PB.CLOSE" lnHash="-1850530378" pkg="examples.flowanalysis" rule.header="Unrestricted lock resource" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="36f6c88a-b9a8-3259-98a1-864c2ddf28a4" locEndPos="74" prio="Not Defined" locEndLn="10" goals="0," locStartln="10" sev="1" locRef="6" tool="jtest" lineHash="-1850530378" unbViolId="e3ef5b3a-02ef-3f53-bd54-4374e5cde894" risk="Undefined" locType="sr" hash="-1842798386" />
    <StdViol msg="Variable 'read' is never used" ln="12" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" auth="mgorecka" rule="UC.AURV" lnHash="609178338" pkg="examples.flowanalysis" rule.header="Avoid local variables that are never read" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8b944508-e7b6-31a3-947e-27d88919b233" locEndPos="20" prio="Not Defined" locEndLn="12" goals="0," locStartln="12" sev="3" locRef="6" tool="jtest" lineHash="609178338" unbViolId="d4228e9b-b277-35b0-b71c-490e5d69eaa9" risk="Undefined" locType="sr" hash="-1842798386" />
    <StdViol msg="You may not want to use this constructor for 'String' because it does not allow you to specify an encoding option" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" auth="mgorecka" rule="INTER.SEO" lnHash="754913193" pkg="examples.flowanalysis" rule.header="Avoid calling methods and constructors which do not allow you to specify a character encoding option" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="bc903597-95c9-39cd-9f5f-94e5c1d19f66" locEndPos="28" prio="Not Defined" locEndLn="13" goals="0," locStartln="13" sev="3" locRef="6" tool="jtest" lineHash="754913193" unbViolId="092e85b9-6d86-30d7-8a15-3c33c61184eb" risk="Undefined" locType="sr" hash="-1842798386" />
    <StdViol msg="&quot;catch&quot; statement directly catches the general exception type 'Exception'" ln="14" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" auth="mgorecka" rule="CODSTA.EPC.NCE" lnHash="100324464" pkg="examples.flowanalysis" rule.header="Do not catch exception types which are too general or are unchecked exceptions" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f2a5ba11-df56-34a0-a5a7-e91ccae6d4be" locEndPos="26" prio="Not Defined" locEndLn="14" goals="0," locStartln="14" sev="3" locRef="6" tool="jtest" lineHash="100324464" unbViolId="78bcee5d-6db4-374a-b2c5-4be0b2dbea3e" risk="Undefined" locType="sr" hash="-1842798386" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="2082685994" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9012a5bf-1ec4-349b-9fa4-67e3aa4204c5" locEndPos="32" prio="Not Defined" locEndLn="15" goals="0," locStartln="15" sev="3" locRef="6" tool="jtest" lineHash="2082685994" unbViolId="5a6d4efe-3759-386f-bc25-ef8587f819fa" risk="Undefined" locType="sr" hash="-1842798386" />
    <StdViol msg="Missing Javadoc comment for method 'readClose()'" ln="20" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-1563457944" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d9ccea7d-2a37-34fe-9e46-a47295aead21" locEndPos="27" prio="Not Defined" locEndLn="20" goals="0," locStartln="20" sev="3" locRef="6" tool="jtest" lineHash="-1563457944" unbViolId="aaebffc0-a367-3b7c-ae11-6ae291fb6828" risk="Undefined" locType="sr" hash="-1842798386" />
    <StdViol msg="Variable 'read' is never used" ln="26" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" auth="mgorecka" rule="UC.AURV" lnHash="609178338" pkg="examples.flowanalysis" rule.header="Avoid local variables that are never read" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ec7ab111-4c63-3474-be8c-4eaed1d005b5" locEndPos="20" prio="Not Defined" locEndLn="26" goals="0," locStartln="26" sev="3" locRef="6" tool="jtest" lineHash="609178338" unbViolId="5503f023-3405-32f9-ac36-979a66113058" risk="Undefined" locType="sr" hash="-1842798386" />
    <StdViol msg="You may not want to use this constructor for 'String' because it does not allow you to specify an encoding option" ln="27" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" auth="mgorecka" rule="INTER.SEO" lnHash="754913193" pkg="examples.flowanalysis" rule.header="Avoid calling methods and constructors which do not allow you to specify a character encoding option" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="701d9777-dcd6-3fb1-82c2-2b7bde68b33e" locEndPos="28" prio="Not Defined" locEndLn="27" goals="0," locStartln="27" sev="3" locRef="6" tool="jtest" lineHash="754913193" unbViolId="4ddaf8c4-dd3b-373d-88dc-2ffa45c97711" risk="Undefined" locType="sr" hash="-1842798386" />
    <StdViol msg="&quot;catch&quot; statement directly catches the general exception type 'Exception'" ln="28" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" auth="mgorecka" rule="CODSTA.EPC.NCE" lnHash="100324464" pkg="examples.flowanalysis" rule.header="Do not catch exception types which are too general or are unchecked exceptions" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="22315c1f-0987-3398-bd00-143c90491fe9" locEndPos="26" prio="Not Defined" locEndLn="28" goals="0," locStartln="28" sev="3" locRef="6" tool="jtest" lineHash="100324464" unbViolId="7a2b36e6-588a-3eb8-89ee-15e49c1f7eb2" risk="Undefined" locType="sr" hash="-1842798386" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="29" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="2082685994" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a5190c8c-27e7-37ad-abcb-7544d57efd61" locEndPos="32" prio="Not Defined" locEndLn="29" goals="0," locStartln="29" sev="3" locRef="6" tool="jtest" lineHash="2082685994" unbViolId="f7f06642-4a65-3820-810d-895c9d4d9089" risk="Undefined" locType="sr" hash="-1842798386" />
    <FlowViol msg="&quot;raf&quot; may possibly be null" ln="32" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="36" auth="mgorecka" FirstElSrcRngEndLn="22" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="216587865" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="22" locStartPos="16" analyzer="com.parasoft.jtest.flowanalyzer" id="-1380964692" lang="java" violId="8ec67283-cf80-3e8d-9462-8f0c9e7495bb" locEndPos="28" urgent="true" prio="Not Defined" locEndLn="32" goals="1," locStartln="32" sev="1" locRef="6" tool="jtest" lineHash="216587865" unbViolId="1a16993a-4ab6-3994-884c-fdef01c8c34f" risk="Undefined" locType="sr" hash="-1842798386" causeLocRef="6">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1121458434" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" ln="21" srcRngStartPos="8" srcRngEndPos="26" srcRngStartln="21" srcRngEndLn="21" desc="String res = null;" ElType="." rngLn="21" />
        <ElDesc lineHash="-1186737013" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" ln="22" srcRngStartPos="8" srcRngEndPos="36" srcRngStartln="22" srcRngEndLn="22" desc="RandomAccessFile raf = null;" ElType=".C" rngLn="22">
          <Props>
            <Prop key="Tracked variables" val="raf" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: raf" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1370866899" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" ln="24" srcRngStartPos="18" srcRngEndPos="56" srcRngStartln="24" srcRngEndLn="24" desc="new RandomAccessFile(sFileName, sMode)" ElType="!E" rngLn="24" thrownTypes="FileNotFoundException" throwingMethod="RandomAccessFile.RandomAccessFile">
          <Anns>
            <Ann msg="RandomAccessFile.RandomAccessFile() throws FileNotFoundException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="100324464" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" ln="28" srcRngStartPos="10" srcRngEndPos="30" srcRngStartln="28" srcRngEndLn="28" desc="catch (Exception e)" ElType="." rngLn="28" />
        <ElDesc lineHash="2082685994" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" ln="29" srcRngStartPos="12" srcRngEndPos="33" srcRngStartln="29" srcRngEndLn="29" desc="System.out.println();" ElType="." rngLn="29" />
        <ElDesc lineHash="216587865" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" ln="32" srcRngStartPos="16" srcRngEndPos="28" srcRngStartln="32" srcRngEndLn="32" desc="raf.close();" ElType=".P" rngLn="32">
          <Props>
            <Prop key="Tracked variables" val="raf" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: raf" kind="var" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="&quot;catch&quot; block has an empty body" ln="33" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" auth="mgorecka" rule="PB.TYPO.AECB" lnHash="1175112816" pkg="examples.flowanalysis" rule.header="Avoid &quot;try&quot;, &quot;catch&quot; and &quot;finally&quot; blocks with empty bodies" locStartPos="14" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0ff25888-9f50-3c32-83c5-efb200d28ee8" locEndPos="19" prio="Not Defined" locEndLn="33" goals="0," locStartln="33" sev="3" locRef="6" tool="jtest" lineHash="1175112816" unbViolId="ce73f0f0-04a5-399d-b121-ba4285b4602c" risk="Undefined" locType="sr" hash="-1842798386" />
    <StdViol msg="&quot;catch&quot; statement directly catches the general exception type 'Exception'" ln="33" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" auth="mgorecka" rule="CODSTA.EPC.NCE" lnHash="1175112816" pkg="examples.flowanalysis" rule.header="Do not catch exception types which are too general or are unchecked exceptions" locStartPos="21" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="41e04ee0-b9f9-3947-b993-cc83a049192e" locEndPos="30" prio="Not Defined" locEndLn="33" goals="0," locStartln="33" sev="3" locRef="6" tool="jtest" lineHash="1175112816" unbViolId="e4b34dc8-a5fe-3680-8de4-2d5ecb35f2fc" risk="Undefined" locType="sr" hash="-1842798386" />
    <StdViol msg="This block should contain a comment explaining why it is empty" ln="33" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" auth="mgorecka" rule="CODSTA.READ.CEB" lnHash="1175112816" pkg="examples.flowanalysis" rule.header="Comment empty blocks" locStartPos="34" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b3bad533-1d41-3d2e-b966-47d37e2fc5f3" locEndPos="35" prio="Not Defined" locEndLn="33" goals="0," locStartln="33" sev="3" locRef="6" tool="jtest" lineHash="1175112816" unbViolId="09303fc7-9b8b-3a13-9c16-af1433b22e98" risk="Undefined" locType="sr" hash="-1842798386" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="8" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="1150062193" pkg="examples.flowanalysis" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="09325fa7-4c02-35f6-98d2-b8b15e243e1e" locEndPos="2" prio="Not Defined" locEndLn="8" goals="0," locStartln="8" sev="3" locRef="7" tool="jtest" lineHash="1150062193" unbViolId="9e9f346f-7421-3ff0-95d9-0baf367d10e6" risk="Undefined" locType="sr" hash="-69784133" />
    <StdViol msg="Missing Javadoc comment for 'AlwaysCloseSockets'" ln="8" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" auth="mgorecka" rule="JAVADOC.PJDC" lnHash="1150062193" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for types" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b88f3fe5-cb53-3b79-8902-a2b32fdeec25" locEndPos="31" prio="Not Defined" locEndLn="8" goals="0," locStartln="8" sev="3" locRef="7" tool="jtest" lineHash="1150062193" unbViolId="d36ad277-debd-3555-b015-e12c1a770eae" risk="Undefined" locType="sr" hash="-69784133" />
    <StdViol msg="Missing Javadoc comment for method 'connectClient()'" ln="10" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-822613860" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="60dfa79e-e375-35ad-b6fd-211ff249ed0e" locEndPos="29" prio="Not Defined" locEndLn="10" goals="0," locStartln="10" sev="3" locRef="7" tool="jtest" lineHash="-822613860" unbViolId="a9afaa2d-6d3d-368a-aa05-875735a9a20b" risk="Undefined" locType="sr" hash="-69784133" />
    <StdViol msg="Variable 'sock' is never used" ln="12" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" auth="mgorecka" rule="UC.AURV" lnHash="-657680996" pkg="examples.flowanalysis" rule.header="Avoid local variables that are never read" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="257fa842-e3ae-3b5d-9e0e-33bd6dff7dd9" locEndPos="23" prio="Not Defined" locEndLn="12" goals="0," locStartln="12" sev="3" locRef="7" tool="jtest" lineHash="-657680996" unbViolId="1edc0bcf-ee06-337b-8efa-989de54bd32a" risk="Undefined" locType="sr" hash="-69784133" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="1266022184" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e4cd64a7-6bc4-33ee-8a77-63daf78f16be" locEndPos="59" prio="Not Defined" locEndLn="15" goals="0," locStartln="15" sev="3" locRef="7" tool="jtest" lineHash="1266022184" unbViolId="5d77affd-57c0-37dc-88dc-356e0e885e81" risk="Undefined" locType="sr" hash="-69784133" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" auth="mgorecka" rule="SECURITY.ESD.PEO" lnHash="1266022184" pkg="examples.flowanalysis" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="18e58ae2-1c03-3cba-b491-8391c0676216" locEndPos="30" prio="Not Defined" locEndLn="15" goals="0," locStartln="15" sev="1" locRef="7" tool="jtest" lineHash="1266022184" unbViolId="50ed262d-a97b-302c-b0e0-7a46d9f25343" risk="Undefined" locType="sr" hash="-69784133" />
    <StdViol msg="Missing Javadoc comment for method 'connectClientClose()'" ln="19" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-834668876" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="69f6bdcb-d0f1-3f41-9fdd-d2e6c287b28c" locEndPos="34" prio="Not Defined" locEndLn="19" goals="0," locStartln="19" sev="3" locRef="7" tool="jtest" lineHash="-834668876" unbViolId="30dd3aef-c4b5-3dba-8b59-588457990def" risk="Undefined" locType="sr" hash="-69784133" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="25" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="1266022184" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="139c71a4-a92b-3e6c-b094-406ac0a7673e" locEndPos="59" prio="Not Defined" locEndLn="25" goals="0," locStartln="25" sev="3" locRef="7" tool="jtest" lineHash="1266022184" unbViolId="189a69c7-7bbe-3477-94f4-90442b9b2fca" risk="Undefined" locType="sr" hash="-69784133" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="25" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" auth="mgorecka" rule="SECURITY.ESD.PEO" lnHash="1266022184" pkg="examples.flowanalysis" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ff80e50f-2a25-303e-8cab-898e44072fca" locEndPos="30" prio="Not Defined" locEndLn="25" goals="0," locStartln="25" sev="1" locRef="7" tool="jtest" lineHash="1266022184" unbViolId="3d429cef-728e-3231-9a5b-0a8423850d9f" risk="Undefined" locType="sr" hash="-69784133" />
    <FlowViol msg="&quot;sock&quot; may possibly be null" ln="28" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="27" auth="mgorecka" FirstElSrcRngEndLn="20" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="1669608780" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="20" locStartPos="16" analyzer="com.parasoft.jtest.flowanalyzer" id="930536523" lang="java" violId="6d2c5e7f-33f5-3d8c-8f66-d2b84047995b" locEndPos="29" urgent="true" prio="Not Defined" locEndLn="28" goals="1," locStartln="28" sev="1" locRef="7" tool="jtest" lineHash="1669608780" unbViolId="c365d1e2-3a1f-3894-ad72-ca6efe8c08f0" risk="Undefined" locType="sr" hash="-69784133" causeLocRef="7">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1379796226" locType="sr" srcRnghash="-69784133" locRef="7" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" ln="20" srcRngStartPos="8" srcRngEndPos="27" srcRngStartln="20" srcRngEndLn="20" desc="Socket sock = null;" ElType=".C" rngLn="20">
          <Props>
            <Prop key="Tracked variables" val="sock" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: sock" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="250633455" locType="sr" srcRnghash="-69784133" locRef="7" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" ln="22" srcRngStartPos="12" srcRngEndPos="37" srcRngStartln="22" srcRngEndLn="22" desc="sock = srvSocket.accept()" ElType="!E" rngLn="22" thrownTypes="IOException" throwingMethod="ServerSocket.accept">
          <Anns>
            <Ann msg="ServerSocket.accept() throws IOException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2094668668" locType="sr" srcRnghash="-69784133" locRef="7" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" ln="24" srcRngStartPos="10" srcRngEndPos="34" srcRngStartln="24" srcRngEndLn="24" desc="catch (IOException ioe)" ElType="." rngLn="24" />
        <ElDesc lineHash="1266022184" locType="sr" srcRnghash="-69784133" locRef="7" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" ln="25" srcRngStartPos="12" srcRngEndPos="60" srcRngStartln="25" srcRngEndLn="25" desc="System.out.println(&quot;Exception occured: &quot; + ioe);" ElType="." rngLn="25" />
        <ElDesc lineHash="1669608780" locType="sr" srcRnghash="-69784133" locRef="7" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" ln="28" srcRngStartPos="16" srcRngEndPos="29" srcRngStartln="28" srcRngEndLn="28" desc="sock.close();" ElType=".P" rngLn="28">
          <Props>
            <Prop key="Tracked variables" val="sock" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: sock" kind="var" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="&quot;catch&quot; block has an empty body" ln="29" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" auth="mgorecka" rule="PB.TYPO.AECB" lnHash="1175112816" pkg="examples.flowanalysis" rule.header="Avoid &quot;try&quot;, &quot;catch&quot; and &quot;finally&quot; blocks with empty bodies" locStartPos="14" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="31f80a0a-bd3f-3357-ba9a-42f13022330c" locEndPos="19" prio="Not Defined" locEndLn="29" goals="0," locStartln="29" sev="3" locRef="7" tool="jtest" lineHash="1175112816" unbViolId="b8943f38-bcd3-3c0c-b9e5-058f21a3f551" risk="Undefined" locType="sr" hash="-69784133" />
    <StdViol msg="&quot;catch&quot; statement directly catches the general exception type 'Exception'" ln="29" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" auth="mgorecka" rule="CODSTA.EPC.NCE" lnHash="1175112816" pkg="examples.flowanalysis" rule.header="Do not catch exception types which are too general or are unchecked exceptions" locStartPos="21" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4bd7baa2-21db-3eb5-b5a7-fd8386f78bdb" locEndPos="30" prio="Not Defined" locEndLn="29" goals="0," locStartln="29" sev="3" locRef="7" tool="jtest" lineHash="1175112816" unbViolId="530c2f2e-dc2d-3fc2-82f5-ecc34619e2f5" risk="Undefined" locType="sr" hash="-69784133" />
    <StdViol msg="This block should contain a comment explaining why it is empty" ln="29" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" auth="mgorecka" rule="CODSTA.READ.CEB" lnHash="1175112816" pkg="examples.flowanalysis" rule.header="Comment empty blocks" locStartPos="34" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3c7d2aa9-6110-34c8-8302-9eaf3222bc78" locEndPos="35" prio="Not Defined" locEndLn="29" goals="0," locStartln="29" sev="3" locRef="7" tool="jtest" lineHash="1175112816" unbViolId="90719e73-f187-34c7-adbf-337a2befaadf" risk="Undefined" locType="sr" hash="-69784133" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="11" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="-916130416" pkg="examples.flowanalysis" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4b66410f-1b51-3f26-b416-9ce8a711034f" locEndPos="2" prio="Not Defined" locEndLn="11" goals="0," locStartln="11" sev="3" locRef="8" tool="jtest" lineHash="-916130416" unbViolId="a4031bce-c96b-3406-b6df-f53f32b3c32e" risk="Undefined" locType="sr" hash="-1630627415" />
    <StdViol msg="Missing Javadoc comment for 'AlwaysCloseXMLEncDec'" ln="11" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="mgorecka" rule="JAVADOC.PJDC" lnHash="-916130416" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for types" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b7494c48-8611-36ad-a38a-f7aa9b524c35" locEndPos="33" prio="Not Defined" locEndLn="11" goals="0," locStartln="11" sev="3" locRef="8" tool="jtest" lineHash="-916130416" unbViolId="d87e87a1-3391-3b9e-b04b-0815baeb4ebe" risk="Undefined" locType="sr" hash="-1630627415" />
    <StdViol msg="Missing Javadoc comment for method 'store()'" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="1202266928" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f00c010a-70b9-3ca4-87a8-f7c6feb4c57d" locEndPos="21" prio="Not Defined" locEndLn="13" goals="0," locStartln="13" sev="3" locRef="8" tool="jtest" lineHash="1202266928" unbViolId="e3a5fe87-0166-349c-bd9d-55812774a4ba" risk="Undefined" locType="sr" hash="-1630627415" />
    <StdViol msg="&quot;catch&quot; statement directly catches the general exception type 'Exception'" ln="19" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="mgorecka" rule="CODSTA.EPC.NCE" lnHash="100324464" pkg="examples.flowanalysis" rule.header="Do not catch exception types which are too general or are unchecked exceptions" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="42de0b72-99a9-30c7-ad6c-eda47f59a9cd" locEndPos="26" prio="Not Defined" locEndLn="19" goals="0," locStartln="19" sev="3" locRef="8" tool="jtest" lineHash="100324464" unbViolId="96a149f4-fb37-30b4-9961-c67766303cc5" risk="Undefined" locType="sr" hash="-1630627415" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="20" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="957734862" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="52aab783-bbb9-322f-a493-2fc69a0d7ed1" locEndPos="57" prio="Not Defined" locEndLn="20" goals="0," locStartln="20" sev="3" locRef="8" tool="jtest" lineHash="957734862" unbViolId="1c5a07bb-c573-30de-9a6d-a06771dd8a39" risk="Undefined" locType="sr" hash="-1630627415" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="20" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="mgorecka" rule="SECURITY.ESD.PEO" lnHash="957734862" pkg="examples.flowanalysis" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="16cf9a3d-82e2-374b-aadf-49de283b9ef1" locEndPos="30" prio="Not Defined" locEndLn="20" goals="0," locStartln="20" sev="1" locRef="8" tool="jtest" lineHash="957734862" unbViolId="bdce3d2f-a948-3a89-b3dc-9b7e120d9cbc" risk="Undefined" locType="sr" hash="-1630627415" />
    <StdViol msg="Missing Javadoc comment for method 'read()'" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-133713313" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="31552035-fbb0-32f2-accc-9c72b89560e1" locEndPos="24" prio="Not Defined" locEndLn="24" goals="0," locStartln="24" sev="3" locRef="8" tool="jtest" lineHash="-133713313" unbViolId="9f220a3a-d882-3789-b643-e0513ed93770" risk="Undefined" locType="sr" hash="-1630627415" />
    <StdViol msg="Consider changing the raw type 'Vector' to a parameterized type" ln="25" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="mgorecka" rule="CODSTA.POD.UPT" lnHash="-1310850359" pkg="examples.flowanalysis" rule.header="Enforce or avoid the use of parameterized types" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="146b76ff-386b-38fd-8b2c-a022f2c15c62" locEndPos="14" prio="Not Defined" locEndLn="25" goals="0," locStartln="25" sev="3" locRef="8" tool="jtest" lineHash="-1310850359" unbViolId="c936a3bf-2cb9-3579-ad86-532f135b3b21" risk="Undefined" locType="sr" hash="-1630627415" />
    <StdViol msg="Initial container capacity is not specified" ln="25" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="mgorecka" rule="OPT.DIC" lnHash="-1310850359" pkg="examples.flowanalysis" rule.header="Define initial capacities for 'ArrayList', 'HashMap', 'HashSet', 'Hashtable', 'Vector' and 'WeakHashMap'" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="7e29a3bc-dbbf-3177-acd5-c2a199e6ad4e" locEndPos="33" prio="Not Defined" locEndLn="25" goals="0," locStartln="25" sev="3" locRef="8" tool="jtest" lineHash="-1310850359" unbViolId="17b2385a-b32f-30b7-8cbc-589585742eb1" risk="Undefined" locType="sr" hash="-1630627415" />
    <StdViol msg="&quot;catch&quot; statement directly catches the general exception type 'Exception'" ln="36" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="mgorecka" rule="CODSTA.EPC.NCE" lnHash="100324464" pkg="examples.flowanalysis" rule.header="Do not catch exception types which are too general or are unchecked exceptions" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e7448cef-373f-3070-871b-5485c5f74ec4" locEndPos="26" prio="Not Defined" locEndLn="36" goals="0," locStartln="36" sev="3" locRef="8" tool="jtest" lineHash="100324464" unbViolId="4fabdd98-ba24-3be7-b0e7-6308c1a9d7d4" risk="Undefined" locType="sr" hash="-1630627415" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="37" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="957734862" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="16d391b9-b1a0-38a4-9327-66248af47eef" locEndPos="57" prio="Not Defined" locEndLn="37" goals="0," locStartln="37" sev="3" locRef="8" tool="jtest" lineHash="957734862" unbViolId="d393ff22-7db5-3a5b-b719-e161d7844dab" risk="Undefined" locType="sr" hash="-1630627415" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="37" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="mgorecka" rule="SECURITY.ESD.PEO" lnHash="957734862" pkg="examples.flowanalysis" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="84def08c-7a29-32e3-9496-4d576c108aed" locEndPos="30" prio="Not Defined" locEndLn="37" goals="0," locStartln="37" sev="1" locRef="8" tool="jtest" lineHash="957734862" unbViolId="bc5e47a7-cb28-3f10-8dec-f8dab4d7924b" risk="Undefined" locType="sr" hash="-1630627415" />
    <StdViol msg="Missing Javadoc comment for method 'storeClose()'" ln="42" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="875893168" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="057a4547-8ed5-3f7c-8bd7-26037aaefb1b" locEndPos="26" prio="Not Defined" locEndLn="42" goals="0," locStartln="42" sev="3" locRef="8" tool="jtest" lineHash="875893168" unbViolId="8b950673-a7c8-38a5-a727-1c0794d4a50d" risk="Undefined" locType="sr" hash="-1630627415" />
    <StdViol msg="&quot;catch&quot; statement directly catches the general exception type 'Exception'" ln="49" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="mgorecka" rule="CODSTA.EPC.NCE" lnHash="100324464" pkg="examples.flowanalysis" rule.header="Do not catch exception types which are too general or are unchecked exceptions" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6e7c054f-1a98-3674-86e7-99f2d5e5cfa0" locEndPos="26" prio="Not Defined" locEndLn="49" goals="0," locStartln="49" sev="3" locRef="8" tool="jtest" lineHash="100324464" unbViolId="f654cc4c-7475-341b-b88c-64d5c8621012" risk="Undefined" locType="sr" hash="-1630627415" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="50" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="957734862" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="92e1f3dc-c116-3922-b8b4-d4298c3c1bca" locEndPos="57" prio="Not Defined" locEndLn="50" goals="0," locStartln="50" sev="3" locRef="8" tool="jtest" lineHash="957734862" unbViolId="39b54bb7-a40c-313d-9e44-1a3fb09f37a4" risk="Undefined" locType="sr" hash="-1630627415" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="50" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="mgorecka" rule="SECURITY.ESD.PEO" lnHash="957734862" pkg="examples.flowanalysis" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f6b61c67-87c4-3f03-ad89-ee0f8be12614" locEndPos="30" prio="Not Defined" locEndLn="50" goals="0," locStartln="50" sev="1" locRef="8" tool="jtest" lineHash="957734862" unbViolId="394927b9-0955-3b09-963b-2f8408a00fb9" risk="Undefined" locType="sr" hash="-1630627415" />
    <FlowViol msg="&quot;encoder&quot; may possibly be null" ln="52" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="34" auth="mgorecka" FirstElSrcRngEndLn="43" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="1289477876" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="43" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="1392202515" lang="java" violId="dc676837-8b9f-3b00-90d4-d08659f3f47b" locEndPos="28" urgent="true" prio="Not Defined" locEndLn="52" goals="1," locStartln="52" sev="1" locRef="8" tool="jtest" lineHash="1289477876" unbViolId="29a3c62d-fe7e-3574-863c-53f6416346e1" risk="Undefined" locType="sr" hash="-1630627415" causeLocRef="8">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1358363122" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" ln="43" srcRngStartPos="8" srcRngEndPos="34" srcRngStartln="43" srcRngEndLn="43" desc="XMLEncoder encoder = null;" ElType=".C" rngLn="43">
          <Props>
            <Prop key="Tracked variables" val="encoder" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: encoder" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="529589572" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" ln="45" srcRngStartPos="22" srcRngEndPos="41" srcRngStartln="45" srcRngEndLn="45" desc="new XMLEncoder(out)" ElType="!E" rngLn="45" thrownTypes="IllegalArgumentException" throwingMethod="XMLEncoder.XMLEncoder">
          <Anns>
            <Ann msg="XMLEncoder.XMLEncoder() throws IllegalArgumentException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="100324464" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" ln="49" srcRngStartPos="10" srcRngEndPos="30" srcRngStartln="49" srcRngEndLn="49" desc="catch (Exception e)" ElType="." rngLn="49" />
        <ElDesc lineHash="957734862" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" ln="50" srcRngStartPos="12" srcRngEndPos="58" srcRngStartln="50" srcRngEndLn="50" desc="System.out.println(&quot;Exception occured: &quot; + e);" ElType="." rngLn="50" />
        <ElDesc lineHash="1289477876" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" ln="52" srcRngStartPos="12" srcRngEndPos="28" srcRngStartln="52" srcRngEndLn="52" desc="encoder.close();" ElType=".P" rngLn="52">
          <Props>
            <Prop key="Tracked variables" val="encoder" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: encoder" kind="var" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Missing Javadoc comment for method 'readClose()'" ln="56" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="1213337659" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f9d724d0-e70b-3d23-9889-276d6d336ecc" locEndPos="29" prio="Not Defined" locEndLn="56" goals="0," locStartln="56" sev="3" locRef="8" tool="jtest" lineHash="1213337659" unbViolId="ca9d55dc-54ea-3192-a721-59dcd49bd78e" risk="Undefined" locType="sr" hash="-1630627415" />
    <StdViol msg="Consider changing the raw type 'Vector' to a parameterized type" ln="57" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="mgorecka" rule="CODSTA.POD.UPT" lnHash="-1310850359" pkg="examples.flowanalysis" rule.header="Enforce or avoid the use of parameterized types" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8833a980-6752-3875-8b44-e377be776abd" locEndPos="14" prio="Not Defined" locEndLn="57" goals="0," locStartln="57" sev="3" locRef="8" tool="jtest" lineHash="-1310850359" unbViolId="85efff9c-4747-3938-8790-0feeb4806205" risk="Undefined" locType="sr" hash="-1630627415" />
    <StdViol msg="Initial container capacity is not specified" ln="57" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="mgorecka" rule="OPT.DIC" lnHash="-1310850359" pkg="examples.flowanalysis" rule.header="Define initial capacities for 'ArrayList', 'HashMap', 'HashSet', 'Hashtable', 'Vector' and 'WeakHashMap'" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="dcc95d20-5deb-3062-91c5-67ef3eaeef04" locEndPos="33" prio="Not Defined" locEndLn="57" goals="0," locStartln="57" sev="3" locRef="8" tool="jtest" lineHash="-1310850359" unbViolId="5481d3c5-a558-3136-9e9d-f645f2e21999" risk="Undefined" locType="sr" hash="-1630627415" />
    <StdViol msg="&quot;catch&quot; statement directly catches the general exception type 'Exception'" ln="68" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="mgorecka" rule="CODSTA.EPC.NCE" lnHash="100324464" pkg="examples.flowanalysis" rule.header="Do not catch exception types which are too general or are unchecked exceptions" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b75d32ba-0636-3f2e-9d35-0bbf242391e1" locEndPos="26" prio="Not Defined" locEndLn="68" goals="0," locStartln="68" sev="3" locRef="8" tool="jtest" lineHash="100324464" unbViolId="1613ad44-2512-3630-ae9f-d7c203b8a3af" risk="Undefined" locType="sr" hash="-1630627415" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="69" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="957734862" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="caed081b-0927-3f6b-b033-77f3040b95aa" locEndPos="57" prio="Not Defined" locEndLn="69" goals="0," locStartln="69" sev="3" locRef="8" tool="jtest" lineHash="957734862" unbViolId="d28efb13-ec7c-3e1b-b378-3d226cc31ce8" risk="Undefined" locType="sr" hash="-1630627415" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="69" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" auth="mgorecka" rule="SECURITY.ESD.PEO" lnHash="957734862" pkg="examples.flowanalysis" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="cba626b8-7a35-39ca-a4fb-9db30b418769" locEndPos="30" prio="Not Defined" locEndLn="69" goals="0," locStartln="69" sev="1" locRef="8" tool="jtest" lineHash="957734862" unbViolId="6ca55180-c4a1-35cd-89e3-9a24a4ff76a3" risk="Undefined" locType="sr" hash="-1630627415" />
    <FlowViol msg="&quot;decoder&quot; may possibly be null" ln="71" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="34" auth="mgorecka" FirstElSrcRngEndLn="58" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="1116947660" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="58" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="34245236" lang="java" violId="0900f651-323d-3150-999b-13bbfbd48633" locEndPos="28" urgent="true" prio="Not Defined" locEndLn="71" goals="1," locStartln="71" sev="1" locRef="8" tool="jtest" lineHash="1116947660" unbViolId="447b1c89-6314-3617-b6f9-096ebd8e87dc" risk="Undefined" locType="sr" hash="-1630627415" causeLocRef="8">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-1310850359" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" ln="57" srcRngStartPos="8" srcRngEndPos="36" srcRngStartln="57" srcRngEndLn="57" desc="Vector vObjs = new Vector();" ElType="." rngLn="57" />
        <ElDesc lineHash="23744578" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" ln="58" srcRngStartPos="8" srcRngEndPos="34" srcRngStartln="58" srcRngEndLn="58" desc="XMLDecoder decoder = null;" ElType=".C" rngLn="58">
          <Props>
            <Prop key="Tracked variables" val="decoder" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: decoder" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1321082029" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" ln="60" srcRngStartPos="22" srcRngEndPos="40" srcRngStartln="60" srcRngEndLn="60" desc="new XMLDecoder(in)" ElType="!E" rngLn="60" thrownTypes="IllegalArgumentException" throwingMethod="XMLDecoder.XMLDecoder">
          <Anns>
            <Ann msg="XMLDecoder.XMLDecoder() throws IllegalArgumentException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="100324464" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" ln="68" srcRngStartPos="10" srcRngEndPos="30" srcRngStartln="68" srcRngEndLn="68" desc="catch (Exception e)" ElType="." rngLn="68" />
        <ElDesc lineHash="957734862" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" ln="69" srcRngStartPos="12" srcRngEndPos="58" srcRngStartln="69" srcRngEndLn="69" desc="System.out.println(&quot;Exception occured: &quot; + e);" ElType="." rngLn="69" />
        <ElDesc lineHash="1116947660" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" ln="71" srcRngStartPos="12" srcRngEndPos="28" srcRngStartln="71" srcRngEndLn="71" desc="decoder.close();" ElType=".P" rngLn="71">
          <Props>
            <Prop key="Tracked variables" val="decoder" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: decoder" kind="var" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Use 2 blank lines before type declaration" ln="9" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DereferenceBeforeNullCheck.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.flowanalysis" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="35264fd7-e01e-31f3-a989-9214794ab7e3" locEndPos="2" urgent="true" prio="Not Defined" locEndLn="9" goals="1," locStartln="9" sev="3" locRef="9" tool="jtest" lineHash="46511" unbViolId="95f69146-988a-3ff6-9fc9-87a0e92f1deb" risk="Undefined" locType="sr" hash="726838777" />
    <StdViol msg="Name of &quot;abstract&quot; class 'DereferenceBeforeNullCheck' does not match user-specified regular expression '^Abstract|Factory$'" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DereferenceBeforeNullCheck.java" auth="mgorecka" rule="NAMING.NACL" lnHash="-2139298151" pkg="examples.flowanalysis" rule.header="Use a naming convention for &quot;abstract&quot; classes" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d39fbf41-8980-3685-9800-12f77b1b4ba7" locEndPos="41" prio="Not Defined" locEndLn="15" goals="0," locStartln="15" sev="3" locRef="9" tool="jtest" lineHash="-2139298151" unbViolId="a99cad7c-880a-36f7-a95c-e176ae87a1f6" risk="Undefined" locType="sr" hash="726838777" />
    <StdViol msg="You may not want to use the type 'FileReader' because it does not allow you to specify an encoding option" ln="23" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DereferenceBeforeNullCheck.java" auth="mgorecka" rule="INTER.SEO" lnHash="-1664407388" pkg="examples.flowanalysis" rule.header="Avoid calling methods and constructors which do not allow you to specify a character encoding option" locStartPos="44" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="66bd4f46-a83c-3f7d-aa02-c6965b024451" locEndPos="54" urgent="true" prio="Not Defined" locEndLn="23" goals="1," locStartln="23" sev="3" locRef="9" tool="jtest" lineHash="-1664407388" unbViolId="1ac3328a-733c-3990-aa4d-1a1b91ac70d9" risk="Undefined" locType="sr" hash="726838777" />
    <StdViol msg="&quot;catch&quot; statement directly catches the general exception type 'Exception'" ln="51" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DereferenceBeforeNullCheck.java" auth="mgorecka" rule="CODSTA.EPC.NCE" lnHash="100324464" pkg="examples.flowanalysis" rule.header="Do not catch exception types which are too general or are unchecked exceptions" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9c30ed0f-c7de-346f-b384-71ecab1f51d8" locEndPos="26" urgent="true" prio="Not Defined" locEndLn="51" goals="1," locStartln="51" sev="3" locRef="9" tool="jtest" lineHash="100324464" unbViolId="aad38748-4848-307f-8441-1c472a51991e" risk="Undefined" locType="sr" hash="726838777" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="3" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.flowanalysis" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1585cd90-0ad8-39b4-be88-552478e48f44" locEndPos="2" prio="Not Defined" locEndLn="3" goals="0," locStartln="3" sev="3" locRef="10" tool="jtest" lineHash="46511" unbViolId="e2d1909e-ebf2-3c75-b85d-1d86e8afaf7d" risk="Undefined" locType="sr" hash="-1891737324" />
    <StdViol msg="Missing Javadoc comment for method 'calculateDiscountedSum()'" ln="14" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="907030458" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="026009da-7807-3114-8b9f-ca9a6da2e64e" locEndPos="46" prio="Not Defined" locEndLn="14" goals="0," locStartln="14" sev="3" locRef="10" tool="jtest" lineHash="907030458" unbViolId="b26ac051-4b0a-360d-bc4e-7e937989d47e" risk="Undefined" locType="sr" hash="-1891737324" />
    <StdViol msg="This block should contain a comment explaining why it is empty" ln="16" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" auth="mgorecka" rule="CODSTA.READ.CEB" lnHash="424308118" pkg="examples.flowanalysis" rule.header="Comment empty blocks" locStartPos="39" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c145691c-fe54-391e-996f-d898bb6bda1f" locEndPos="40" prio="Not Defined" locEndLn="16" goals="0," locStartln="16" sev="3" locRef="10" tool="jtest" lineHash="424308118" unbViolId="ff7f20e7-06b6-3972-836c-ef3adcb2ed0d" risk="Undefined" locType="sr" hash="-1891737324" />
    <FlowViol msg="Condition &quot;code == 0&quot; always evaluates to false" ln="17" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ruleSAFMsg="Point where senseless condition is used" FirstElSrcRngEndPos="92" auth="mgorecka" FirstElSrcRngEndLn="14" rule="BD.PB.CC" FirstElSrcRngStartPos="24" lnHash="2035788877" ruleSCSCMsg="Start of the path" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" rule.header="Avoid conditions that always evaluate to the same value" FirstElSrcRngStartln="14" locStartPos="15" analyzer="com.parasoft.jtest.flowanalyzer" id="-780681677" lang="java" violId="01bc7d44-8141-3462-aec0-b4fd19f67613" locEndPos="38" urgent="true" prio="Not Defined" locEndLn="17" goals="1," locStartln="17" sev="2" locRef="10" tool="jtest" lineHash="2035788877" unbViolId="08b0ae24-05f2-3a0a-8616-6fbaa3b7a00c" risk="Undefined" locType="sr" hash="-1891737324" causeLocRef="10">
      <Props />
      <ElDescList>
        <ElDesc lineHash="907030458" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ln="14" srcRngStartPos="24" srcRngEndPos="92" srcRngStartln="14" srcRngEndLn="14" desc="calculateDiscountedSum(int code, float initialSum, Consumer person)" ElType=".C" rngLn="14">
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1076318677" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ln="15" srcRngStartPos="8" srcRngEndPos="71" srcRngStartln="15" srcRngEndLn="15" desc="float discountedSum = calculateCommonDiscountedSum(initialSum);" ElType="." rngLn="15">
          <ElDescList>
            <ElDesc lineHash="1694878475" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ln="33" srcRngStartPos="8" srcRngEndPos="35" srcRngStartln="33" srcRngEndLn="33" desc="float discountedSum = 0.0f;" ElType="." rngLn="33" />
            <ElDesc lineHash="-167050145" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ln="34" srcRngStartPos="8" srcRngEndPos="32" srcRngStartln="34" srcRngEndLn="34" desc="if (initialSum > 5.0f) {" ElType="." rngLn="34">
              <Anns>
                <Ann msg="Condition evaluation: (initialSum > 5.0) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-847108515" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ln="37" srcRngStartPos="8" srcRngEndPos="32" srcRngStartln="37" srcRngEndLn="37" desc="if (initialSum &lt; 5.0f) {" ElType="." rngLn="37">
              <Anns>
                <Ann msg="Condition evaluation: (initialSum &lt; 5.0) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-184886784" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ln="40" srcRngStartPos="8" srcRngEndPos="29" srcRngStartln="40" srcRngEndLn="40" desc="return discountedSum;" ElType="." rngLn="40" />
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="424308118" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ln="16" srcRngStartPos="8" srcRngEndPos="40" srcRngStartln="16" srcRngEndLn="16" desc="if (code == PERSONAL_DISCOUNT) {" ElType="." rngLn="16">
          <Anns>
            <Ann msg="Condition evaluation: (code == 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2035788877" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ln="17" srcRngStartPos="15" srcRngEndPos="38" srcRngStartln="17" srcRngEndLn="17" desc="if (code == DISCOUNT) {" ElType=".P" rngLn="17">
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="The &quot;else&quot; condition always evaluates to &quot;false&quot; because of previous branches" ln="17" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" auth="mgorecka" rule="PB.USC.UIF" lnHash="2035788877" pkg="examples.flowanalysis" rule.header="Avoid unreachable &quot;else if&quot; and &quot;else&quot; cases" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="207669d8-12a6-302e-9a2d-32d6dab31884" locEndPos="35" prio="Not Defined" locEndLn="17" goals="0," locStartln="17" sev="1" locRef="10" tool="jtest" lineHash="2035788877" unbViolId="280961ed-aa8b-3c3f-b0c9-96afda7e0f5f" risk="Undefined" locType="sr" hash="-1891737324" />
    <StdViol msg="This block should contain a comment explaining why it is empty" ln="17" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" auth="mgorecka" rule="CODSTA.READ.CEB" lnHash="2035788877" pkg="examples.flowanalysis" rule.header="Comment empty blocks" locStartPos="37" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="84d1c944-3484-3ec7-9512-16a5e05af646" locEndPos="38" prio="Not Defined" locEndLn="17" goals="0," locStartln="17" sev="3" locRef="10" tool="jtest" lineHash="2035788877" unbViolId="eed5f042-3f3b-3d3a-85a7-241d5a80747f" risk="Undefined" locType="sr" hash="-1891737324" />
    <FlowViol msg="Condition &quot;code == 0&quot; always evaluates to false" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ruleSAFMsg="Point where senseless condition is used" FirstElSrcRngEndPos="92" auth="mgorecka" FirstElSrcRngEndLn="14" rule="BD.PB.CC" FirstElSrcRngStartPos="24" lnHash="-1311457596" ruleSCSCMsg="Start of the path" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" rule.header="Avoid conditions that always evaluate to the same value" FirstElSrcRngStartln="14" locStartPos="15" analyzer="com.parasoft.jtest.flowanalyzer" id="-1908253495" lang="java" violId="3627bdef-5b4e-356f-9ee4-ddbc7d265a38" locEndPos="43" urgent="true" prio="Not Defined" locEndLn="18" goals="1," locStartln="18" sev="2" locRef="10" tool="jtest" lineHash="-1311457596" unbViolId="ccd0b6b0-c7b4-3f5c-9913-c2106165f694" risk="Undefined" locType="sr" hash="-1891737324" causeLocRef="10">
      <Props />
      <ElDescList>
        <ElDesc lineHash="907030458" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ln="14" srcRngStartPos="24" srcRngEndPos="92" srcRngStartln="14" srcRngEndLn="14" desc="calculateDiscountedSum(int code, float initialSum, Consumer person)" ElType=".C" rngLn="14">
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1076318677" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ln="15" srcRngStartPos="8" srcRngEndPos="71" srcRngStartln="15" srcRngEndLn="15" desc="float discountedSum = calculateCommonDiscountedSum(initialSum);" ElType="." rngLn="15">
          <ElDescList>
            <ElDesc lineHash="1694878475" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ln="33" srcRngStartPos="8" srcRngEndPos="35" srcRngStartln="33" srcRngEndLn="33" desc="float discountedSum = 0.0f;" ElType="." rngLn="33" />
            <ElDesc lineHash="-167050145" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ln="34" srcRngStartPos="8" srcRngEndPos="32" srcRngStartln="34" srcRngEndLn="34" desc="if (initialSum > 5.0f) {" ElType="." rngLn="34">
              <Anns>
                <Ann msg="Condition evaluation: (initialSum > 5.0) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-847108515" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ln="37" srcRngStartPos="8" srcRngEndPos="32" srcRngStartln="37" srcRngEndLn="37" desc="if (initialSum &lt; 5.0f) {" ElType="." rngLn="37">
              <Anns>
                <Ann msg="Condition evaluation: (initialSum &lt; 5.0) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-184886784" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ln="40" srcRngStartPos="8" srcRngEndPos="29" srcRngStartln="40" srcRngEndLn="40" desc="return discountedSum;" ElType="." rngLn="40" />
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="424308118" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ln="16" srcRngStartPos="8" srcRngEndPos="40" srcRngStartln="16" srcRngEndLn="16" desc="if (code == PERSONAL_DISCOUNT) {" ElType="." rngLn="16">
          <Anns>
            <Ann msg="Condition evaluation: (code == 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2035788877" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ln="17" srcRngStartPos="15" srcRngEndPos="38" srcRngStartln="17" srcRngEndLn="17" desc="if (code == DISCOUNT) {" ElType="." rngLn="17">
          <Anns>
            <Ann msg="Condition evaluation: (code == 0) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1311457596" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ln="18" srcRngStartPos="15" srcRngEndPos="43" srcRngStartln="18" srcRngEndLn="18" desc="if (code == SPECIAL_OFFER) {" ElType=".P" rngLn="18">
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="The &quot;else&quot; condition always evaluates to &quot;false&quot; because of previous branches" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" auth="mgorecka" rule="PB.USC.UIF" lnHash="-1311457596" pkg="examples.flowanalysis" rule.header="Avoid unreachable &quot;else if&quot; and &quot;else&quot; cases" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="cc9891f6-9fa7-36ff-a75d-70473b7f1081" locEndPos="40" prio="Not Defined" locEndLn="18" goals="0," locStartln="18" sev="1" locRef="10" tool="jtest" lineHash="-1311457596" unbViolId="bff62512-0fca-366b-a122-344abbe89ce9" risk="Undefined" locType="sr" hash="-1891737324" />
    <StdViol msg="'discountedSum' used in a high-precision calculation or comparison is of type &quot;double&quot; or &quot;float&quot;" ln="19" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" auth="mgorecka" rule="PB.NUM.UBD" lnHash="-1617160313" pkg="examples.flowanalysis" rule.header="Do not use &quot;float&quot; and &quot;double&quot; if exact answers are required" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="cd04a56d-31d1-35a3-8e73-f9ebfc329400" locEndPos="25" prio="Not Defined" locEndLn="19" goals="0," locStartln="19" sev="3" locRef="10" tool="jtest" lineHash="-1617160313" unbViolId="d0dc915b-a09f-39b3-a532-fa4bae55e01b" risk="Undefined" locType="sr" hash="-1891737324" />
    <FlowViol msg="Division by &quot;discountedSum&quot; which may possibly be zero" ln="22" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ruleSAFMsg="Point of division by zero" FirstElSrcRngEndPos="71" auth="mgorecka" FirstElSrcRngEndLn="15" rule="BD.PB.ZERO" FirstElSrcRngStartPos="8" lnHash="203027039" ruleSCSCMsg="Start of the path" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" rule.header="Avoid division by zero" FirstElSrcRngStartln="15" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-1542057993" lang="java" violId="e33f1743-00e3-3a1f-b22a-55fa7bd18b7c" locEndPos="75" urgent="true" prio="Not Defined" locEndLn="22" goals="1," locStartln="22" sev="1" locRef="10" tool="jtest" lineHash="203027039" unbViolId="66c6e688-8ec4-3dda-aa8d-46fb5a6bc185" risk="Undefined" locType="sr" hash="-1891737324" causeLocRef="10">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-1076318677" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ln="15" srcRngStartPos="8" srcRngEndPos="71" srcRngStartln="15" srcRngEndLn="15" desc="float discountedSum = calculateCommonDiscountedSum(initialSum);" ElType=".C" rngLn="15">
          <ElDescList>
            <ElDesc lineHash="1694878475" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ln="33" srcRngStartPos="8" srcRngEndPos="35" srcRngStartln="33" srcRngEndLn="33" desc="float discountedSum = 0.0f;" ElType="!" rngLn="33" />
            <ElDesc lineHash="-167050145" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ln="34" srcRngStartPos="8" srcRngEndPos="32" srcRngStartln="34" srcRngEndLn="34" desc="if (initialSum > 5.0f) {" ElType="." rngLn="34">
              <Anns>
                <Ann msg="Condition evaluation: (initialSum > 5.0) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-847108515" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ln="37" srcRngStartPos="8" srcRngEndPos="32" srcRngStartln="37" srcRngEndLn="37" desc="if (initialSum &lt; 5.0f) {" ElType="." rngLn="37">
              <Anns>
                <Ann msg="Condition evaluation: (initialSum &lt; 5.0) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-184886784" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ln="40" srcRngStartPos="8" srcRngEndPos="29" srcRngStartln="40" srcRngEndLn="40" desc="return discountedSum;" ElType="!" rngLn="40" />
          </ElDescList>
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="424308118" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ln="16" srcRngStartPos="8" srcRngEndPos="40" srcRngStartln="16" srcRngEndLn="16" desc="if (code == PERSONAL_DISCOUNT) {" ElType="." rngLn="16">
          <Anns>
            <Ann msg="Condition evaluation: (code == 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="424308118" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ln="21" srcRngStartPos="8" srcRngEndPos="40" srcRngStartln="21" srcRngEndLn="21" desc="if (code == PERSONAL_DISCOUNT) {" ElType="." rngLn="21">
          <Anns>
            <Ann msg="Condition evaluation: (code == 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="203027039" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ln="22" srcRngStartPos="12" srcRngEndPos="75" srcRngStartln="22" srcRngEndLn="22" desc="float progressionCoef = person.getOverallSum() / discountedSum;" ElType=".P" rngLn="22">
          <Anns>
            <Ann msg="Point of division by zero" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="'person' used in a high-precision calculation or comparison is of type &quot;double&quot; or &quot;float&quot;" ln="22" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" auth="mgorecka" rule="PB.NUM.UBD" lnHash="203027039" pkg="examples.flowanalysis" rule.header="Do not use &quot;float&quot; and &quot;double&quot; if exact answers are required" locStartPos="36" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c0be37ce-6752-3577-bf22-f5b11c7e9b9a" locEndPos="42" prio="Not Defined" locEndLn="22" goals="0," locStartln="22" sev="3" locRef="10" tool="jtest" lineHash="203027039" unbViolId="c1856393-ebd3-3b48-bb59-640fbeb28a3b" risk="Undefined" locType="sr" hash="-1891737324" />
    <StdViol msg="'discountedSum' used in a high-precision calculation or comparison is of type &quot;double&quot; or &quot;float&quot;" ln="22" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" auth="mgorecka" rule="PB.NUM.UBD" lnHash="203027039" pkg="examples.flowanalysis" rule.header="Do not use &quot;float&quot; and &quot;double&quot; if exact answers are required" locStartPos="61" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ab4c723b-0448-32ff-bdbf-95d99b4be4b9" locEndPos="74" prio="Not Defined" locEndLn="22" goals="0," locStartln="22" sev="3" locRef="10" tool="jtest" lineHash="203027039" unbViolId="3aa8e7b1-626a-3d4b-a682-af9735f60801" risk="Undefined" locType="sr" hash="-1891737324" />
    <StdViol msg="'discountedSum' used in a high-precision calculation or comparison is of type &quot;double&quot; or &quot;float&quot;" ln="23" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" auth="mgorecka" rule="PB.NUM.UBD" lnHash="1656749243" pkg="examples.flowanalysis" rule.header="Do not use &quot;float&quot; and &quot;double&quot; if exact answers are required" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="52f5f112-7bd2-37a6-8ea7-18c4635a1123" locEndPos="25" prio="Not Defined" locEndLn="23" goals="0," locStartln="23" sev="3" locRef="10" tool="jtest" lineHash="1656749243" unbViolId="abe29173-750a-339e-8ada-e04675a5ee34" risk="Undefined" locType="sr" hash="-1891737324" />
    <StdViol msg="'person' used in a high-precision calculation or comparison is of type &quot;double&quot; or &quot;float&quot;" ln="25" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" auth="mgorecka" rule="PB.NUM.UBD" lnHash="-1095642192" pkg="examples.flowanalysis" rule.header="Do not use &quot;float&quot; and &quot;double&quot; if exact answers are required" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4f0afb93-1e5d-35e5-ba86-b70c84b8fe2e" locEndPos="26" prio="Not Defined" locEndLn="25" goals="0," locStartln="25" sev="3" locRef="10" tool="jtest" lineHash="-1095642192" unbViolId="d0536e9b-2dc2-33e1-b6a0-3f7b295804b6" risk="Undefined" locType="sr" hash="-1891737324" />
    <StdViol msg="'progressionCoef' used in a high-precision calculation or comparison is of type &quot;double&quot; or &quot;float&quot;" ln="25" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" auth="mgorecka" rule="PB.NUM.UBD" lnHash="-1095642192" pkg="examples.flowanalysis" rule.header="Do not use &quot;float&quot; and &quot;double&quot; if exact answers are required" locStartPos="62" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8f26155c-f32d-3333-9edb-3ebc5f9d97eb" locEndPos="77" prio="Not Defined" locEndLn="25" goals="0," locStartln="25" sev="3" locRef="10" tool="jtest" lineHash="-1095642192" unbViolId="0ffcc386-80e0-39ad-9daa-0e9fecfcc529" risk="Undefined" locType="sr" hash="-1891737324" />
    <StdViol msg="'discountedSum' used in a high-precision calculation or comparison is of type &quot;double&quot; or &quot;float&quot;" ln="28" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" auth="mgorecka" rule="PB.NUM.UBD" lnHash="1105188217" pkg="examples.flowanalysis" rule.header="Do not use &quot;float&quot; and &quot;double&quot; if exact answers are required" locStartPos="29" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="53607fdf-bfb6-3025-bd24-541e2bf82a77" locEndPos="42" prio="Not Defined" locEndLn="28" goals="0," locStartln="28" sev="3" locRef="10" tool="jtest" lineHash="1105188217" unbViolId="9c929d2e-afe3-386b-9dca-44f847e27c48" risk="Undefined" locType="sr" hash="-1891737324" />
    <StdViol msg="'person' used in a high-precision calculation or comparison is of type &quot;double&quot; or &quot;float&quot;" ln="28" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" auth="mgorecka" rule="PB.NUM.UBD" lnHash="1105188217" pkg="examples.flowanalysis" rule.header="Do not use &quot;float&quot; and &quot;double&quot; if exact answers are required" locStartPos="45" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f77ba0d6-50b6-3a1d-95b4-617f4987d25c" locEndPos="51" prio="Not Defined" locEndLn="28" goals="0," locStartln="28" sev="3" locRef="10" tool="jtest" lineHash="1105188217" unbViolId="83cadbd8-7940-35e8-a330-1310a498af7b" risk="Undefined" locType="sr" hash="-1891737324" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="47" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="-1389700455" pkg="examples.flowanalysis" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b498b476-4e57-3053-bef3-039abd9c8b13" locEndPos="6" prio="Not Defined" locEndLn="47" goals="0," locStartln="47" sev="3" locRef="10" tool="jtest" lineHash="-1389700455" unbViolId="01ab4cae-5550-3840-8fd1-f6f61e4a8df7" risk="Undefined" locType="sr" hash="-1891737324" />
    <StdViol msg="Member class could be declared &quot;static&quot;: Consumer" ln="47" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" auth="mgorecka" rule="OPT.SI" lnHash="-1389700455" pkg="examples.flowanalysis" rule.header="Declare member classes &quot;static&quot; if possible" locStartPos="10" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="e12c0085-dfd0-3d71-a49c-c677c51aee53" locEndPos="18" prio="Not Defined" locEndLn="47" goals="0," locStartln="47" sev="3" locRef="10" tool="jtest" lineHash="-1389700455" unbViolId="1e072e32-7d14-3983-bdce-cd0f69695b2d" risk="Undefined" locType="sr" hash="-1891737324" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="8" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="495598042" pkg="examples.flowanalysis" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="192d2153-3631-397a-b69f-f125bba11105" locEndPos="2" prio="Not Defined" locEndLn="8" goals="0," locStartln="8" sev="3" locRef="11" tool="jtest" lineHash="495598042" unbViolId="b9f18ce9-f7bc-3473-a6ca-0d22a7713f4f" risk="Undefined" locType="sr" hash="686946442" />
    <StdViol msg="Missing Javadoc comment for 'FilesInjection'" ln="8" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" auth="mgorecka" rule="JAVADOC.PJDC" lnHash="495598042" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for types" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4d884611-6ef9-328f-b871-9aeee9f72511" locEndPos="27" prio="Not Defined" locEndLn="8" goals="0," locStartln="8" sev="3" locRef="11" tool="jtest" lineHash="495598042" unbViolId="e99f2835-1087-3b51-a89c-896bb7194dcb" risk="Undefined" locType="sr" hash="686946442" />
    <StdViol msg="This '@param' tag does not contain a meaningful description of the parameter" ln="11" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" auth="mgorecka" rule="JAVADOC.MDJT" lnHash="-176826335" pkg="examples.flowanalysis" rule.header="Include a meaningful description in Javadoc tags" locStartPos="7" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="adb0f671-ba34-3693-a898-1d31157cfcf6" locEndPos="17" prio="Not Defined" locEndLn="11" goals="0," locStartln="11" sev="3" locRef="11" tool="jtest" lineHash="-176826335" unbViolId="1763d1a8-56d7-3bd1-8efe-bd100b034ed1" risk="Undefined" locType="sr" hash="686946442" />
    <StdViol msg="Parameter 'req' dereferenced before being checked for null" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" auth="mgorecka" rule="DBC.IPAN" lnHash="9287163" pkg="examples.flowanalysis" rule.header="Include a '@pre != null' tag for each parameter that is dereferenced before being checked for null" locStartPos="28" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0e2b9b38-5bc0-3c63-8ac9-8ea96cd66555" locEndPos="31" prio="Not Defined" locEndLn="15" goals="0," locStartln="15" sev="3" locRef="11" tool="jtest" lineHash="9287163" unbViolId="966f621b-6a81-3a09-aedd-203de5374b26" risk="Undefined" locType="sr" hash="686946442" />
    <FlowViol msg="Injection of data received from servlet request (&quot;sFileName&quot;) to filename setting method" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="59" auth="mgorecka" FirstElSrcRngEndLn="15" rule="BD.SECURITY.TDFNAMES" FirstElSrcRngStartPos="8" lnHash="1826395322" ruleSCSCMsg="Tainting point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" rule.header="Protect against File names injection" FirstElSrcRngStartln="15" locStartPos="19" analyzer="com.parasoft.jtest.flowanalyzer" id="-1636012915" lang="java" violId="d2e286e1-b267-3046-b5c2-e1f34800e6b2" locEndPos="50" urgent="true" prio="Not Defined" locEndLn="24" goals="1," locStartln="24" sev="1" locRef="11" tool="jtest" lineHash="1826395322" unbViolId="f8788316-d235-3812-b48f-dd7033f7da76" risk="Undefined" locType="sr" hash="686946442" causeLocRef="11">
      <Props>
        <Prop key="Tracked variables" val="Tainted data" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="9287163" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="15" srcRngStartPos="8" srcRngEndPos="59" srcRngStartln="15" srcRngEndLn="15" desc="String sStoryName = req.getParameter(&quot;story_name&quot;);" ElType=".C" rngLn="15">
          <Props>
            <Prop key="Tracked variables" val="sStoryName" />
          </Props>
          <Anns>
            <Ann msg="Tainting point" kind="cause" />
            <Ann msg="Tainted data: sStoryName" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1383325620" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="16" srcRngStartPos="8" srcRngEndPos="58" srcRngStartln="16" srcRngEndLn="16" desc="String sStoryContents = req.getParameter(&quot;story&quot;);" ElType="." rngLn="16" />
        <ElDesc lineHash="1051795638" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="17" srcRngStartPos="8" srcRngEndPos="42" srcRngStartln="17" srcRngEndLn="17" desc="store(sStoryName, sStoryContents);" ElType="!" rngLn="17">
          <ElDescList>
            <ElDesc lineHash="1883769468" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="21" srcRngStartPos="8" srcRngEndPos="37" srcRngStartln="21" srcRngEndLn="21" desc="FileOutputStream fOut = null;" ElType="." rngLn="21">
              <Props>
                <Prop key="Tracked variables" val="storyName" />
              </Props>
              <Anns>
                <Ann msg="Tainted data: storyName" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="760693331" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="23" srcRngStartPos="12" srcRngEndPos="41" srcRngStartln="23" srcRngEndLn="23" desc="String sFileName = storyName;" ElType="!" rngLn="23" />
            <ElDesc lineHash="1826395322" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="24" srcRngStartPos="19" srcRngEndPos="50" srcRngStartln="24" srcRngEndLn="24" desc="new FileOutputStream(sFileName)" ElType=".P" rngLn="24">
              <Props>
                <Prop key="Tracked variables" val="sFileName" />
              </Props>
              <Anns>
                <Ann msg="Tainted data: sFileName" kind="var" />
                <Ann msg="Call to a dangerous method" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Injection of data received from servlet request (&quot;storyContents&quot;) to method writing to file" ln="25" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="58" auth="mgorecka" FirstElSrcRngEndLn="16" rule="BD.SECURITY.TDFILES" FirstElSrcRngStartPos="8" lnHash="7888607" ruleSCSCMsg="Tainting point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" rule.header="Protect against File contents injection" FirstElSrcRngStartln="16" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="821426917" lang="java" violId="fe9605e2-122c-394c-82fa-22c93460f56d" locEndPos="49" urgent="true" prio="Not Defined" locEndLn="25" goals="1," locStartln="25" sev="1" locRef="11" tool="jtest" lineHash="7888607" unbViolId="7390758e-62f2-3aa0-8043-4f42d98f3c56" risk="Undefined" locType="sr" hash="686946442" causeLocRef="11">
      <Props>
        <Prop key="Tracked variables" val="Tainted data" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="9287163" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="15" srcRngStartPos="8" srcRngEndPos="59" srcRngStartln="15" srcRngEndLn="15" desc="String sStoryName = req.getParameter(&quot;story_name&quot;);" ElType="." rngLn="15" />
        <ElDesc lineHash="1383325620" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="16" srcRngStartPos="8" srcRngEndPos="58" srcRngStartln="16" srcRngEndLn="16" desc="String sStoryContents = req.getParameter(&quot;story&quot;);" ElType=".C" rngLn="16">
          <Props>
            <Prop key="Tracked variables" val="sStoryContents" />
          </Props>
          <Anns>
            <Ann msg="Tainting point" kind="cause" />
            <Ann msg="Tainted data: sStoryContents" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1051795638" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="17" srcRngStartPos="8" srcRngEndPos="42" srcRngStartln="17" srcRngEndLn="17" desc="store(sStoryName, sStoryContents);" ElType="!" rngLn="17">
          <ElDescList>
            <ElDesc lineHash="1883769468" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="21" srcRngStartPos="8" srcRngEndPos="37" srcRngStartln="21" srcRngEndLn="21" desc="FileOutputStream fOut = null;" ElType="." rngLn="21">
              <Props>
                <Prop key="Tracked variables" val="storyContents" />
              </Props>
              <Anns>
                <Ann msg="Tainted data: storyContents" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="760693331" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="23" srcRngStartPos="12" srcRngEndPos="41" srcRngStartln="23" srcRngEndLn="23" desc="String sFileName = storyName;" ElType="." rngLn="23" />
            <ElDesc lineHash="1826395322" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="24" srcRngStartPos="12" srcRngEndPos="51" srcRngStartln="24" srcRngEndLn="24" desc="fOut = new FileOutputStream(sFileName);" ElType="." rngLn="24" />
            <ElDesc lineHash="7888607" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="25" srcRngStartPos="12" srcRngEndPos="49" srcRngStartln="25" srcRngEndLn="25" desc="fOut.write(storyContents.getBytes());" ElType=".P" rngLn="25">
              <Props>
                <Prop key="Tracked variables" val="storyContents" />
              </Props>
              <Anns>
                <Ann msg="Tainted data: storyContents" kind="var" />
                <Ann msg="Call to a dangerous method" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="You may not want to use the method 'getBytes()' because it does not allow you to specify an encoding option" ln="25" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" auth="mgorecka" rule="INTER.SEO" lnHash="7888607" pkg="examples.flowanalysis" rule.header="Avoid calling methods and constructors which do not allow you to specify a character encoding option" locStartPos="37" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8648283c-745d-3a63-b1fd-e8063ee6ef29" locEndPos="45" prio="Not Defined" locEndLn="25" goals="0," locStartln="25" sev="3" locRef="11" tool="jtest" lineHash="7888607" unbViolId="233bc173-2c60-3954-af48-a455d668e00c" risk="Undefined" locType="sr" hash="686946442" />
    <FlowViol msg="&quot;fOut&quot; may possibly be null" ln="27" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="37" auth="mgorecka" FirstElSrcRngEndLn="21" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="-1243101048" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="21" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-126836633" lang="java" violId="43a05277-9d79-3c27-ad72-5d5ea1f8374f" locEndPos="25" urgent="true" prio="Not Defined" locEndLn="27" goals="1," locStartln="27" sev="1" locRef="11" tool="jtest" lineHash="-1243101048" unbViolId="cb53a9f4-e56b-3baf-9d7e-65bc2be07993" risk="Undefined" locType="sr" hash="686946442" causeLocRef="11">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1883769468" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="21" srcRngStartPos="8" srcRngEndPos="37" srcRngStartln="21" srcRngEndLn="21" desc="FileOutputStream fOut = null;" ElType=".C" rngLn="21">
          <Props>
            <Prop key="Tracked variables" val="fOut" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: fOut" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="760693331" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="23" srcRngStartPos="12" srcRngEndPos="41" srcRngStartln="23" srcRngEndLn="23" desc="String sFileName = storyName;" ElType="." rngLn="23" />
        <ElDesc lineHash="1826395322" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="24" srcRngStartPos="19" srcRngEndPos="50" srcRngStartln="24" srcRngEndLn="24" desc="new FileOutputStream(sFileName)" ElType="!E" rngLn="24" thrownTypes="FileNotFoundException" throwingMethod="FileOutputStream.FileOutputStream">
          <Anns>
            <Ann msg="FileOutputStream.FileOutputStream() throws FileNotFoundException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1243101048" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" ln="27" srcRngStartPos="12" srcRngEndPos="25" srcRngStartln="27" srcRngEndLn="27" desc="fOut.close();" ElType=".P" rngLn="27">
          <Props>
            <Prop key="Tracked variables" val="fOut" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: fOut" kind="var" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Use 2 blank lines before type declaration" ln="6" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="1422236815" pkg="examples.flowanalysis" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="887bade8-8139-3943-969e-d980b647ef1d" locEndPos="2" prio="Not Defined" locEndLn="6" goals="0," locStartln="6" sev="3" locRef="12" tool="jtest" lineHash="1422236815" unbViolId="c94811df-2c88-3149-ae75-3630588ab676" risk="Undefined" locType="sr" hash="438092426" />
    <StdViol msg="Name of &quot;abstract&quot; class 'IncorrectIteratorUsage' does not match user-specified regular expression '^Abstract|Factory$'" ln="6" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" auth="mgorecka" rule="NAMING.NACL" lnHash="1422236815" pkg="examples.flowanalysis" rule.header="Use a naming convention for &quot;abstract&quot; classes" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2ce1ca0a-ab30-3e4d-8242-2790b994d331" locEndPos="37" prio="Not Defined" locEndLn="6" goals="0," locStartln="6" sev="3" locRef="12" tool="jtest" lineHash="1422236815" unbViolId="9f650e15-2b0c-3c2c-b6a6-13bc40f6aeae" risk="Undefined" locType="sr" hash="438092426" />
    <StdViol msg="The &quot;abstract&quot; class &quot;IncorrectIteratorUsage&quot; does not contain any &quot;abstract&quot; methods" ln="6" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" auth="mgorecka" rule="OOP.NAM" lnHash="1422236815" pkg="examples.flowanalysis" rule.header="Avoid &quot;abstract&quot; classes without &quot;abstract&quot; methods" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="84644bdd-44b7-3dbe-bbe4-86569de5e4a3" locEndPos="37" prio="Not Defined" locEndLn="6" goals="0," locStartln="6" sev="3" locRef="12" tool="jtest" lineHash="1422236815" unbViolId="c210368c-f544-37f4-8c2c-2915336eb73e" risk="Undefined" locType="sr" hash="438092426" />
    <StdViol msg="This '@param' tag does not contain a meaningful description of the parameter" ln="11" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" auth="mgorecka" rule="JAVADOC.MDJT" lnHash="-991255109" pkg="examples.flowanalysis" rule.header="Include a meaningful description in Javadoc tags" locStartPos="7" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5539f5f2-d247-3097-8f30-4b590295b533" locEndPos="24" prio="Not Defined" locEndLn="11" goals="0," locStartln="11" sev="3" locRef="12" tool="jtest" lineHash="-991255109" unbViolId="2e4aefa8-7173-3e0e-890e-7f1539038e58" risk="Undefined" locType="sr" hash="438092426" />
    <StdViol msg="This '@param' tag does not contain a meaningful description of the parameter" ln="12" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" auth="mgorecka" rule="JAVADOC.MDJT" lnHash="-1114082663" pkg="examples.flowanalysis" rule.header="Include a meaningful description in Javadoc tags" locStartPos="7" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="18857581-dd42-3374-8d1e-aa44ec73cb0f" locEndPos="16" prio="Not Defined" locEndLn="12" goals="0," locStartln="12" sev="3" locRef="12" tool="jtest" lineHash="-1114082663" unbViolId="0d923068-81a0-3d7d-a8c0-e4e055803115" risk="Undefined" locType="sr" hash="438092426" />
    <StdViol msg="Variable name 'collection' does not match user-specified regular expression '(s|List|Set|Array|Table)$' for array and collection variables" ln="14" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" locStartln="14" sev="3" auth="mgorecka" locRef="12" rule="NAMING.NAC" lnHash="-87981740" pkg="examples.flowanalysis" rule.header="Use a naming convention for array and collection variables" tool="jtest" lineHash="-87981740" unbViolId="5e517715-2cde-3373-ac5c-63c2dd98fd62" locStartPos="54" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7d0d92aa-db6f-3926-a99d-93dcd7303f53" locEndPos="64" locType="sr" hash="438092426" locEndLn="14" goals="0," />
    <StdViol msg="Parameter 'collection' dereferenced before being checked for null" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" locStartln="15" sev="3" auth="mgorecka" locRef="12" rule="DBC.IPAN" lnHash="-385742572" pkg="examples.flowanalysis" rule.header="Include a '@pre != null' tag for each parameter that is dereferenced before being checked for null" tool="jtest" lineHash="-385742572" unbViolId="a415de3c-16e7-34db-ba78-6ae6956cf8ec" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="50588401-575e-31f7-bb3d-329a98a9cbe1" locEndPos="37" locType="sr" hash="438092426" locEndLn="15" goals="0," />
    <FlowViol msg="Iterator &quot;iter&quot; may possibly be used after iterated collection is modified" ln="16" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" ruleSAFMsg="Iterator usage point" FirstElSrcRngEndPos="49" auth="mgorecka" FirstElSrcRngEndLn="15" rule="BD.CO.ITMOD" FirstElSrcRngStartPos="8" lnHash="-1314484653" ruleSCSCMsg="Iterator creation point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" rule.header="Do not modify collection while iterating over it" FirstElSrcRngStartln="15" locStartPos="15" analyzer="com.parasoft.jtest.flowanalyzer" id="-207340259" lang="java" violId="1592c798-0f27-31c1-ae6d-193425b11036" locEndPos="29" urgent="true" prio="Not Defined" locEndLn="16" goals="1," locStartln="16" sev="1" locRef="12" tool="jtest" lineHash="-1314484653" unbViolId="08e7ea57-6a2e-38fe-93ff-e33341aaa0e9" risk="Undefined" locType="sr" hash="438092426" causeLocRef="12">
      <Props>
        <Prop key="Tracked variables" val="Tracked iterators" />
        <Prop key="Tracked collections" val="Tracked collections" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-385742572" locType="sr" srcRnghash="438092426" locRef="12" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" ln="15" srcRngStartPos="8" srcRngEndPos="49" srcRngStartln="15" srcRngEndLn="15" desc="Iterator&lt;?> iter = collection.iterator();" ElType=".C" rngLn="15">
          <Props>
            <Prop key="Tracked variables" val="iter" />
            <Prop key="Tracked collections" val="collection" />
          </Props>
          <Anns>
            <Ann msg="Iterator creation point" kind="cause" />
            <Ann msg="Tracked iterators: iter" kind="var" />
            <Ann msg="Tracked collections: collection" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1314484653" locType="sr" srcRnghash="438092426" locRef="12" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" ln="16" srcRngStartPos="8" srcRngEndPos="0" srcRngStartln="16" srcRngEndLn="17" desc="while (iter.hasNext()) {" ElType="." rngLn="16">
          <Anns>
            <Ann msg="Loop condition evaluation: iter.hasNext() (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1317928354" locType="sr" srcRnghash="438092426" locRef="12" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" ln="17" srcRngStartPos="12" srcRngEndPos="37" srcRngStartln="17" srcRngEndLn="17" desc="Object obj = iter.next();" ElType="." rngLn="17" />
        <ElDesc lineHash="985784051" locType="sr" srcRnghash="438092426" locRef="12" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" ln="18" srcRngStartPos="12" srcRngEndPos="54" srcRngStartln="18" srcRngEndLn="18" desc="if (tp.isAssignableFrom(obj.getClass())) {" ElType="." rngLn="18">
          <Anns>
            <Ann msg="Condition evaluation: tp.isAssignableFrom(obj.getClass()) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1295664149" locType="sr" srcRnghash="438092426" locRef="12" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" ln="21" srcRngStartPos="12" srcRngEndPos="35" srcRngStartln="21" srcRngEndLn="21" desc="collection.remove(obj);" ElType="!" rngLn="21">
          <Anns>
            <Ann msg="Collection modification point" kind="info" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1314484653" locType="sr" srcRnghash="438092426" locRef="12" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" ln="16" srcRngStartPos="15" srcRngEndPos="29" srcRngStartln="16" srcRngEndLn="16" desc="iter.hasNext()" ElType=".P" rngLn="16">
          <Props>
            <Prop key="Tracked variables" val="iter" />
            <Prop key="Tracked collections" val="collection" />
          </Props>
          <Anns>
            <Ann msg="Tracked iterators: iter" kind="var" />
            <Ann msg="Tracked collections: collection" kind="var" />
            <Ann msg="Iterator usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Parameter 'tp' dereferenced before being checked for null" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" auth="mgorecka" rule="DBC.IPAN" lnHash="985784051" pkg="examples.flowanalysis" rule.header="Include a '@pre != null' tag for each parameter that is dereferenced before being checked for null" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="26a1e31c-7fdc-39aa-9f03-7be53172e768" locEndPos="18" prio="Not Defined" locEndLn="18" goals="0," locStartln="18" sev="3" locRef="12" tool="jtest" lineHash="985784051" unbViolId="1c928797-4bfc-3c19-8499-8785c4bea0a7" risk="Undefined" locType="sr" hash="438092426" />
    <FlowViol msg="Inefficient removal from collection &quot;collection&quot;. Remove elements by &quot;Iterator.remove()&quot;" ln="21" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" ruleSAFMsg="Point where element is removed from collection" FirstElSrcRngEndPos="49" auth="mgorecka" FirstElSrcRngEndLn="15" rule="BD.OPT.INEFCOL" FirstElSrcRngStartPos="8" lnHash="1295664149" ruleSCSCMsg="Point of getting iterator" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" rule.header="Avoid inefficient removal of Collection elements" FirstElSrcRngStartln="15" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="1992905105" lang="java" violId="6bf05b76-ac26-3d7b-8bcd-c75f724a0a1d" locEndPos="35" urgent="true" prio="Not Defined" locEndLn="21" goals="1," locStartln="21" sev="3" locRef="12" tool="jtest" lineHash="1295664149" unbViolId="086fe33d-512a-340a-96a8-99192e2502ea" risk="Undefined" locType="sr" hash="438092426" causeLocRef="12">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-385742572" locType="sr" srcRnghash="438092426" locRef="12" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" ln="15" srcRngStartPos="8" srcRngEndPos="49" srcRngStartln="15" srcRngEndLn="15" desc="Iterator&lt;?> iter = collection.iterator();" ElType=".C" rngLn="15">
          <Anns>
            <Ann msg="Point of getting iterator" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1314484653" locType="sr" srcRnghash="438092426" locRef="12" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" ln="16" srcRngStartPos="8" srcRngEndPos="0" srcRngStartln="16" srcRngEndLn="17" desc="while (iter.hasNext()) {" ElType="." rngLn="16">
          <Anns>
            <Ann msg="Loop condition evaluation: iter.hasNext() (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1317928354" locType="sr" srcRnghash="438092426" locRef="12" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" ln="17" srcRngStartPos="12" srcRngEndPos="37" srcRngStartln="17" srcRngEndLn="17" desc="Object obj = iter.next();" ElType="." rngLn="17" />
        <ElDesc lineHash="985784051" locType="sr" srcRnghash="438092426" locRef="12" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" ln="18" srcRngStartPos="12" srcRngEndPos="54" srcRngStartln="18" srcRngEndLn="18" desc="if (tp.isAssignableFrom(obj.getClass())) {" ElType="." rngLn="18">
          <Anns>
            <Ann msg="Condition evaluation: tp.isAssignableFrom(obj.getClass()) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1295664149" locType="sr" srcRnghash="438092426" locRef="12" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" ln="21" srcRngStartPos="12" srcRngEndPos="35" srcRngStartln="21" srcRngEndLn="21" desc="collection.remove(obj);" ElType=".P" rngLn="21">
          <Anns>
            <Ann msg="Point where element is removed from collection" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="This '@param' tag does not contain a meaningful description of the parameter" ln="28" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" auth="mgorecka" rule="JAVADOC.MDJT" lnHash="-991255109" pkg="examples.flowanalysis" rule.header="Include a meaningful description in Javadoc tags" locStartPos="7" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f7c0f940-6878-3705-8f8f-30555480c27e" locEndPos="24" prio="Not Defined" locEndLn="28" goals="0," locStartln="28" sev="3" locRef="12" tool="jtest" lineHash="-991255109" unbViolId="5a45627a-72bf-3f9f-9e6e-23e926d5dc9e" risk="Undefined" locType="sr" hash="438092426" />
    <StdViol msg="This '@param' tag does not contain a meaningful description of the parameter" ln="29" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" auth="mgorecka" rule="JAVADOC.MDJT" lnHash="-1114082663" pkg="examples.flowanalysis" rule.header="Include a meaningful description in Javadoc tags" locStartPos="7" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1a94ec23-81d9-3ce3-b3f1-cf51266b76d1" locEndPos="16" prio="Not Defined" locEndLn="29" goals="0," locStartln="29" sev="3" locRef="12" tool="jtest" lineHash="-1114082663" unbViolId="c501c019-c01a-3061-a7a0-b18cadcd113d" risk="Undefined" locType="sr" hash="438092426" />
    <StdViol msg="Variable name 'collection' does not match user-specified regular expression '(s|List|Set|Array|Table)$' for array and collection variables" ln="31" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" locStartln="31" sev="3" auth="mgorecka" locRef="12" rule="NAMING.NAC" lnHash="888363673" pkg="examples.flowanalysis" rule.header="Use a naming convention for array and collection variables" tool="jtest" lineHash="888363673" unbViolId="601d02a5-ae71-3917-8c3d-24761437d26d" locStartPos="52" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b7c93fc8-eb3d-3298-ba89-116b2b83c543" locEndPos="62" locType="sr" hash="438092426" locEndLn="31" goals="0," />
    <StdViol msg="Parameter 'collection' dereferenced before being checked for null" ln="32" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" locStartln="32" sev="3" auth="mgorecka" locRef="12" rule="DBC.IPAN" lnHash="-385742572" pkg="examples.flowanalysis" rule.header="Include a '@pre != null' tag for each parameter that is dereferenced before being checked for null" tool="jtest" lineHash="-385742572" unbViolId="d5b98095-f39b-3017-97c0-88df25d3a86f" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c597f9f9-0b8c-37c5-8986-34be3e18419f" locEndPos="37" locType="sr" hash="438092426" locEndLn="32" goals="0," />
    <StdViol msg="Parameter 'tp' dereferenced before being checked for null" ln="35" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" auth="mgorecka" rule="DBC.IPAN" lnHash="985784051" pkg="examples.flowanalysis" rule.header="Include a '@pre != null' tag for each parameter that is dereferenced before being checked for null" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8f584ef3-c4bf-3b04-9018-952987ab1bfd" locEndPos="18" prio="Not Defined" locEndLn="35" goals="0," locStartln="35" sev="3" locRef="12" tool="jtest" lineHash="985784051" unbViolId="b97c5310-c6ca-3fe1-a423-1e8cca28d6fd" risk="Undefined" locType="sr" hash="438092426" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="6" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="1182256428" pkg="examples.flowanalysis" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5ba2bc0f-1a33-396a-ba34-41e162bc9e50" locEndPos="2" prio="Not Defined" locEndLn="6" goals="0," locStartln="6" sev="3" locRef="13" tool="jtest" lineHash="1182256428" unbViolId="316079a2-6509-322c-b6e0-acf87beeb1a9" risk="Undefined" locType="sr" hash="1816383512" />
    <StdViol msg="Missing Javadoc comment for 'InefficientCollectionRemoval'" ln="6" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" auth="mgorecka" rule="JAVADOC.PJDC" lnHash="1182256428" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for types" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="55039ea9-1ca1-3056-af36-c5a9eb6ccd78" locEndPos="41" prio="Not Defined" locEndLn="6" goals="0," locStartln="6" sev="3" locRef="13" tool="jtest" lineHash="1182256428" unbViolId="8c41b6d7-c26b-3364-965f-63c218391bd9" risk="Undefined" locType="sr" hash="1816383512" />
    <StdViol msg="This '@param' tag does not contain a meaningful description of the parameter" ln="11" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" auth="mgorecka" rule="JAVADOC.MDJT" lnHash="-991255109" pkg="examples.flowanalysis" rule.header="Include a meaningful description in Javadoc tags" locStartPos="7" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="28d09fa1-8f32-3445-9350-e6b23f348a79" locEndPos="24" prio="Not Defined" locEndLn="11" goals="0," locStartln="11" sev="3" locRef="13" tool="jtest" lineHash="-991255109" unbViolId="269f8087-27fa-3f64-baf6-7a0e9fbf7840" risk="Undefined" locType="sr" hash="1816383512" />
    <StdViol msg="Variable name 'collection' does not match user-specified regular expression '(s|List|Set|Array|Table)$' for array and collection variables" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" locStartln="13" sev="3" auth="mgorecka" locRef="13" rule="NAMING.NAC" lnHash="-531547136" pkg="examples.flowanalysis" rule.header="Use a naming convention for array and collection variables" tool="jtest" lineHash="-531547136" unbViolId="bbd49a30-d5a4-3a11-8bcf-d80213682518" locStartPos="49" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8243e79a-d202-3e65-a9bb-8297f07ed55e" locEndPos="59" locType="sr" hash="1816383512" locEndLn="13" goals="0," />
    <StdViol msg="Parameter 'collection' dereferenced before being checked for null" ln="14" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" locStartln="14" sev="3" auth="mgorecka" locRef="13" rule="DBC.IPAN" lnHash="-385742572" pkg="examples.flowanalysis" rule.header="Include a '@pre != null' tag for each parameter that is dereferenced before being checked for null" tool="jtest" lineHash="-385742572" unbViolId="7d043486-c34e-3028-9414-efc48722d114" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="626a6580-f2dd-368c-b3b1-f6573a7238b0" locEndPos="37" locType="sr" urgent="true" hash="1816383512" locEndLn="14" goals="1," />
    <FlowViol msg="Iterator &quot;iter&quot; may possibly be used after iterated collection is modified" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" ruleSAFMsg="Iterator usage point" FirstElSrcRngEndPos="49" auth="mgorecka" FirstElSrcRngEndLn="14" rule="BD.CO.ITMOD" FirstElSrcRngStartPos="8" lnHash="-1314484653" ruleSCSCMsg="Iterator creation point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" rule.header="Do not modify collection while iterating over it" FirstElSrcRngStartln="14" locStartPos="15" analyzer="com.parasoft.jtest.flowanalyzer" id="879893748" lang="java" violId="22399e74-86b2-3569-9d11-576a1234167e" locEndPos="29" urgent="true" prio="Not Defined" locEndLn="15" goals="1," locStartln="15" sev="1" locRef="13" tool="jtest" lineHash="-1314484653" unbViolId="c4946683-a4e5-3c3a-b2bf-e649735a059f" risk="Undefined" locType="sr" hash="1816383512" causeLocRef="13">
      <Props>
        <Prop key="Tracked variables" val="Tracked iterators" />
        <Prop key="Tracked collections" val="Tracked collections" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-385742572" locType="sr" srcRnghash="1816383512" locRef="13" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" ln="14" srcRngStartPos="8" srcRngEndPos="49" srcRngStartln="14" srcRngEndLn="14" desc="Iterator&lt;?> iter = collection.iterator();" ElType=".C" rngLn="14">
          <Props>
            <Prop key="Tracked variables" val="iter" />
            <Prop key="Tracked collections" val="collection" />
          </Props>
          <Anns>
            <Ann msg="Iterator creation point" kind="cause" />
            <Ann msg="Tracked iterators: iter" kind="var" />
            <Ann msg="Tracked collections: collection" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1314484653" locType="sr" srcRnghash="1816383512" locRef="13" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" ln="15" srcRngStartPos="8" srcRngEndPos="0" srcRngStartln="15" srcRngEndLn="16" desc="while (iter.hasNext()) {" ElType="." rngLn="15">
          <Anns>
            <Ann msg="Loop condition evaluation: iter.hasNext() (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1860144441" locType="sr" srcRnghash="1816383512" locRef="13" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" ln="16" srcRngStartPos="12" srcRngEndPos="41" srcRngStartln="16" srcRngEndLn="16" desc="Object element = iter.next();" ElType="." rngLn="16" />
        <ElDesc lineHash="-1848798502" locType="sr" srcRnghash="1816383512" locRef="13" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" ln="17" srcRngStartPos="12" srcRngEndPos="39" srcRngStartln="17" srcRngEndLn="17" desc="collection.remove(element);" ElType="!" rngLn="17">
          <Anns>
            <Ann msg="Collection modification point" kind="info" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1314484653" locType="sr" srcRnghash="1816383512" locRef="13" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" ln="15" srcRngStartPos="15" srcRngEndPos="29" srcRngStartln="15" srcRngEndLn="15" desc="iter.hasNext()" ElType=".P" rngLn="15">
          <Props>
            <Prop key="Tracked variables" val="iter" />
            <Prop key="Tracked collections" val="collection" />
          </Props>
          <Anns>
            <Ann msg="Tracked iterators: iter" kind="var" />
            <Ann msg="Tracked collections: collection" kind="var" />
            <Ann msg="Iterator usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Inefficient removal from collection &quot;collection&quot;. Remove elements by &quot;Iterator.remove()&quot;" ln="17" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" ruleSAFMsg="Point where element is removed from collection" FirstElSrcRngEndPos="49" auth="mgorecka" FirstElSrcRngEndLn="14" rule="BD.OPT.INEFCOL" FirstElSrcRngStartPos="8" lnHash="-1848798502" ruleSCSCMsg="Point of getting iterator" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" rule.header="Avoid inefficient removal of Collection elements" FirstElSrcRngStartln="14" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="335887281" lang="java" violId="9712b5c0-f5c2-3178-a8a9-b6cdaf4b42bd" locEndPos="39" urgent="true" prio="Not Defined" locEndLn="17" goals="1," locStartln="17" sev="3" locRef="13" tool="jtest" lineHash="-1848798502" unbViolId="dc6fbdc3-c666-35b4-b23d-3efad9e4844b" risk="Undefined" locType="sr" hash="1816383512" causeLocRef="13">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-385742572" locType="sr" srcRnghash="1816383512" locRef="13" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" ln="14" srcRngStartPos="8" srcRngEndPos="49" srcRngStartln="14" srcRngEndLn="14" desc="Iterator&lt;?> iter = collection.iterator();" ElType=".C" rngLn="14">
          <Anns>
            <Ann msg="Point of getting iterator" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1314484653" locType="sr" srcRnghash="1816383512" locRef="13" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" ln="15" srcRngStartPos="8" srcRngEndPos="0" srcRngStartln="15" srcRngEndLn="16" desc="while (iter.hasNext()) {" ElType="." rngLn="15">
          <Anns>
            <Ann msg="Loop condition evaluation: iter.hasNext() (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1860144441" locType="sr" srcRnghash="1816383512" locRef="13" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" ln="16" srcRngStartPos="12" srcRngEndPos="41" srcRngStartln="16" srcRngEndLn="16" desc="Object element = iter.next();" ElType="." rngLn="16" />
        <ElDesc lineHash="-1848798502" locType="sr" srcRnghash="1816383512" locRef="13" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" ln="17" srcRngStartPos="12" srcRngEndPos="39" srcRngStartln="17" srcRngEndLn="17" desc="collection.remove(element);" ElType=".P" rngLn="17">
          <Anns>
            <Ann msg="Point where element is removed from collection" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="This '@param' tag does not contain a meaningful description of the parameter" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" auth="mgorecka" rule="JAVADOC.MDJT" lnHash="-991255109" pkg="examples.flowanalysis" rule.header="Include a meaningful description in Javadoc tags" locStartPos="7" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="17209559-0c91-3f5d-a4a6-2c96c695f0eb" locEndPos="24" prio="Not Defined" locEndLn="24" goals="0," locStartln="24" sev="3" locRef="13" tool="jtest" lineHash="-991255109" unbViolId="d42e9c80-e87e-3e38-8d8e-ef66f54b2f13" risk="Undefined" locType="sr" hash="1816383512" />
    <StdViol msg="Variable name 'collection' does not match user-specified regular expression '(s|List|Set|Array|Table)$' for array and collection variables" ln="26" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" locStartln="26" sev="3" auth="mgorecka" locRef="13" rule="NAMING.NAC" lnHash="-1015334827" pkg="examples.flowanalysis" rule.header="Use a naming convention for array and collection variables" tool="jtest" lineHash="-1015334827" unbViolId="3a62cfbd-de7c-3025-bc94-3122ce0c97d6" locStartPos="47" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b5fc3d8c-49ee-3f87-b862-a5072a45e617" locEndPos="57" locType="sr" hash="1816383512" locEndLn="26" goals="0," />
    <StdViol msg="Parameter 'collection' dereferenced before being checked for null" ln="27" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" locStartln="27" sev="3" auth="mgorecka" locRef="13" rule="DBC.IPAN" lnHash="-385742572" pkg="examples.flowanalysis" rule.header="Include a '@pre != null' tag for each parameter that is dereferenced before being checked for null" tool="jtest" lineHash="-385742572" unbViolId="dc5a9f74-a9ae-37ca-b7d0-801fbc9927c3" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8d1f5e31-d6b3-3791-af88-94f77c0a7a0f" locEndPos="37" locType="sr" urgent="true" hash="1816383512" locEndLn="27" goals="1," />
    <StdViol msg="&quot;import&quot; with star &quot;*&quot;, Single-type imports should be used instead" ln="5" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" locStartln="5" sev="3" auth="mgorecka" locRef="14" rule="CODSTA.BP.IMPTD" lnHash="538338302" pkg="examples.flowanalysis" rule.header="Avoid or enforce usage of '*' form of import statements" tool="jtest" lineHash="538338302" unbViolId="c787cc15-7845-36c9-8a22-6dc3b75ace52" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="57400c06-53e4-3bb8-920c-b6be2fedcc24" locEndPos="23" locType="sr" hash="-417185865" locEndLn="5" goals="0," />
    <StdViol msg="Use 2 blank lines before type declaration" ln="7" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="-711228472" pkg="examples.flowanalysis" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="07c55c25-4def-38fc-9388-c415d1f7cde7" locEndPos="2" prio="Not Defined" locEndLn="7" goals="0," locStartln="7" sev="3" locRef="14" tool="jtest" lineHash="-711228472" unbViolId="a5e13a0e-aa3a-3d69-ba3e-4af35dc83ced" risk="Undefined" locType="sr" hash="-417185865" />
    <StdViol msg="Missing Javadoc comment for 'InefficientMapRemoval'" ln="7" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" auth="mgorecka" rule="JAVADOC.PJDC" lnHash="-711228472" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for types" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ca3fb1c6-20ab-39eb-8f77-3f8bb2ad9074" locEndPos="34" prio="Not Defined" locEndLn="7" goals="0," locStartln="7" sev="3" locRef="14" tool="jtest" lineHash="-711228472" unbViolId="29b0fca4-8900-3941-b8f2-dd30ffb8f9ea" risk="Undefined" locType="sr" hash="-417185865" />
    <StdViol msg="This '@param' tag does not contain a meaningful description of the parameter" ln="12" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" auth="mgorecka" rule="JAVADOC.MDJT" lnHash="-176831265" pkg="examples.flowanalysis" rule.header="Include a meaningful description in Javadoc tags" locStartPos="7" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d5c52121-1aa3-3233-8fdf-c9d332236a49" locEndPos="17" prio="Not Defined" locEndLn="12" goals="0," locStartln="12" sev="3" locRef="14" tool="jtest" lineHash="-176831265" unbViolId="fb289f3d-c025-397d-9896-81beed319584" risk="Undefined" locType="sr" hash="-417185865" />
    <StdViol msg="Parameter 'map' dereferenced before being checked for null" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" locStartln="15" sev="3" auth="mgorecka" locRef="14" rule="DBC.IPAN" lnHash="-1650191732" pkg="examples.flowanalysis" rule.header="Include a '@pre != null' tag for each parameter that is dereferenced before being checked for null" tool="jtest" lineHash="-1650191732" unbViolId="456ad8e5-3679-3012-8f47-e6583c491bda" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="97e59472-9765-35f4-ad13-a7b72a643d96" locEndPos="30" locType="sr" hash="-417185865" locEndLn="15" goals="0," />
    <FlowViol msg="Iterator &quot;iter&quot; may possibly be used after iterated collection is modified" ln="16" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" ruleSAFMsg="Iterator usage point" FirstElSrcRngEndPos="51" auth="mgorecka" FirstElSrcRngEndLn="15" rule="BD.CO.ITMOD" FirstElSrcRngStartPos="8" lnHash="-1314484653" ruleSCSCMsg="Iterator creation point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" rule.header="Do not modify collection while iterating over it" FirstElSrcRngStartln="15" locStartPos="15" analyzer="com.parasoft.jtest.flowanalyzer" id="123114575" lang="java" violId="8d0908f7-2cfa-3d19-922e-ded34db735d6" locEndPos="29" urgent="true" prio="Not Defined" locEndLn="16" goals="1," locStartln="16" sev="1" locRef="14" tool="jtest" lineHash="-1314484653" unbViolId="cf4954fb-64d9-329c-ad58-86e27bd7e73d" risk="Undefined" locType="sr" hash="-417185865" causeLocRef="14">
      <Props>
        <Prop key="Tracked variables" val="Tracked iterators" />
        <Prop key="Tracked collections" val="Tracked collections" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-1650191732" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" ln="15" srcRngStartPos="8" srcRngEndPos="51" srcRngStartln="15" srcRngEndLn="15" desc="Iterator&lt;?> iter = map.keySet().iterator();" ElType=".C" rngLn="15">
          <Props>
            <Prop key="Tracked variables" val="iter" />
            <Prop key="Tracked collections" val="map" />
          </Props>
          <Anns>
            <Ann msg="Iterator creation point" kind="cause" />
            <Ann msg="Tracked iterators: iter" kind="var" />
            <Ann msg="Tracked collections: map" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1314484653" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" ln="16" srcRngStartPos="8" srcRngEndPos="0" srcRngStartln="16" srcRngEndLn="17" desc="while (iter.hasNext()) {" ElType="." rngLn="16">
          <Anns>
            <Ann msg="Loop condition evaluation: iter.hasNext() (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-927722506" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" ln="17" srcRngStartPos="12" srcRngEndPos="37" srcRngStartln="17" srcRngEndLn="17" desc="Object key = iter.next();" ElType="." rngLn="17" />
        <ElDesc lineHash="-943711873" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" ln="18" srcRngStartPos="12" srcRngEndPos="28" srcRngStartln="18" srcRngEndLn="18" desc="map.remove(key);" ElType="!" rngLn="18">
          <Anns>
            <Ann msg="Collection modification point" kind="info" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1314484653" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" ln="16" srcRngStartPos="15" srcRngEndPos="29" srcRngStartln="16" srcRngEndLn="16" desc="iter.hasNext()" ElType=".P" rngLn="16">
          <Props>
            <Prop key="Tracked variables" val="iter" />
            <Prop key="Tracked collections" val="map" />
          </Props>
          <Anns>
            <Ann msg="Tracked iterators: iter" kind="var" />
            <Ann msg="Tracked collections: map" kind="var" />
            <Ann msg="Iterator usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Inefficient removal from map &quot;map&quot;. Remove elements by &quot;Iterator.remove()&quot;" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" ruleSAFMsg="Point where entry is removed by key" FirstElSrcRngEndPos="39" auth="mgorecka" FirstElSrcRngEndLn="15" rule="BD.OPT.INEFMAPRM" FirstElSrcRngStartPos="27" lnHash="-943711873" ruleSCSCMsg="Point of getting key set" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" rule.header="Avoid inefficient removal of Map entries" FirstElSrcRngStartln="15" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-427977102" lang="java" violId="3237d485-58ef-3638-914e-248f5fa97c8d" locEndPos="28" urgent="true" prio="Not Defined" locEndLn="18" goals="1," locStartln="18" sev="3" locRef="14" tool="jtest" lineHash="-943711873" unbViolId="29724918-2d5c-382b-ac68-4b52e24bbf94" risk="Undefined" locType="sr" hash="-417185865" causeLocRef="14">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-1650191732" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" ln="15" srcRngStartPos="8" srcRngEndPos="51" srcRngStartln="15" srcRngEndLn="15" desc="Iterator&lt;?> iter = map.keySet().iterator();" ElType=".C" rngLn="15">
          <Anns>
            <Ann msg="Point of getting key set" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1314484653" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" ln="16" srcRngStartPos="8" srcRngEndPos="0" srcRngStartln="16" srcRngEndLn="17" desc="while (iter.hasNext()) {" ElType="." rngLn="16">
          <Anns>
            <Ann msg="Loop condition evaluation: iter.hasNext() (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-927722506" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" ln="17" srcRngStartPos="12" srcRngEndPos="37" srcRngStartln="17" srcRngEndLn="17" desc="Object key = iter.next();" ElType="." rngLn="17" />
        <ElDesc lineHash="-943711873" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" ln="18" srcRngStartPos="12" srcRngEndPos="28" srcRngStartln="18" srcRngEndLn="18" desc="map.remove(key);" ElType=".P" rngLn="18">
          <Anns>
            <Ann msg="Point where entry is removed by key" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="This '@param' tag does not contain a meaningful description of the parameter" ln="25" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" auth="mgorecka" rule="JAVADOC.MDJT" lnHash="-176831265" pkg="examples.flowanalysis" rule.header="Include a meaningful description in Javadoc tags" locStartPos="7" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="bc909f97-cea0-3fab-bc04-234d8207f2d7" locEndPos="17" prio="Not Defined" locEndLn="25" goals="0," locStartln="25" sev="3" locRef="14" tool="jtest" lineHash="-176831265" unbViolId="7e8ffc3b-de38-3248-be7c-7619f0ce5a6e" risk="Undefined" locType="sr" hash="-417185865" />
    <StdViol msg="Parameter 'map' dereferenced before being checked for null" ln="28" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" locStartln="28" sev="3" auth="mgorecka" locRef="14" rule="DBC.IPAN" lnHash="1391720025" pkg="examples.flowanalysis" rule.header="Include a '@pre != null' tag for each parameter that is dereferenced before being checked for null" tool="jtest" lineHash="1391720025" unbViolId="4c8d3583-87ea-371d-8092-271e6715dd07" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6e94ce46-73ae-3fc4-8057-997a86e70b27" locEndPos="30" locType="sr" hash="-417185865" locEndLn="28" goals="0," />
    <FlowViol msg="Iterator &quot;iter&quot; may possibly be used after iterated collection is modified" ln="29" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" ruleSAFMsg="Iterator usage point" FirstElSrcRngEndPos="53" auth="mgorecka" FirstElSrcRngEndLn="28" rule="BD.CO.ITMOD" FirstElSrcRngStartPos="8" lnHash="-1314484653" ruleSCSCMsg="Iterator creation point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" rule.header="Do not modify collection while iterating over it" FirstElSrcRngStartln="28" locStartPos="15" analyzer="com.parasoft.jtest.flowanalyzer" id="-1846913671" lang="java" violId="515b878d-1e8e-3f11-869b-87f153e17564" locEndPos="29" urgent="true" prio="Not Defined" locEndLn="29" goals="1," locStartln="29" sev="1" locRef="14" tool="jtest" lineHash="-1314484653" unbViolId="4560d33c-ea2f-376d-8cc0-eb50a4847822" risk="Undefined" locType="sr" hash="-417185865" causeLocRef="14">
      <Props>
        <Prop key="Tracked variables" val="Tracked iterators" />
        <Prop key="Tracked collections" val="Tracked collections" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1391720025" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" ln="28" srcRngStartPos="8" srcRngEndPos="53" srcRngStartln="28" srcRngEndLn="28" desc="Iterator&lt;?> iter = map.entrySet().iterator();" ElType=".C" rngLn="28">
          <Props>
            <Prop key="Tracked variables" val="iter" />
            <Prop key="Tracked collections" val="map" />
          </Props>
          <Anns>
            <Ann msg="Iterator creation point" kind="cause" />
            <Ann msg="Tracked iterators: iter" kind="var" />
            <Ann msg="Tracked collections: map" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1314484653" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" ln="29" srcRngStartPos="8" srcRngEndPos="0" srcRngStartln="29" srcRngEndLn="30" desc="while (iter.hasNext()) {" ElType="." rngLn="29">
          <Anns>
            <Ann msg="Loop condition evaluation: iter.hasNext() (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="655636977" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" ln="30" srcRngStartPos="12" srcRngEndPos="58" srcRngStartln="30" srcRngEndLn="30" desc="Entry&lt;?, ?> entry = (Entry&lt;?, ?>) iter.next();" ElType="." rngLn="30" />
        <ElDesc lineHash="-1719244368" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" ln="31" srcRngStartPos="12" srcRngEndPos="40" srcRngStartln="31" srcRngEndLn="31" desc="Object key = entry.getKey();" ElType="." rngLn="31" />
        <ElDesc lineHash="-943711873" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" ln="32" srcRngStartPos="12" srcRngEndPos="28" srcRngStartln="32" srcRngEndLn="32" desc="map.remove(key);" ElType="!" rngLn="32">
          <Anns>
            <Ann msg="Collection modification point" kind="info" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1314484653" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" ln="29" srcRngStartPos="15" srcRngEndPos="29" srcRngStartln="29" srcRngEndLn="29" desc="iter.hasNext()" ElType=".P" rngLn="29">
          <Props>
            <Prop key="Tracked variables" val="iter" />
            <Prop key="Tracked collections" val="map" />
          </Props>
          <Anns>
            <Ann msg="Tracked iterators: iter" kind="var" />
            <Ann msg="Tracked collections: map" kind="var" />
            <Ann msg="Iterator usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="This '@param' tag does not contain a meaningful description of the parameter" ln="39" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" auth="mgorecka" rule="JAVADOC.MDJT" lnHash="-176831265" pkg="examples.flowanalysis" rule.header="Include a meaningful description in Javadoc tags" locStartPos="7" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ee38718a-7a14-32ad-9810-f5b1090bd154" locEndPos="17" prio="Not Defined" locEndLn="39" goals="0," locStartln="39" sev="3" locRef="14" tool="jtest" lineHash="-176831265" unbViolId="01f6cf0b-4a62-381e-832a-64e4c36e239a" risk="Undefined" locType="sr" hash="-417185865" />
    <StdViol msg="Parameter 'map' dereferenced before being checked for null" ln="42" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" locStartln="42" sev="3" auth="mgorecka" locRef="14" rule="DBC.IPAN" lnHash="1391720025" pkg="examples.flowanalysis" rule.header="Include a '@pre != null' tag for each parameter that is dereferenced before being checked for null" tool="jtest" lineHash="1391720025" unbViolId="2354bcaa-4038-3cd8-ba13-a5000e878c92" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="877403c0-2126-30ef-bb15-13be4b2f7261" locEndPos="30" locType="sr" hash="-417185865" locEndLn="42" goals="0," />
    <StdViol msg="This '@param' tag does not contain a meaningful description of the parameter" ln="51" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" auth="mgorecka" rule="JAVADOC.MDJT" lnHash="-176831265" pkg="examples.flowanalysis" rule.header="Include a meaningful description in Javadoc tags" locStartPos="7" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2208e019-f5c2-3d4e-beb7-0d44e59b3d71" locEndPos="17" prio="Not Defined" locEndLn="51" goals="0," locStartln="51" sev="3" locRef="14" tool="jtest" lineHash="-176831265" unbViolId="7d206233-f92b-3599-b447-a48cd0a30ddf" risk="Undefined" locType="sr" hash="-417185865" />
    <StdViol msg="Parameter 'map' dereferenced before being checked for null" ln="54" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" locStartln="54" sev="3" auth="mgorecka" locRef="14" rule="DBC.IPAN" lnHash="-1650191732" pkg="examples.flowanalysis" rule.header="Include a '@pre != null' tag for each parameter that is dereferenced before being checked for null" tool="jtest" lineHash="-1650191732" unbViolId="c68ac06e-3964-3661-b284-1e76e931198f" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3b81a47e-dd01-37ed-a54f-8018540a9f4d" locEndPos="30" locType="sr" hash="-417185865" locEndLn="54" goals="0," />
    <StdViol msg="&quot;import&quot; with star &quot;*&quot;, Single-type imports should be used instead" ln="5" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" locStartln="5" sev="3" auth="mgorecka" locRef="15" rule="CODSTA.BP.IMPTD" lnHash="538338302" pkg="examples.flowanalysis" rule.header="Avoid or enforce usage of '*' form of import statements" tool="jtest" lineHash="538338302" unbViolId="0a7ff9fb-41b0-3d38-a760-d1a0bc9bdc2c" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b507de7e-d643-3316-b9dd-8ffafd88234d" locEndPos="23" locType="sr" hash="-359565455" locEndLn="5" goals="0," />
    <StdViol msg="Use 2 blank lines before type declaration" ln="7" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="-381158275" pkg="examples.flowanalysis" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9be389ad-a6f0-3abb-9414-d883bf438409" locEndPos="2" prio="Not Defined" locEndLn="7" goals="0," locStartln="7" sev="3" locRef="15" tool="jtest" lineHash="-381158275" unbViolId="7976df4e-e75d-31a3-a7fa-f020ad29cbc9" risk="Undefined" locType="sr" hash="-359565455" />
    <StdViol msg="Missing Javadoc comment for 'InefficientMapUsage'" ln="7" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" auth="mgorecka" rule="JAVADOC.PJDC" lnHash="-381158275" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for types" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3be0ab29-e9d2-33b3-85c6-1b5e9cfb01c4" locEndPos="32" prio="Not Defined" locEndLn="7" goals="0," locStartln="7" sev="3" locRef="15" tool="jtest" lineHash="-381158275" unbViolId="7cc5903d-e078-345c-b9d7-c6bf5c246d1b" risk="Undefined" locType="sr" hash="-359565455" />
    <StdViol msg="This '@param' tag does not contain a meaningful description of the parameter" ln="12" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" auth="mgorecka" rule="JAVADOC.MDJT" lnHash="-176831265" pkg="examples.flowanalysis" rule.header="Include a meaningful description in Javadoc tags" locStartPos="7" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4f6ddf7a-d9ef-3fe3-94a3-1674ae1a7de0" locEndPos="17" prio="Not Defined" locEndLn="12" goals="0," locStartln="12" sev="3" locRef="15" tool="jtest" lineHash="-176831265" unbViolId="3219e654-8eea-3a17-bed6-28df1c3536ed" risk="Undefined" locType="sr" hash="-359565455" />
    <StdViol msg="Parameter 'map' dereferenced before being checked for null" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" locStartln="15" sev="3" auth="mgorecka" locRef="15" rule="DBC.IPAN" lnHash="-1650191732" pkg="examples.flowanalysis" rule.header="Include a '@pre != null' tag for each parameter that is dereferenced before being checked for null" tool="jtest" lineHash="-1650191732" unbViolId="00d83a73-db9b-33e7-861e-06f657f5f4ce" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="dd2f85db-d61a-3055-84fc-7376b52fc56b" locEndPos="30" locType="sr" hash="-359565455" locEndLn="15" goals="0," />
    <FlowViol msg="Inefficient iteration over map &quot;map&quot;. Use entry set iterator to access values instead of retrieving them by &quot;get()&quot; method" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" ruleSAFMsg="Point where value is retrieved by key" FirstElSrcRngEndPos="39" auth="mgorecka" FirstElSrcRngEndLn="15" rule="BD.OPT.INEFMAP" FirstElSrcRngStartPos="27" lnHash="-1032022773" ruleSCSCMsg="Point of getting key set" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" rule.header="Avoid inefficient iteration over Map entries" FirstElSrcRngStartln="15" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-846759205" lang="java" violId="0bc4a652-7a92-368a-a3bd-0aebfdc933bc" locEndPos="40" urgent="true" prio="Not Defined" locEndLn="18" goals="1," locStartln="18" sev="3" locRef="15" tool="jtest" lineHash="-1032022773" unbViolId="da38dcd7-fd37-3237-b4db-5fb717bcefbf" risk="Undefined" locType="sr" hash="-359565455" causeLocRef="15">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-1650191732" locType="sr" srcRnghash="-359565455" locRef="15" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" ln="15" srcRngStartPos="8" srcRngEndPos="51" srcRngStartln="15" srcRngEndLn="15" desc="Iterator&lt;?> iter = map.keySet().iterator();" ElType=".C" rngLn="15">
          <Anns>
            <Ann msg="Point of getting key set" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1314484653" locType="sr" srcRnghash="-359565455" locRef="15" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" ln="16" srcRngStartPos="8" srcRngEndPos="0" srcRngStartln="16" srcRngEndLn="17" desc="while (iter.hasNext()) {" ElType="." rngLn="16">
          <Anns>
            <Ann msg="Loop condition evaluation: iter.hasNext() (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-927722506" locType="sr" srcRnghash="-359565455" locRef="15" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" ln="17" srcRngStartPos="12" srcRngEndPos="37" srcRngStartln="17" srcRngEndLn="17" desc="Object key = iter.next();" ElType="." rngLn="17" />
        <ElDesc lineHash="-1032022773" locType="sr" srcRnghash="-359565455" locRef="15" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" ln="18" srcRngStartPos="12" srcRngEndPos="40" srcRngStartln="18" srcRngEndLn="18" desc="Object value = map.get(key);" ElType=".P" rngLn="18">
          <Anns>
            <Ann msg="Point where value is retrieved by key" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Variable 'value' is never used" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" auth="mgorecka" rule="UC.AURV" lnHash="-1032022773" pkg="examples.flowanalysis" rule.header="Avoid local variables that are never read" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5aad7134-226b-3b05-be14-e99120c294a9" locEndPos="24" prio="Not Defined" locEndLn="18" goals="0," locStartln="18" sev="3" locRef="15" tool="jtest" lineHash="-1032022773" unbViolId="1d02d1dd-a7a4-3233-87f2-9ed8baf34d29" risk="Undefined" locType="sr" hash="-359565455" />
    <StdViol msg="This '@param' tag does not contain a meaningful description of the parameter" ln="26" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" auth="mgorecka" rule="JAVADOC.MDJT" lnHash="-176831265" pkg="examples.flowanalysis" rule.header="Include a meaningful description in Javadoc tags" locStartPos="7" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c10414fa-574e-35a0-9701-025b39db0c08" locEndPos="17" prio="Not Defined" locEndLn="26" goals="0," locStartln="26" sev="3" locRef="15" tool="jtest" lineHash="-176831265" unbViolId="c99680a2-346b-3003-857f-027cd9dc2c6d" risk="Undefined" locType="sr" hash="-359565455" />
    <StdViol msg="Parameter 'map' dereferenced before being checked for null" ln="29" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" locStartln="29" sev="3" auth="mgorecka" locRef="15" rule="DBC.IPAN" lnHash="1391720025" pkg="examples.flowanalysis" rule.header="Include a '@pre != null' tag for each parameter that is dereferenced before being checked for null" tool="jtest" lineHash="1391720025" unbViolId="433a93de-4949-3df7-9685-4c35c3adbd59" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="697620a9-d3f8-3d92-a18c-e6673490e2c9" locEndPos="30" locType="sr" hash="-359565455" locEndLn="29" goals="0," />
    <StdViol msg="Variable 'key' is never used" ln="32" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" auth="mgorecka" rule="UC.AURV" lnHash="-1719244368" pkg="examples.flowanalysis" rule.header="Avoid local variables that are never read" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c3fa4603-2010-3044-ab2d-cc79d6f2fee0" locEndPos="22" prio="Not Defined" locEndLn="32" goals="0," locStartln="32" sev="3" locRef="15" tool="jtest" lineHash="-1719244368" unbViolId="38ce45b4-5df9-39be-ab87-de464f5d3963" risk="Undefined" locType="sr" hash="-359565455" />
    <StdViol msg="Variable 'value' is never used" ln="33" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" auth="mgorecka" rule="UC.AURV" lnHash="-518523280" pkg="examples.flowanalysis" rule.header="Avoid local variables that are never read" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="fb792fda-111e-3178-b36e-7c3043430815" locEndPos="24" prio="Not Defined" locEndLn="33" goals="0," locStartln="33" sev="3" locRef="15" tool="jtest" lineHash="-518523280" unbViolId="aef02488-6ca6-32f6-bf22-9083426feb65" risk="Undefined" locType="sr" hash="-359565455" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="10" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="-2044601885" pkg="examples.flowanalysis" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="236ad7e8-9b94-3394-8e32-5b1011ad0431" locEndPos="2" prio="Not Defined" locEndLn="10" goals="0," locStartln="10" sev="3" locRef="16" tool="jtest" lineHash="-2044601885" unbViolId="dac02ed8-f1da-30cf-82f9-3608c5584169" risk="Undefined" locType="sr" hash="1862789318" />
    <StdViol msg="Missing Javadoc comment for 'SQLInjection'" ln="10" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" auth="mgorecka" rule="JAVADOC.PJDC" lnHash="-2044601885" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for types" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0b6c21b9-88b2-3273-9179-6b61f75ae0f8" locEndPos="25" prio="Not Defined" locEndLn="10" goals="0," locStartln="10" sev="3" locRef="16" tool="jtest" lineHash="-2044601885" unbViolId="7934f470-6246-3e31-9184-25c36e3690ae" risk="Undefined" locType="sr" hash="1862789318" />
    <StdViol msg="This '@param' tag does not contain a meaningful description of the parameter" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" auth="mgorecka" rule="JAVADOC.MDJT" lnHash="416389266" pkg="examples.flowanalysis" rule.header="Include a meaningful description in Javadoc tags" locStartPos="7" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a7e492df-ae4a-3a08-a051-c7ec03d1d22c" locEndPos="21" prio="Not Defined" locEndLn="13" goals="0," locStartln="13" sev="3" locRef="16" tool="jtest" lineHash="416389266" unbViolId="2ab7831f-14d9-3a7f-9b84-20fb348657d1" risk="Undefined" locType="sr" hash="1862789318" />
    <StdViol msg="This '@param' tag does not contain a meaningful description of the parameter" ln="14" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" auth="mgorecka" rule="JAVADOC.MDJT" lnHash="980977423" pkg="examples.flowanalysis" rule.header="Include a meaningful description in Javadoc tags" locStartPos="7" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="67d51d70-bc41-39ad-83a1-0c38d8e780ad" locEndPos="27" prio="Not Defined" locEndLn="14" goals="0," locStartln="14" sev="3" locRef="16" tool="jtest" lineHash="980977423" unbViolId="34a26bba-a4e9-3f36-8242-99fc5ae64001" risk="Undefined" locType="sr" hash="1862789318" />
    <StdViol msg="Parameter 'request' dereferenced before being checked for null" ln="17" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" auth="mgorecka" rule="DBC.IPAN" lnHash="-749817472" pkg="examples.flowanalysis" rule.header="Include a '@pre != null' tag for each parameter that is dereferenced before being checked for null" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="72b6e8f0-2f0f-3fe2-bf8f-8475be02484a" locEndPos="34" prio="Not Defined" locEndLn="17" goals="0," locStartln="17" sev="3" locRef="16" tool="jtest" lineHash="-749817472" unbViolId="f6f3329c-a8ef-37bb-8b5e-8f9a8e73b809" risk="Undefined" locType="sr" hash="1862789318" />
    <StdViol msg="This String contains &quot;SELECT *&quot;, make sure it is not being used in a database query" ln="19" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" auth="mgorecka" rule="SECURITY.IBA.AUSS" lnHash="-548613763" pkg="examples.flowanalysis" rule.header="Avoid using &quot;SELECT *&quot; in SQL queries" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="47ec6d96-0ca1-3e8b-b4bb-0b2bc1f46d49" locEndPos="58" prio="Not Defined" locEndLn="19" goals="0," locStartln="19" sev="1" locRef="16" tool="jtest" lineHash="-548613763" unbViolId="7610a716-b3d9-346f-aeec-9d3f24d6d860" risk="Undefined" locType="sr" hash="1862789318" />
    <StdViol msg="Single character ''' using double quotes in string concatenation" ln="19" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" auth="mgorecka" rule="OPT.STR" lnHash="-548613763" pkg="examples.flowanalysis" rule.header="Use single quotes instead of double quotes for single character string concatenation" locStartPos="106" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="282001db-240b-3f49-8167-42e9d87ff98d" locEndPos="109" prio="Not Defined" locEndLn="19" goals="0," locStartln="19" sev="3" locRef="16" tool="jtest" lineHash="-548613763" unbViolId="84a754d0-f917-33fb-9974-98d63be44736" risk="Undefined" locType="sr" hash="1862789318" />
    <StdViol msg="Variable 'sQuery' is not declared in this &quot;try&quot; block" ln="22" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" auth="mgorecka" rule="CODSTA.READ.DVCU" lnHash="1258828630" pkg="examples.flowanalysis" rule.header="Declare variables as close as possible to where they are used" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="35771612-b4a9-30bf-8201-1cca4f6a83d2" locEndPos="11" prio="Not Defined" locEndLn="22" goals="0," locStartln="22" sev="4" locRef="16" tool="jtest" lineHash="1258828630" unbViolId="2505dc94-a21e-38ad-805a-2c3b56929baf" risk="Undefined" locType="sr" hash="1862789318" />
    <StdViol msg="Parameter 'sqlConnection' dereferenced before being checked for null" ln="23" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" auth="mgorecka" rule="DBC.IPAN" lnHash="203786084" pkg="examples.flowanalysis" rule.header="Include a '@pre != null' tag for each parameter that is dereferenced before being checked for null" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7acf4d38-b3bd-3c0f-871a-c95dd1840aae" locEndPos="32" prio="Not Defined" locEndLn="23" goals="0," locStartln="23" sev="3" locRef="16" tool="jtest" lineHash="203786084" unbViolId="f059f87f-730d-31ad-b31a-2efb805574e5" risk="Undefined" locType="sr" hash="1862789318" />
    <StdViol msg="Consider using 'prepareCall()' or 'prepareStatement()' to prevent SQL injection vulnerabilities" ln="23" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" auth="mgorecka" rule="SECURITY.IBA.UPS" lnHash="203786084" pkg="examples.flowanalysis" rule.header="Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'" locStartPos="33" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="929ed4bc-7c29-3c6e-8b61-8576644df9da" locEndPos="48" prio="Not Defined" locEndLn="23" goals="0," locStartln="23" sev="1" locRef="16" tool="jtest" lineHash="203786084" unbViolId="b421de12-2a05-3664-8f94-ef4e3fde6202" risk="Undefined" locType="sr" hash="1862789318" />
    <FlowViol msg="Injection of data received from servlet request (&quot;sQuery&quot;) to SQL query" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="58" auth="mgorecka" FirstElSrcRngEndLn="18" rule="BD.SECURITY.TDSQL" FirstElSrcRngStartPos="8" lnHash="-1698291496" ruleSCSCMsg="Tainting point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" rule.header="Protect against SQL injection" FirstElSrcRngStartln="18" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="1481632308" lang="java" violId="41e1a2ce-8d0e-3a56-aebe-aa17c5ca47d3" locEndPos="42" urgent="true" prio="Not Defined" locEndLn="24" goals="1," locStartln="24" sev="1" locRef="16" tool="jtest" lineHash="-1698291496" unbViolId="ab5d5140-68dd-385d-b74c-e1374ff5fde6" risk="Undefined" locType="sr" hash="1862789318" causeLocRef="16">
      <Props>
        <Prop key="Tracked variables" val="Tainted data" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-749817472" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="17" srcRngStartPos="8" srcRngEndPos="57" srcRngStartln="17" srcRngEndLn="17" desc="String sUserName = request.getParameter(&quot;login&quot;);" ElType="." rngLn="17" />
        <ElDesc lineHash="-772550714" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="18" srcRngStartPos="8" srcRngEndPos="58" srcRngStartln="18" srcRngEndLn="18" desc="String sPassword = request.getParameter(&quot;passwd&quot;);" ElType=".C" rngLn="18">
          <Props>
            <Prop key="Tracked variables" val="sPassword" />
          </Props>
          <Anns>
            <Ann msg="Tainting point" kind="cause" />
            <Ann msg="Tainted data: sPassword" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-548613763" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="19" srcRngStartPos="8" srcRngEndPos="110" srcRngStartln="19" srcRngEndLn="19" desc="String sQuery = &quot;SELECT * FROM users WHERE name='&quot; + sUserName + &quot;' AND password='&quot; + sPassword + &quot;'&quot;;" ElType="!" rngLn="19" />
        <ElDesc lineHash="-271783734" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="20" srcRngStartPos="8" srcRngEndPos="30" srcRngStartln="20" srcRngEndLn="20" desc="Statement stmt = null;" ElType="." rngLn="20">
          <Props>
            <Prop key="Tracked variables" val="sQuery" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: sQuery" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="920994605" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="21" srcRngStartPos="8" srcRngEndPos="28" srcRngStartln="21" srcRngEndLn="21" desc="ResultSet rs = null;" ElType="." rngLn="21" />
        <ElDesc lineHash="203786084" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="23" srcRngStartPos="12" srcRngEndPos="50" srcRngStartln="23" srcRngEndLn="23" desc="stmt = sqlConnection.createStatement()" ElType="." rngLn="23" />
        <ElDesc lineHash="-1698291496" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="24" srcRngStartPos="12" srcRngEndPos="42" srcRngStartln="24" srcRngEndLn="24" desc="rs = stmt.executeQuery(sQuery)" ElType=".P" rngLn="24">
          <Props>
            <Prop key="Tracked variables" val="sQuery" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: sQuery" kind="var" />
            <Ann msg="Call to a dangerous method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Injection of data received from servlet request (&quot;sQuery&quot;) to SQL query" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="57" auth="mgorecka" FirstElSrcRngEndLn="17" rule="BD.SECURITY.TDSQL" FirstElSrcRngStartPos="8" lnHash="-1698291496" ruleSCSCMsg="Tainting point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" rule.header="Protect against SQL injection" FirstElSrcRngStartln="17" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-2032903079" lang="java" violId="b61d89c8-f0f5-32d1-bb0c-e3614f5ebf76" locEndPos="42" urgent="true" prio="Not Defined" locEndLn="24" goals="1," locStartln="24" sev="1" locRef="16" tool="jtest" lineHash="-1698291496" unbViolId="b619231a-d76d-3b9d-b4cb-1302c7f5077a" risk="Undefined" locType="sr" hash="1862789318" causeLocRef="16">
      <Props>
        <Prop key="Tracked variables" val="Tainted data" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-749817472" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="17" srcRngStartPos="8" srcRngEndPos="57" srcRngStartln="17" srcRngEndLn="17" desc="String sUserName = request.getParameter(&quot;login&quot;);" ElType=".C" rngLn="17">
          <Props>
            <Prop key="Tracked variables" val="sUserName" />
          </Props>
          <Anns>
            <Ann msg="Tainting point" kind="cause" />
            <Ann msg="Tainted data: sUserName" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-772550714" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="18" srcRngStartPos="8" srcRngEndPos="58" srcRngStartln="18" srcRngEndLn="18" desc="String sPassword = request.getParameter(&quot;passwd&quot;);" ElType="." rngLn="18" />
        <ElDesc lineHash="-548613763" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="19" srcRngStartPos="8" srcRngEndPos="110" srcRngStartln="19" srcRngEndLn="19" desc="String sQuery = &quot;SELECT * FROM users WHERE name='&quot; + sUserName + &quot;' AND password='&quot; + sPassword + &quot;'&quot;;" ElType="!" rngLn="19" />
        <ElDesc lineHash="-271783734" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="20" srcRngStartPos="8" srcRngEndPos="30" srcRngStartln="20" srcRngEndLn="20" desc="Statement stmt = null;" ElType="." rngLn="20">
          <Props>
            <Prop key="Tracked variables" val="sQuery" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: sQuery" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="920994605" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="21" srcRngStartPos="8" srcRngEndPos="28" srcRngStartln="21" srcRngEndLn="21" desc="ResultSet rs = null;" ElType="." rngLn="21" />
        <ElDesc lineHash="203786084" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="23" srcRngStartPos="12" srcRngEndPos="50" srcRngStartln="23" srcRngEndLn="23" desc="stmt = sqlConnection.createStatement()" ElType="." rngLn="23" />
        <ElDesc lineHash="-1698291496" locType="sr" srcRnghash="1862789318" locRef="16" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" ln="24" srcRngStartPos="12" srcRngEndPos="42" srcRngStartln="24" srcRngEndLn="24" desc="rs = stmt.executeQuery(sQuery)" ElType=".P" rngLn="24">
          <Props>
            <Prop key="Tracked variables" val="sQuery" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: sQuery" kind="var" />
            <Ann msg="Call to a dangerous method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="&quot;catch&quot; block has an empty body" ln="45" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" auth="mgorecka" rule="PB.TYPO.AECB" lnHash="100324464" pkg="examples.flowanalysis" rule.header="Avoid &quot;try&quot;, &quot;catch&quot; and &quot;finally&quot; blocks with empty bodies" locStartPos="10" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4bc6b6a1-e243-38a0-b1e8-b634d4873193" locEndPos="15" prio="Not Defined" locEndLn="45" goals="0," locStartln="45" sev="3" locRef="16" tool="jtest" lineHash="100324464" unbViolId="6d22b82c-1cbd-382d-a08b-547c799f1ff4" risk="Undefined" locType="sr" hash="1862789318" />
    <StdViol msg="&quot;catch&quot; statement directly catches the general exception type 'Exception'" ln="45" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" auth="mgorecka" rule="CODSTA.EPC.NCE" lnHash="100324464" pkg="examples.flowanalysis" rule.header="Do not catch exception types which are too general or are unchecked exceptions" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="958fb55e-f4c1-304a-b16b-e43ae6ab2c84" locEndPos="26" prio="Not Defined" locEndLn="45" goals="0," locStartln="45" sev="3" locRef="16" tool="jtest" lineHash="100324464" unbViolId="105dcee8-fc25-3728-95d3-3d8e4054ea89" risk="Undefined" locType="sr" hash="1862789318" />
    <StdViol msg="This block should contain a comment explaining why it is empty" ln="45" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" auth="mgorecka" rule="CODSTA.READ.CEB" lnHash="100324464" pkg="examples.flowanalysis" rule.header="Comment empty blocks" locStartPos="30" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f8fbb90b-0927-3899-bba0-c4d23c24aa56" locEndPos="31" prio="Not Defined" locEndLn="45" goals="0," locStartln="45" sev="3" locRef="16" tool="jtest" lineHash="100324464" unbViolId="f35df444-1617-3a12-90ee-3fca6bb4185d" risk="Undefined" locType="sr" hash="1862789318" />
    <StdViol msg="&quot;catch&quot; block has an empty body" ln="55" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" auth="mgorecka" rule="PB.TYPO.AECB" lnHash="100324464" pkg="examples.flowanalysis" rule.header="Avoid &quot;try&quot;, &quot;catch&quot; and &quot;finally&quot; blocks with empty bodies" locStartPos="10" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="953d7b7d-117b-3e6e-a1b9-b3abb4e19306" locEndPos="15" prio="Not Defined" locEndLn="55" goals="0," locStartln="55" sev="3" locRef="16" tool="jtest" lineHash="100324464" unbViolId="46427677-1ab7-342c-ba09-3739b3b2f6d4" risk="Undefined" locType="sr" hash="1862789318" />
    <StdViol msg="&quot;catch&quot; statement directly catches the general exception type 'Exception'" ln="55" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" auth="mgorecka" rule="CODSTA.EPC.NCE" lnHash="100324464" pkg="examples.flowanalysis" rule.header="Do not catch exception types which are too general or are unchecked exceptions" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a4e2a561-c836-3b60-b3a4-dc50c1b0befd" locEndPos="26" prio="Not Defined" locEndLn="55" goals="0," locStartln="55" sev="3" locRef="16" tool="jtest" lineHash="100324464" unbViolId="28d4483f-4a06-379c-a3ab-238ffcdbff25" risk="Undefined" locType="sr" hash="1862789318" />
    <StdViol msg="This block should contain a comment explaining why it is empty" ln="55" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" auth="mgorecka" rule="CODSTA.READ.CEB" lnHash="100324464" pkg="examples.flowanalysis" rule.header="Comment empty blocks" locStartPos="30" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6096a072-c91b-37a4-896c-3760eec0cb94" locEndPos="31" prio="Not Defined" locEndLn="55" goals="0," locStartln="55" sev="3" locRef="16" tool="jtest" lineHash="100324464" unbViolId="c5b6a7af-e9af-37a0-95e2-a86d991685c8" risk="Undefined" locType="sr" hash="1862789318" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="5" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" auth="Developer007" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.flowanalysis" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ba02a0b5-a00a-3eab-acfa-a79409c21ebf" locEndPos="2" urgent="true" prio="Not Defined" locEndLn="5" goals="1," locStartln="5" sev="3" locRef="17" tool="jtest" lineHash="46511" unbViolId="b5af2f2f-755d-3b29-afbe-ac501294a06e" risk="Undefined" locType="sr" hash="-152258803" />
    <StdViol msg="Name of &quot;abstract&quot; class 'SystemInjection' does not match user-specified regular expression '^Abstract|Factory$'" ln="8" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" auth="Developer007" rule="NAMING.NACL" lnHash="1622145492" pkg="examples.flowanalysis" rule.header="Use a naming convention for &quot;abstract&quot; classes" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2038f320-03b7-3d45-8d69-53da41fc2643" locEndPos="37" urgent="true" prio="Not Defined" locEndLn="8" goals="1," locStartln="8" sev="3" locRef="17" tool="jtest" lineHash="1622145492" unbViolId="3ee0fd55-03df-3a40-b599-3eb7f0a34930" risk="Undefined" locType="sr" hash="-152258803" />
    <StdViol msg="Instance field is declared &quot;public&quot;: _req" ln="10" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" auth="Developer007" rule="OOP.AF" lnHash="-1241065721" pkg="examples.flowanalysis" rule.header="Avoid &quot;public&quot;/&quot;protected&quot;/package-private fields" locStartPos="30" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="41db6574-89c7-30e7-a0d7-342c96660f4c" locEndPos="34" urgent="true" prio="Not Defined" locEndLn="10" goals="1," locStartln="10" sev="3" locRef="17" tool="jtest" lineHash="-1241065721" unbViolId="038d6436-9601-3c2c-9304-2cd5c7eaaa9b" risk="Undefined" locType="sr" hash="-152258803" />
    <StdViol msg="Throwing explicit 'Exception' object in 'execInjection()'" ln="16" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" auth="Developer007" rule="CODSTA.BP.NTX" lnHash="1666723708" pkg="examples.flowanalysis" rule.header="Avoid declaring methods to throw general or unchecked Exception types" locStartPos="32" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="af570ddf-c762-3cfe-b665-719a6af17413" locEndPos="41" urgent="true" prio="Not Defined" locEndLn="16" goals="1," locStartln="16" sev="3" locRef="17" tool="jtest" lineHash="1666723708" unbViolId="f436e0e8-9801-3e12-9dcc-be0cb5239eeb" risk="Undefined" locType="sr" hash="-152258803" />
    <FlowViol msg="Injection of data received from servlet request (&quot;sCommand&quot;) to command executing method" ln="23" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="44" auth="Developer007" FirstElSrcRngEndLn="13" rule="BD.SECURITY.TDCMD" FirstElSrcRngStartPos="15" lnHash="1948805676" ruleSCSCMsg="Tainting point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" rule.header="Protect against Command injection" FirstElSrcRngStartln="13" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="-97281285" lang="java" violId="5ae40bf5-1874-3a82-8271-7b150171ff41" locEndPos="44" urgent="true" prio="Not Defined" locEndLn="23" goals="1," locStartln="23" sev="1" locRef="17" tool="jtest" lineHash="1948805676" unbViolId="62fedd20-6cb6-37da-ac1f-e9e2b5d6bb2e" risk="Undefined" locType="sr" hash="-152258803" causeLocRef="17">
      <Props>
        <Prop key="Tracked variables" val="Tainted data" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1451955906" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="22" srcRngStartPos="8" srcRngEndPos="91" srcRngStartln="22" srcRngEndLn="22" desc="String sCommand = &quot;call process_data.exe -params &quot; + getData(&quot;command_parameters&quot;);" ElType="." rngLn="22" />
        <ElDesc lineHash="1451955906" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="22" srcRngStartPos="61" srcRngEndPos="90" srcRngStartln="22" srcRngEndLn="22" desc="getData(&quot;command_parameters&quot;)" ElType="!" rngLn="22">
          <ElDescList>
            <ElDesc lineHash="-881776851" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="13" srcRngStartPos="8" srcRngEndPos="45" srcRngStartln="13" srcRngEndLn="13" desc="return _req.getParameter(sParamName);" ElType=".C" rngLn="13">
              <Props>
                <Prop key="Tracked variables" val="_req.getParameter(sParamName)" />
              </Props>
              <Anns>
                <Ann msg="Tainting point" kind="cause" />
                <Ann msg="Tainted data: _req.getParameter(sParamName)" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1451955906" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="22" srcRngStartPos="8" srcRngEndPos="91" srcRngStartln="22" srcRngEndLn="22" desc="String sCommand = &quot;call process_data.exe -params &quot; + getData(&quot;command_parameters&quot;);" ElType="!" rngLn="22">
          <Props>
            <Prop key="Tracked variables" val="String sCommand = &quot;call process_data.exe -params &quot; + getData...ommand_parameters&quot;);" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: String sCommand = &quot;call process_data.exe -params &quot; + getData...ommand_parameters&quot;);" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1948805676" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="23" srcRngStartPos="8" srcRngEndPos="44" srcRngStartln="23" srcRngEndLn="23" desc="Runtime.getRuntime().exec(sCommand);" ElType=".P" rngLn="23">
          <Props>
            <Prop key="Tracked variables" val="sCommand" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: sCommand" kind="var" />
            <Ann msg="Call to a dangerous method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Non-portable 'Runtime.exec()' used" ln="23" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" auth="Developer007" rule="PORT.EXEC" lnHash="1948805676" pkg="examples.flowanalysis" rule.header="Do not use 'Runtime.exec()'" locStartPos="29" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="ab7702b7-8bfc-31b5-878a-f47d2b41d5db" locEndPos="33" urgent="true" prio="Not Defined" locEndLn="23" goals="1," locStartln="23" sev="3" locRef="17" tool="jtest" lineHash="1948805676" unbViolId="15bbe67b-c93e-3491-948e-aec4a62ee20c" risk="Undefined" locType="sr" hash="-152258803" />
    <StdViol msg="Throwing explicit 'Exception' object in 'environmentInjection()'" ln="26" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" auth="Developer007" rule="CODSTA.BP.NTX" lnHash="-1029191706" pkg="examples.flowanalysis" rule.header="Avoid declaring methods to throw general or unchecked Exception types" locStartPos="39" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="03050d81-aaf7-364e-89eb-84e883390572" locEndPos="48" urgent="true" prio="Not Defined" locEndLn="26" goals="1," locStartln="26" sev="3" locRef="17" tool="jtest" lineHash="-1029191706" unbViolId="204f0e3d-fa7f-3ed6-99d2-5f72a83ecbd7" risk="Undefined" locType="sr" hash="-152258803" />
    <FlowViol msg="Injection of data received from servlet request (&quot;sSomeResultingString&quot;) to method setting system (environment) properties" ln="32" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="44" auth="Developer007" FirstElSrcRngEndLn="13" rule="BD.SECURITY.TDENV" FirstElSrcRngStartPos="15" lnHash="-1399063460" ruleSCSCMsg="Tainting point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" rule.header="Protect against Environment injection" FirstElSrcRngStartln="13" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="-536299706" lang="java" violId="30fc1d1e-0f0f-3cf0-ab1c-c2181812298a" locEndPos="65" urgent="true" prio="Not Defined" locEndLn="32" goals="1," locStartln="32" sev="1" locRef="17" tool="jtest" lineHash="-1399063460" unbViolId="424f265b-e8c5-3e97-9107-84aaab3d3e56" risk="Undefined" locType="sr" hash="-152258803" causeLocRef="17">
      <Props>
        <Prop key="Tracked variables" val="Tainted data" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1635634366" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="31" srcRngStartPos="51" srcRngEndPos="71" srcRngStartln="31" srcRngEndLn="31" desc="getData(&quot;user_data&quot;)" ElType="!" rngLn="31">
          <ElDescList>
            <ElDesc lineHash="-881776851" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="13" srcRngStartPos="8" srcRngEndPos="45" srcRngStartln="13" srcRngEndLn="13" desc="return _req.getParameter(sParamName);" ElType=".C" rngLn="13">
              <Props>
                <Prop key="Tracked variables" val="_req.getParameter(sParamName)" />
              </Props>
              <Anns>
                <Ann msg="Tainting point" kind="cause" />
                <Ann msg="Tainted data: _req.getParameter(sParamName)" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1635634366" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="31" srcRngStartPos="8" srcRngEndPos="73" srcRngStartln="31" srcRngEndLn="31" desc="String sSomeResultingString = processValue(getData(&quot;user_data&quot;));" ElType="!" rngLn="31">
          <Props>
            <Prop key="Tracked variables" val="getData(&quot;user_data&quot;)" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: getData(&quot;user_data&quot;)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1399063460" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="32" srcRngStartPos="8" srcRngEndPos="65" srcRngStartln="32" srcRngEndLn="32" desc="System.setProperty(&quot;someProperty&quot;, sSomeResultingString);" ElType=".P" rngLn="32">
          <Props>
            <Prop key="Tracked variables" val="sSomeResultingString" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: sSomeResultingString" kind="var" />
            <Ann msg="Call to a dangerous method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Throwing explicit 'Exception' object in 'libraryInjection()'" ln="35" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" auth="Developer007" rule="CODSTA.BP.NTX" lnHash="1494941326" pkg="examples.flowanalysis" rule.header="Avoid declaring methods to throw general or unchecked Exception types" locStartPos="35" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="42f824cf-a8e8-367e-be91-6cc9b257565e" locEndPos="44" urgent="true" prio="Not Defined" locEndLn="35" goals="1," locStartln="35" sev="3" locRef="17" tool="jtest" lineHash="1494941326" unbViolId="a3ece712-c1a5-3cd4-a184-76481aefe977" risk="Undefined" locType="sr" hash="-152258803" />
    <FlowViol msg="Injection of data received from servlet request (&quot;libName&quot;) to library loading method" ln="42" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="44" auth="Developer007" FirstElSrcRngEndLn="13" rule="BD.SECURITY.TDLIB" FirstElSrcRngStartPos="15" lnHash="-308926192" ruleSCSCMsg="Tainting point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" rule.header="Protect against Library injection" FirstElSrcRngStartln="13" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="1764022979" lang="java" violId="1b7c9b79-dc46-3f14-82fe-67bafb207159" locEndPos="36" urgent="true" prio="Not Defined" locEndLn="42" goals="1," locStartln="42" sev="1" locRef="17" tool="jtest" lineHash="-308926192" unbViolId="f0e3eb84-20f8-394b-9e63-d0db4603fe8b" risk="Undefined" locType="sr" hash="-152258803" causeLocRef="17">
      <Props>
        <Prop key="Tracked variables" val="Tainted data" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-2010188740" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="41" srcRngStartPos="38" srcRngEndPos="65" srcRngStartln="41" srcRngEndLn="41" desc="getData(&quot;operation_needed&quot;)" ElType="!" rngLn="41">
          <ElDescList>
            <ElDesc lineHash="-881776851" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="13" srcRngStartPos="8" srcRngEndPos="45" srcRngStartln="13" srcRngEndLn="13" desc="return _req.getParameter(sParamName);" ElType=".C" rngLn="13">
              <Props>
                <Prop key="Tracked variables" val="_req.getParameter(sParamName)" />
              </Props>
              <Anns>
                <Ann msg="Tainting point" kind="cause" />
                <Ann msg="Tainted data: _req.getParameter(sParamName)" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-2010188740" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="41" srcRngStartPos="8" srcRngEndPos="67" srcRngStartln="41" srcRngEndLn="41" desc="String libName = processValue(getData(&quot;operation_needed&quot;));" ElType="!" rngLn="41">
          <Props>
            <Prop key="Tracked variables" val="getData(&quot;operation_needed&quot;)" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: getData(&quot;operation_needed&quot;)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-308926192" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="42" srcRngStartPos="8" srcRngEndPos="36" srcRngStartln="42" srcRngEndLn="42" desc="System.loadLibrary(libName);" ElType=".P" rngLn="42">
          <Props>
            <Prop key="Tracked variables" val="libName" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: libName" kind="var" />
            <Ann msg="Call to a dangerous method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Throwing explicit 'Exception' object in 'reflectionInjection()'" ln="45" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" auth="Developer007" rule="CODSTA.BP.NTX" lnHash="-1226317674" pkg="examples.flowanalysis" rule.header="Avoid declaring methods to throw general or unchecked Exception types" locStartPos="38" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b72992ff-6432-316b-b318-626ccfbb3323" locEndPos="47" urgent="true" prio="Not Defined" locEndLn="45" goals="1," locStartln="45" sev="3" locRef="17" tool="jtest" lineHash="-1226317674" unbViolId="f4693abe-fe4d-3e1c-be22-e444876c12fb" risk="Undefined" locType="sr" hash="-152258803" />
    <FlowViol msg="Injection of data received from servlet request (&quot;sClassName&quot;) to Java reflection method" ln="49" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="44" auth="Developer007" FirstElSrcRngEndLn="13" rule="BD.SECURITY.TDRFL" FirstElSrcRngStartPos="15" lnHash="-1369445572" ruleSCSCMsg="Tainting point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" rule.header="Protect against Reflection injection" FirstElSrcRngStartln="13" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="-78170563" lang="java" violId="64885528-8c60-3a09-b6d8-906ac341547d" locEndPos="65" urgent="true" prio="Not Defined" locEndLn="49" goals="1," locStartln="49" sev="1" locRef="17" tool="jtest" lineHash="-1369445572" unbViolId="c931e932-cdeb-3a4f-8b75-8ac8c964e38d" risk="Undefined" locType="sr" hash="-152258803" causeLocRef="17">
      <Props>
        <Prop key="Tracked variables" val="Tainted data" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-197347714" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="48" srcRngStartPos="41" srcRngEndPos="68" srcRngStartln="48" srcRngEndLn="48" desc="getData(&quot;operation_needed&quot;)" ElType="!" rngLn="48">
          <ElDescList>
            <ElDesc lineHash="-881776851" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="13" srcRngStartPos="8" srcRngEndPos="45" srcRngStartln="13" srcRngEndLn="13" desc="return _req.getParameter(sParamName);" ElType=".C" rngLn="13">
              <Props>
                <Prop key="Tracked variables" val="_req.getParameter(sParamName)" />
              </Props>
              <Anns>
                <Ann msg="Tainting point" kind="cause" />
                <Ann msg="Tainted data: _req.getParameter(sParamName)" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-197347714" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="48" srcRngStartPos="8" srcRngEndPos="70" srcRngStartln="48" srcRngEndLn="48" desc="String sClassName = processValue(getData(&quot;operation_needed&quot;));" ElType="!" rngLn="48">
          <Props>
            <Prop key="Tracked variables" val="getData(&quot;operation_needed&quot;)" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: getData(&quot;operation_needed&quot;)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1369445572" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" ln="49" srcRngStartPos="8" srcRngEndPos="65" srcRngStartln="49" srcRngEndLn="49" desc="ClassLoader.getSystemClassLoader().loadClass(sClassName);" ElType=".P" rngLn="49">
          <Props>
            <Prop key="Tracked variables" val="sClassName" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: sClassName" kind="var" />
            <Ann msg="Call to a dangerous method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Use 2 blank lines before type declaration" ln="3" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.flowanalysis" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b8c6a291-78ba-39a3-aaf7-9cec20fa85fc" locEndPos="2" prio="Not Defined" locEndLn="3" goals="0," locStartln="3" sev="3" locRef="18" tool="jtest" lineHash="46511" unbViolId="4fa4a925-bbe3-3d60-8ce5-ba756d854718" risk="Undefined" locType="sr" hash="1709312165" />
    <StdViol msg="Missing Javadoc comment for method 'printCalculationResult()'" ln="8" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-987516032" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="defcd7d1-2f7d-3304-9016-d5904cda49c0" locEndPos="38" prio="Not Defined" locEndLn="8" goals="0," locStartln="8" sev="3" locRef="18" tool="jtest" lineHash="-987516032" unbViolId="d5659e49-4e14-3e26-8591-70001a378f76" risk="Undefined" locType="sr" hash="1709312165" />
    <StdViol msg="Make sure 'System.err.println' is not a leftover debug statement" ln="10" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="711302723" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="582384be-f45d-3b8b-bd35-690b2e81f590" locEndPos="87" prio="Not Defined" locEndLn="10" goals="0," locStartln="10" sev="3" locRef="18" tool="jtest" lineHash="711302723" unbViolId="ae4b8ccf-47af-3c6f-a8ff-b69c838baa56" risk="Undefined" locType="sr" hash="1709312165" />
    <FlowViol msg="Condition &quot;result instanceof RuntimeException&quot; always evaluates to false" ln="11" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" ruleSAFMsg="Point where senseless condition is used" FirstElSrcRngEndPos="54" auth="mgorecka" FirstElSrcRngEndLn="8" rule="BD.PB.CC" FirstElSrcRngStartPos="16" lnHash="-1443263063" ruleSCSCMsg="Start of the path" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" rule.header="Avoid conditions that always evaluate to the same value" FirstElSrcRngStartln="8" locStartPos="15" analyzer="com.parasoft.jtest.flowanalyzer" id="-507222183" lang="java" violId="94af7a83-8849-379d-b2a5-28099fa9851c" locEndPos="56" urgent="true" prio="Not Defined" locEndLn="11" goals="1," locStartln="11" sev="2" locRef="18" tool="jtest" lineHash="-1443263063" unbViolId="de8640a2-4a1f-340e-a06f-1c2b1e912a3d" risk="Undefined" locType="sr" hash="1709312165" causeLocRef="18">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-987516032" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" ln="8" srcRngStartPos="16" srcRngEndPos="54" srcRngStartln="8" srcRngEndLn="8" desc="printCalculationResult(Object result)" ElType=".C" rngLn="8">
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1532976715" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" ln="9" srcRngStartPos="8" srcRngEndPos="42" srcRngStartln="9" srcRngEndLn="9" desc="if (result instanceof Exception) {" ElType="." rngLn="9">
          <Anns>
            <Ann msg="Condition evaluation: result instanceof java.lang.Exception (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1443263063" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" ln="11" srcRngStartPos="15" srcRngEndPos="56" srcRngStartln="11" srcRngEndLn="11" desc="if (result instanceof RuntimeException) {" ElType=".P" rngLn="11">
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="404167856" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="11b60952-85c1-3ae1-807c-c1c9487b7a37" locEndPos="62" prio="Not Defined" locEndLn="15" goals="0," locStartln="15" sev="3" locRef="18" tool="jtest" lineHash="404167856" unbViolId="c5aaf28e-fb97-3837-b7c4-4969e4187ab7" risk="Undefined" locType="sr" hash="1709312165" />
    <StdViol msg="Unnecessary call to &quot;toString()&quot;" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" auth="mgorecka" rule="CODSTA.READ.AUTS" lnHash="404167856" pkg="examples.flowanalysis" rule.header="Avoid unnecessary calls to 'toString()'" locStartPos="51" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4704f17f-aa20-3c0e-adb6-65f5365a06d5" locEndPos="59" prio="Not Defined" locEndLn="15" goals="0," locStartln="15" sev="3" locRef="18" tool="jtest" lineHash="404167856" unbViolId="1428e4b4-bba7-3a09-b54c-332f2ef2efc9" risk="Undefined" locType="sr" hash="1709312165" />
    <StdViol msg="Missing Javadoc comment for method 'guessFigure()'" ln="19" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-917251182" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ab25f8ca-adda-3478-924e-8408d9f52abd" locEndPos="27" prio="Not Defined" locEndLn="19" goals="0," locStartln="19" sev="3" locRef="18" tool="jtest" lineHash="-917251182" unbViolId="8788c60f-caab-3aa8-9252-307333b86f7c" risk="Undefined" locType="sr" hash="1709312165" />
    <FlowViol msg="Condition &quot;!volumetric&quot; always evaluates to true" ln="23" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" ruleSAFMsg="Point where senseless condition is used" FirstElSrcRngEndPos="63" auth="mgorecka" FirstElSrcRngEndLn="19" rule="BD.PB.CC" FirstElSrcRngStartPos="16" lnHash="2035781366" ruleSCSCMsg="Start of the path" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" rule.header="Avoid conditions that always evaluate to the same value" FirstElSrcRngStartln="19" locStartPos="19" analyzer="com.parasoft.jtest.flowanalyzer" id="-1602486109" lang="java" violId="69d6f06c-b92e-3aaa-89d0-7622fdbc7036" locEndPos="39" urgent="true" prio="Not Defined" locEndLn="23" goals="1," locStartln="23" sev="2" locRef="18" tool="jtest" lineHash="2035781366" unbViolId="9d5d1f1e-df6c-3a13-b8b3-7b04562a0150" risk="Undefined" locType="sr" hash="1709312165" causeLocRef="18">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-917251182" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" ln="19" srcRngStartPos="16" srcRngEndPos="63" srcRngStartln="19" srcRngEndLn="19" desc="guessFigure(boolean round, boolean volumetric)" ElType=".C" rngLn="19">
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1554350844" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" ln="20" srcRngStartPos="8" srcRngEndPos="25" srcRngStartln="20" srcRngEndLn="20" desc="final int figure;" ElType="." rngLn="20" />
        <ElDesc lineHash="733119465" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" ln="21" srcRngStartPos="8" srcRngEndPos="34" srcRngStartln="21" srcRngEndLn="21" desc="if (round &amp;&amp; volumetric) {" ElType="!" rngLn="21">
          <Anns>
            <Ann msg="Condition evaluation: round (assuming true)" kind="condEval" />
            <Ann msg="Condition evaluation: volumetric (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: round &amp;&amp; volumetric (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2035781366" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" ln="23" srcRngStartPos="19" srcRngEndPos="39" srcRngStartln="23" srcRngEndLn="23" desc="round &amp;&amp; !volumetric" ElType=".P" rngLn="23">
          <Anns>
            <Ann msg="Condition evaluation: round (true)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;!round&quot; always evaluates to true" ln="25" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" ruleSAFMsg="Point where senseless condition is used" FirstElSrcRngEndPos="63" auth="mgorecka" FirstElSrcRngEndLn="19" rule="BD.PB.CC" FirstElSrcRngStartPos="16" lnHash="834780796" ruleSCSCMsg="Start of the path" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" rule.header="Avoid conditions that always evaluate to the same value" FirstElSrcRngStartln="19" locStartPos="19" analyzer="com.parasoft.jtest.flowanalyzer" id="1213110304" lang="java" violId="c1a36595-cfe1-3060-81cc-d70b90a60c09" locEndPos="25" urgent="true" prio="Not Defined" locEndLn="25" goals="1," locStartln="25" sev="2" locRef="18" tool="jtest" lineHash="834780796" unbViolId="0dfa5529-a001-3ae1-a7af-bd2045aa11a5" risk="Undefined" locType="sr" hash="1709312165" causeLocRef="18">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-917251182" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" ln="19" srcRngStartPos="16" srcRngEndPos="63" srcRngStartln="19" srcRngEndLn="19" desc="guessFigure(boolean round, boolean volumetric)" ElType=".C" rngLn="19">
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1554350844" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" ln="20" srcRngStartPos="8" srcRngEndPos="25" srcRngStartln="20" srcRngEndLn="20" desc="final int figure;" ElType="." rngLn="20" />
        <ElDesc lineHash="733119465" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" ln="21" srcRngStartPos="8" srcRngEndPos="34" srcRngStartln="21" srcRngEndLn="21" desc="if (round &amp;&amp; volumetric) {" ElType="!" rngLn="21">
          <Anns>
            <Ann msg="Condition evaluation: round (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: round &amp;&amp; volumetric (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2035781366" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" ln="23" srcRngStartPos="15" srcRngEndPos="42" srcRngStartln="23" srcRngEndLn="23" desc="if (round &amp;&amp; !volumetric) {" ElType="." rngLn="23">
          <Anns>
            <Ann msg="Condition evaluation: round (false)" kind="condEval" />
            <Ann msg="Condition evaluation: round &amp;&amp; !volumetric (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="834780796" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" ln="25" srcRngStartPos="19" srcRngEndPos="25" srcRngStartln="25" srcRngEndLn="25" desc="!round" ElType=".P" rngLn="25">
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="32" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="182383146" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1c40085c-4fd1-308f-943f-2724311aceee" locEndPos="50" prio="Not Defined" locEndLn="32" goals="0," locStartln="32" sev="3" locRef="18" tool="jtest" lineHash="182383146" unbViolId="b35c07ed-3fac-3125-b741-d5b0b7c1d57e" risk="Undefined" locType="sr" hash="1709312165" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="35" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="645970007" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0643711f-b430-39a0-a519-898b44235dad" locEndPos="53" prio="Not Defined" locEndLn="35" goals="0," locStartln="35" sev="3" locRef="18" tool="jtest" lineHash="645970007" unbViolId="57b59922-682a-3096-a820-c494da70523d" risk="Undefined" locType="sr" hash="1709312165" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="39" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="-55584185" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="cc086d5f-e5d5-3c2b-83b1-ddd570f27484" locEndPos="50" prio="Not Defined" locEndLn="39" goals="0," locStartln="39" sev="3" locRef="18" tool="jtest" lineHash="-55584185" unbViolId="ac1e143b-d6e4-3412-bb3c-235df9e33cc9" risk="Undefined" locType="sr" hash="1709312165" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="42" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="1995739522" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f61ef457-63bd-3f49-b08c-6f16e9cd572e" locEndPos="48" prio="Not Defined" locEndLn="42" goals="0," locStartln="42" sev="3" locRef="18" tool="jtest" lineHash="1995739522" unbViolId="34e0bc9c-e11e-3288-ac54-93776dc0f6f6" risk="Undefined" locType="sr" hash="1709312165" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="45" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="463322842" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1519a3cb-5cf3-3e09-a3c8-6dd6c7f113ef" locEndPos="50" prio="Not Defined" locEndLn="45" goals="0," locStartln="45" sev="3" locRef="18" tool="jtest" lineHash="463322842" unbViolId="774d65d7-5b00-3c8f-af94-a01f42a5b980" risk="Undefined" locType="sr" hash="1709312165" />
    <StdViol msg="The constant 'SPHERE' and the 4 constants that follow can possibly be refactored into an &quot;enum&quot; type" ln="50" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" auth="mgorecka" rule="CODSTA.POD.UET" lnHash="1158720817" pkg="examples.flowanalysis" rule.header="Use &quot;enum&quot; types instead of a series of &quot;static final&quot; constants" locStartPos="29" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="146d9584-1124-337f-8604-5f24532de192" locEndPos="35" prio="Not Defined" locEndLn="50" goals="0," locStartln="50" sev="3" locRef="18" tool="jtest" lineHash="1158720817" unbViolId="c9fa2781-c836-3bd9-895f-291796b9b006" risk="Undefined" locType="sr" hash="1709312165" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="3" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.flowanalysis" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="21d93d0c-1057-33a4-abea-82077cb3c15e" locEndPos="2" prio="Not Defined" locEndLn="3" goals="0," locStartln="3" sev="3" locRef="19" tool="jtest" lineHash="46511" unbViolId="b06f26bf-0e22-3752-a530-e2bd5eb1b2cc" risk="Undefined" locType="sr" hash="-635152949" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="9" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="-1312745056" pkg="examples.flowanalysis" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7111b86d-2840-3aa6-a00b-565e3d310246" locEndPos="6" prio="Not Defined" locEndLn="9" goals="0," locStartln="9" sev="3" locRef="19" tool="jtest" lineHash="-1312745056" unbViolId="c383e5c0-6a62-3d74-a977-5881233dbd73" risk="Undefined" locType="sr" hash="-635152949" />
    <StdViol msg="The parameter 'name' uses the same name as a field declared in an enclosing scope, which may cause confusion" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" auth="mgorecka" rule="OOP.HIF" lnHash="-1721703509" pkg="examples.flowanalysis" rule.header="Do not hide fields and local variables declared in enclosing scopes" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ffb4c32c-27d8-3396-8433-64da2d476ee2" locEndPos="24" prio="Not Defined" locEndLn="15" goals="0," locStartln="15" sev="3" locRef="19" tool="jtest" lineHash="-1721703509" unbViolId="275b5089-9ed3-3980-bf0b-510f8c5c374a" risk="Undefined" locType="sr" hash="-635152949" />
    <StdViol msg="The parameter 'password' uses the same name as a field declared in an enclosing scope, which may cause confusion" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" auth="mgorecka" rule="OOP.HIF" lnHash="-1721703509" pkg="examples.flowanalysis" rule.header="Do not hide fields and local variables declared in enclosing scopes" locStartPos="33" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ccfe0aca-f4d4-3422-9880-aff5140ddf21" locEndPos="41" prio="Not Defined" locEndLn="15" goals="0," locStartln="15" sev="3" locRef="19" tool="jtest" lineHash="-1721703509" unbViolId="ecab7253-7d8e-3fe2-8a16-e542b0b63e6f" risk="Undefined" locType="sr" hash="-635152949" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="26" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="-1032652275" pkg="examples.flowanalysis" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a3b00fc8-d766-3b5c-a229-7faf06327a8f" locEndPos="6" prio="Not Defined" locEndLn="26" goals="0," locStartln="26" sev="3" locRef="19" tool="jtest" lineHash="-1032652275" unbViolId="d0b516cd-1cf3-30e5-adf1-8f6043b267db" risk="Undefined" locType="sr" hash="-635152949" />
    <StdViol msg="Use 1 blank line before every declaration of the same kind (or corresponding Javadoc)" ln="35" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" auth="mgorecka" rule="FORMAT.U2BL" lnHash="-544919508" pkg="examples.flowanalysis" rule.header="Enforce number of blank line(s) between major sections" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="aee4f3b1-7e06-39f5-b92c-0fab53aab282" locEndPos="17" prio="Not Defined" locEndLn="35" goals="0," locStartln="35" sev="3" locRef="19" tool="jtest" lineHash="-544919508" unbViolId="fb8270ed-4c12-32fc-bc04-c56e56c5c7db" risk="Undefined" locType="sr" hash="-635152949" />
    <FlowViol msg="&quot;this.minLoginLength&quot; is used prior to explicit initialization" ln="40" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" ruleSAFMsg="Usage point" FirstElSrcRngEndPos="31" auth="mgorecka" FirstElSrcRngEndLn="28" rule="BD.PB.NOTINITCTOR" FirstElSrcRngStartPos="8" lnHash="-395689623" ruleSCSCMsg="Point of explicit initialization" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" rule.header="Avoid use of fields before initialization in constructors and static initializers" FirstElSrcRngStartln="28" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="899807045" lang="java" violId="4d79cad4-1030-3a1c-89a7-d7dc73942812" locEndPos="60" urgent="true" prio="Not Defined" locEndLn="40" goals="1," locStartln="40" sev="1" locRef="19" tool="jtest" lineHash="-395689623" unbViolId="bcf10b44-a8d1-3c9a-8c35-38e8e0a4e9ef" risk="Undefined" locType="sr" hash="-635152949" causeLocRef="19">
      <Props>
        <Prop key="Tracked variables" val="Not explicitly initialized value" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-749467591" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" ln="28" srcRngStartPos="8" srcRngEndPos="31" srcRngStartln="28" srcRngEndLn="28" desc="int minLoginLength = 7;" ElType="!" rngLn="28">
          <Props>
            <Prop key="Tracked variables" val="this.minLoginLength" />
          </Props>
          <Anns>
            <Ann msg="Not explicitly initialized value: this.minLoginLength" kind="var" />
            <Ann msg="Point of implicit initialization" kind="info" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1444358553" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" ln="31" srcRngStartPos="12" srcRngEndPos="34" srcRngStartln="31" srcRngEndLn="31" desc="super(name, password);" ElType="!" rngLn="31">
          <ElDescList>
            <ElDesc lineHash="32660008" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" ln="16" srcRngStartPos="12" srcRngEndPos="29" srcRngStartln="16" srcRngEndLn="16" desc="this.name = name;" ElType="." rngLn="16">
              <Props>
                <Prop key="Tracked variables" val="this.minLoginLength" />
              </Props>
              <Anns>
                <Ann msg="Not explicitly initialized value: this.minLoginLength" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="555503656" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" ln="17" srcRngStartPos="12" srcRngEndPos="37" srcRngStartln="17" srcRngEndLn="17" desc="this.password = password;" ElType="." rngLn="17" />
            <ElDesc lineHash="1197745480" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" ln="18" srcRngStartPos="12" srcRngEndPos="24" srcRngStartln="18" srcRngEndLn="18" desc="checkData();" ElType="!" rngLn="18">
              <ElDescList>
                <ElDesc lineHash="-395689623" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" ln="40" srcRngStartPos="12" srcRngEndPos="60" srcRngStartln="40" srcRngEndLn="40" desc="if (super.name.length() &lt; this.minLoginLength) {" ElType=".P" rngLn="40">
                  <Props>
                    <Prop key="Tracked variables" val="this.minLoginLength" />
                  </Props>
                  <Anns>
                    <Ann msg="Not explicitly initialized value: this.minLoginLength" kind="var" />
                    <Ann msg="Condition evaluation: (super.name.length() &lt; this.minLoginLength) (false)" kind="condEval" />
                    <Ann msg="Usage point" kind="point" />
                  </Anns>
                </ElDesc>
              </ElDescList>
            </ElDesc>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-749467591" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" ln="28" srcRngStartPos="8" srcRngEndPos="31" srcRngStartln="28" srcRngEndLn="28" desc="int minLoginLength = 7;" ElType=".C" rngLn="28">
          <Anns>
            <Ann msg="Point of explicit initialization" kind="cause" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;this.minLoginLength&quot; is used prior to explicit initialization" ln="40" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" ruleSAFMsg="Usage point" FirstElSrcRngEndPos="31" auth="mgorecka" FirstElSrcRngEndLn="28" rule="BD.PB.NOTEXPLINIT" FirstElSrcRngStartPos="8" lnHash="-395689623" ruleSCSCMsg="Source of implicitly initialized value" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" rule.header="Avoid use before explicit initialization" FirstElSrcRngStartln="28" locStartPos="16" analyzer="com.parasoft.jtest.flowanalyzer" id="-458188754" lang="java" violId="08ed491e-4424-39ad-93a3-1c09244fcb55" locEndPos="57" urgent="true" prio="Not Defined" locEndLn="40" goals="1," locStartln="40" sev="1" locRef="19" tool="jtest" lineHash="-395689623" unbViolId="4a261c6b-5be3-3211-b41d-56039f97991e" risk="Undefined" locType="sr" hash="-635152949" causeLocRef="19">
      <Props>
        <Prop key="Tracked variables" val="Not explicitly initialized value" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-749467591" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" ln="28" srcRngStartPos="8" srcRngEndPos="31" srcRngStartln="28" srcRngEndLn="28" desc="int minLoginLength = 7;" ElType=".C" rngLn="28">
          <Props>
            <Prop key="Tracked variables" val="this.minLoginLength" />
          </Props>
          <Anns>
            <Ann msg="Source of implicitly initialized value" kind="cause" />
            <Ann msg="Not explicitly initialized value: this.minLoginLength" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1444358553" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" ln="31" srcRngStartPos="12" srcRngEndPos="34" srcRngStartln="31" srcRngEndLn="31" desc="super(name, password);" ElType="!" rngLn="31">
          <ElDescList>
            <ElDesc lineHash="32660008" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" ln="16" srcRngStartPos="12" srcRngEndPos="29" srcRngStartln="16" srcRngEndLn="16" desc="this.name = name;" ElType="." rngLn="16">
              <Props>
                <Prop key="Tracked variables" val="this.minLoginLength" />
              </Props>
              <Anns>
                <Ann msg="Not explicitly initialized value: this.minLoginLength" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="555503656" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" ln="17" srcRngStartPos="12" srcRngEndPos="37" srcRngStartln="17" srcRngEndLn="17" desc="this.password = password;" ElType="." rngLn="17" />
            <ElDesc lineHash="1197745480" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" ln="18" srcRngStartPos="12" srcRngEndPos="24" srcRngStartln="18" srcRngEndLn="18" desc="checkData();" ElType="!" rngLn="18">
              <ElDescList>
                <ElDesc lineHash="-395689623" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" ln="40" srcRngStartPos="16" srcRngEndPos="57" srcRngStartln="40" srcRngEndLn="40" desc="super.name.length() &lt; this.minLoginLength" ElType=".P" rngLn="40">
                  <Props>
                    <Prop key="Tracked variables" val="this.minLoginLength" />
                  </Props>
                  <Anns>
                    <Ann msg="Not explicitly initialized value: this.minLoginLength" kind="var" />
                    <Ann msg="Usage point" kind="point" />
                  </Anns>
                </ElDesc>
              </ElDescList>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Avoid using unnecessary &quot;super&quot; expressions" ln="40" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" auth="mgorecka" rule="CODSTA.READ.UATS" lnHash="-395689623" pkg="examples.flowanalysis" rule.header="Avoid or enforce the use of &quot;this&quot; and &quot;super&quot; expressions" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c341a27b-5bbf-3419-bca7-fb8bc66ecd73" locEndPos="26" prio="Not Defined" locEndLn="40" goals="0," locStartln="40" sev="3" locRef="19" tool="jtest" lineHash="-395689623" unbViolId="f01973ab-ebe7-3c3f-9399-d79635087773" risk="Undefined" locType="sr" hash="-635152949" />
    <StdViol msg="Avoid using unnecessary &quot;this&quot; expressions" ln="40" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" auth="mgorecka" rule="CODSTA.READ.UATS" lnHash="-395689623" pkg="examples.flowanalysis" rule.header="Avoid or enforce the use of &quot;this&quot; and &quot;super&quot; expressions" locStartPos="38" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b3fc045d-d9f5-3f56-8bd7-7b0fdf98c2d2" locEndPos="42" prio="Not Defined" locEndLn="40" goals="0," locStartln="40" sev="3" locRef="19" tool="jtest" lineHash="-395689623" unbViolId="691d9319-3454-36ad-952e-5b6867c352da" risk="Undefined" locType="sr" hash="-635152949" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="8" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.flowanalysis" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="577e4dea-efa6-3e9b-88c2-a7e6a50974bd" locEndPos="2" prio="Not Defined" locEndLn="8" goals="0," locStartln="8" sev="3" locRef="20" tool="jtest" lineHash="46511" unbViolId="4f6b064a-4c87-3f79-8e02-e7e1dc0a752d" risk="Undefined" locType="sr" hash="2110246917" />
    <StdViol msg="Name of &quot;abstract&quot; class 'UseBeforeInitialization' does not match user-specified regular expression '^Abstract|Factory$'" ln="11" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" auth="mgorecka" rule="NAMING.NACL" lnHash="-2048090094" pkg="examples.flowanalysis" rule.header="Use a naming convention for &quot;abstract&quot; classes" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6d6e5bdd-ca8c-3f21-a2b8-87a74838156e" locEndPos="45" prio="Not Defined" locEndLn="11" goals="0," locStartln="11" sev="3" locRef="20" tool="jtest" lineHash="-2048090094" unbViolId="6610d314-c646-3992-9dff-1695ce2152e2" risk="Undefined" locType="sr" hash="2110246917" />
    <StdViol msg="The &quot;abstract&quot; class &quot;UseBeforeInitialization&quot; does not contain any &quot;abstract&quot; methods" ln="11" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" auth="mgorecka" rule="OOP.NAM" lnHash="-2048090094" pkg="examples.flowanalysis" rule.header="Avoid &quot;abstract&quot; classes without &quot;abstract&quot; methods" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5960d145-f0e5-3243-a668-af854cf71c98" locEndPos="45" prio="Not Defined" locEndLn="11" goals="0," locStartln="11" sev="3" locRef="20" tool="jtest" lineHash="-2048090094" unbViolId="2c28ab31-de3c-3a85-85fc-20c03a581b0e" risk="Undefined" locType="sr" hash="2110246917" />
    <StdViol msg="'@param sSourceName' doesn't match any parameter in 'process'" ln="14" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" auth="mgorecka" rule="JAVADOC.DPMT" lnHash="-2127173988" pkg="examples.flowanalysis" rule.header="Avoid unused Javadoc tags" locStartPos="7" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c04607ab-0019-3272-bd58-848800e9400e" locEndPos="13" prio="Not Defined" locEndLn="14" goals="0," locStartln="14" sev="3" locRef="20" tool="jtest" lineHash="-2127173988" unbViolId="b4abaa2b-3444-3a53-b43d-f3d12e1ddcdf" risk="Undefined" locType="sr" hash="2110246917" />
    <StdViol msg="This '@param' tag does not contain a meaningful description of the parameter" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" auth="mgorecka" rule="JAVADOC.MDJT" lnHash="1869012240" pkg="examples.flowanalysis" rule.header="Include a meaningful description in Javadoc tags" locStartPos="7" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9b86c196-9b17-3f62-a33b-d6746aedc4b0" locEndPos="19" prio="Not Defined" locEndLn="15" goals="0," locStartln="15" sev="3" locRef="20" tool="jtest" lineHash="1869012240" unbViolId="19145468-c810-35a2-9e8b-76ac424ad3f7" risk="Undefined" locType="sr" hash="2110246917" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="23" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="-1163022704" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a6cef78d-483c-37b3-9e2c-b85c6581f833" locEndPos="51" prio="Not Defined" locEndLn="23" goals="0," locStartln="23" sev="3" locRef="20" tool="jtest" lineHash="-1163022704" unbViolId="a41d75d3-dd36-32de-b18a-ad094cc993a5" risk="Undefined" locType="sr" hash="2110246917" />
    <StdViol msg="&quot;catch&quot; statement directly catches the general exception type 'Exception'" ln="33" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" auth="mgorecka" rule="CODSTA.EPC.NCE" lnHash="-1711883152" pkg="examples.flowanalysis" rule.header="Do not catch exception types which are too general or are unchecked exceptions" locStartPos="29" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b4d42252-b77f-334f-9254-006e05e3a9a0" locEndPos="38" prio="Not Defined" locEndLn="33" goals="0," locStartln="33" sev="3" locRef="20" tool="jtest" lineHash="-1711883152" unbViolId="a9035b54-e265-3e79-bb0e-f6143a5d2fe7" risk="Undefined" locType="sr" hash="2110246917" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="34" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="-1963747990" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="57de336a-1f17-3e9d-902e-afbfc6be6a6a" locEndPos="66" prio="Not Defined" locEndLn="34" goals="0," locStartln="34" sev="3" locRef="20" tool="jtest" lineHash="-1963747990" unbViolId="47386e76-0c04-3a7e-afd9-f61e9f33e7e0" risk="Undefined" locType="sr" hash="2110246917" />
    <FlowViol msg="&quot;storage.getValue()&quot; may possibly be null" ln="37" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ruleSAFMsg="Point where null value is appended to string" FirstElSrcRngEndPos="22" auth="mgorecka" FirstElSrcRngEndLn="57" rule="BD.PB.STRNULL" FirstElSrcRngStartPos="8" lnHash="-107142727" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" rule.header="Do not append null value to strings" FirstElSrcRngStartln="57" locStartPos="16" analyzer="com.parasoft.jtest.flowanalyzer" id="1982305292" lang="java" violId="f0db3def-ffe3-392a-8190-a69fdb52294b" locEndPos="55" urgent="true" prio="Not Defined" locEndLn="37" goals="1," locStartln="37" sev="1" locRef="20" tool="jtest" lineHash="-107142727" unbViolId="2c9e9e07-06c3-3b8e-9fe4-ab3a242fec58" risk="Undefined" locType="sr" hash="2110246917" causeLocRef="20">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="274607265" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ln="20" srcRngStartPos="8" srcRngEndPos="40" srcRngStartln="20" srcRngEndLn="20" desc="ObjectInputStream source = null;" ElType="." rngLn="20" />
        <ElDesc lineHash="1794515364" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ln="22" srcRngStartPos="12" srcRngEndPos="71" srcRngStartln="22" srcRngEndLn="22" desc="source = new ObjectInputStream(new FileInputStream(&quot;...&quot;));" ElType="." rngLn="22" />
        <ElDesc lineHash="-1163022704" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ln="23" srcRngStartPos="12" srcRngEndPos="52" srcRngStartln="23" srcRngEndLn="23" desc="System.out.println(&quot;Resolved objects:&quot;);" ElType="." rngLn="23" />
        <ElDesc lineHash="-895251233" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ln="24" srcRngStartPos="12" srcRngEndPos="45" srcRngStartln="24" srcRngEndLn="24" desc="Object obj = source.readObject();" ElType="." rngLn="24" />
        <ElDesc lineHash="-416744069" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ln="25" srcRngStartPos="12" srcRngEndPos="0" srcRngStartln="25" srcRngEndLn="26" desc="while (obj != null) {" ElType="." rngLn="25">
          <Anns>
            <Ann msg="Loop condition evaluation: (obj != null) (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1865899342" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ln="26" srcRngStartPos="39" srcRngEndPos="57" srcRngStartln="26" srcRngEndLn="26" desc="new ValueStorage()" ElType="!" rngLn="26">
          <ElDescList>
            <ElDesc lineHash="633669192" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ln="57" srcRngStartPos="8" srcRngEndPos="22" srcRngStartln="57" srcRngEndLn="57" desc="Object _value;" ElType=".C" rngLn="57">
              <Props>
                <Prop key="Tracked variables" val="this._value" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: this._value" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-1865899342" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ln="26" srcRngStartPos="16" srcRngEndPos="58" srcRngStartln="26" srcRngEndLn="26" desc="ValueStorage storage = new ValueStorage();" ElType="!" rngLn="26">
          <Props>
            <Prop key="Tracked variables" val="new ValueStorage()._value" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: new ValueStorage()._value" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1615636243" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ln="27" srcRngStartPos="16" srcRngEndPos="44" srcRngStartln="27" srcRngEndLn="27" desc="if (obj instanceof String) {" ElType="." rngLn="27">
          <Props>
            <Prop key="Tracked variables" val="storage._value" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: storage._value" kind="var" />
            <Ann msg="Condition evaluation: obj instanceof java.lang.String (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="570134625" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ln="31" srcRngStartPos="46" srcRngEndPos="65" srcRngStartln="31" srcRngEndLn="31" desc="source.readObject()" ElType="!E" rngLn="31" thrownTypes="IOException" throwingMethod="ObjectInputStream.readObject">
          <Anns>
            <Ann msg="ObjectInputStream.readObject() throws IOException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1711883152" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ln="33" srcRngStartPos="22" srcRngEndPos="42" srcRngStartln="33" srcRngEndLn="33" desc="catch (Exception e)" ElType="." rngLn="33" />
        <ElDesc lineHash="-1963747990" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ln="34" srcRngStartPos="24" srcRngEndPos="67" srcRngStartln="34" srcRngEndLn="34" desc="System.out.println(&quot;Cannot resolve value&quot;);" ElType="." rngLn="34" />
        <ElDesc lineHash="-107142727" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ln="37" srcRngStartPos="35" srcRngEndPos="53" srcRngStartln="37" srcRngEndLn="37" desc="storage.getValue()" ElType="!" rngLn="37">
          <ElDescList>
            <ElDesc lineHash="-869770471" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ln="60" srcRngStartPos="12" srcRngEndPos="26" srcRngStartln="60" srcRngEndLn="60" desc="return _value;" ElType="!" rngLn="60">
              <Props>
                <Prop key="Tracked variables" val="this._value" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: this._value" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-107142727" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ln="37" srcRngStartPos="16" srcRngEndPos="55" srcRngStartln="37" srcRngEndLn="37" desc="System.out.println(storage.getValue());" ElType=".P" rngLn="37">
          <Props>
            <Prop key="Tracked variables" val="storage.getValue()" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: storage.getValue()" kind="var" />
            <Ann msg="Point where null value is appended to string" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;storage.getValue()&quot; is used prior to explicit initialization" ln="37" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ruleSAFMsg="Usage point" FirstElSrcRngEndPos="22" auth="mgorecka" FirstElSrcRngEndLn="57" rule="BD.PB.NOTEXPLINIT" FirstElSrcRngStartPos="8" lnHash="-107142727" ruleSCSCMsg="Source of implicitly initialized value" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" rule.header="Avoid use before explicit initialization" FirstElSrcRngStartln="57" locStartPos="16" analyzer="com.parasoft.jtest.flowanalyzer" id="-1722702970" lang="java" violId="fc89c2d8-e391-3195-95e2-ba5edcf89251" locEndPos="55" urgent="true" prio="Not Defined" locEndLn="37" goals="1," locStartln="37" sev="1" locRef="20" tool="jtest" lineHash="-107142727" unbViolId="319f60ba-6e96-34fc-bcd7-bd3135d3e2cb" risk="Undefined" locType="sr" hash="2110246917" causeLocRef="20">
      <Props>
        <Prop key="Tracked variables" val="Not explicitly initialized value" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="274607265" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ln="20" srcRngStartPos="8" srcRngEndPos="40" srcRngStartln="20" srcRngEndLn="20" desc="ObjectInputStream source = null;" ElType="." rngLn="20" />
        <ElDesc lineHash="1794515364" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ln="22" srcRngStartPos="12" srcRngEndPos="71" srcRngStartln="22" srcRngEndLn="22" desc="source = new ObjectInputStream(new FileInputStream(&quot;...&quot;));" ElType="." rngLn="22" />
        <ElDesc lineHash="-1163022704" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ln="23" srcRngStartPos="12" srcRngEndPos="52" srcRngStartln="23" srcRngEndLn="23" desc="System.out.println(&quot;Resolved objects:&quot;);" ElType="." rngLn="23" />
        <ElDesc lineHash="-895251233" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ln="24" srcRngStartPos="12" srcRngEndPos="45" srcRngStartln="24" srcRngEndLn="24" desc="Object obj = source.readObject();" ElType="." rngLn="24" />
        <ElDesc lineHash="-416744069" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ln="25" srcRngStartPos="12" srcRngEndPos="0" srcRngStartln="25" srcRngEndLn="26" desc="while (obj != null) {" ElType="." rngLn="25">
          <Anns>
            <Ann msg="Loop condition evaluation: (obj != null) (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1865899342" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ln="26" srcRngStartPos="39" srcRngEndPos="57" srcRngStartln="26" srcRngEndLn="26" desc="new ValueStorage()" ElType="!" rngLn="26">
          <ElDescList>
            <ElDesc lineHash="633669192" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ln="57" srcRngStartPos="8" srcRngEndPos="22" srcRngStartln="57" srcRngEndLn="57" desc="Object _value;" ElType=".C" rngLn="57">
              <Props>
                <Prop key="Tracked variables" val="this._value" />
              </Props>
              <Anns>
                <Ann msg="Source of implicitly initialized value" kind="cause" />
                <Ann msg="Not explicitly initialized value: this._value" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-1865899342" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ln="26" srcRngStartPos="16" srcRngEndPos="58" srcRngStartln="26" srcRngEndLn="26" desc="ValueStorage storage = new ValueStorage();" ElType="!" rngLn="26">
          <Props>
            <Prop key="Tracked variables" val="new ValueStorage()._value" />
          </Props>
          <Anns>
            <Ann msg="Not explicitly initialized value: new ValueStorage()._value" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1615636243" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ln="27" srcRngStartPos="16" srcRngEndPos="44" srcRngStartln="27" srcRngEndLn="27" desc="if (obj instanceof String) {" ElType="." rngLn="27">
          <Props>
            <Prop key="Tracked variables" val="storage._value" />
          </Props>
          <Anns>
            <Ann msg="Not explicitly initialized value: storage._value" kind="var" />
            <Ann msg="Condition evaluation: obj instanceof java.lang.String (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="570134625" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ln="31" srcRngStartPos="46" srcRngEndPos="65" srcRngStartln="31" srcRngEndLn="31" desc="source.readObject()" ElType="!E" rngLn="31" thrownTypes="IOException" throwingMethod="ObjectInputStream.readObject">
          <Anns>
            <Ann msg="ObjectInputStream.readObject() throws IOException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1711883152" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ln="33" srcRngStartPos="22" srcRngEndPos="42" srcRngStartln="33" srcRngEndLn="33" desc="catch (Exception e)" ElType="." rngLn="33" />
        <ElDesc lineHash="-1963747990" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ln="34" srcRngStartPos="24" srcRngEndPos="67" srcRngStartln="34" srcRngEndLn="34" desc="System.out.println(&quot;Cannot resolve value&quot;);" ElType="." rngLn="34" />
        <ElDesc lineHash="-107142727" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ln="37" srcRngStartPos="35" srcRngEndPos="53" srcRngStartln="37" srcRngEndLn="37" desc="storage.getValue()" ElType="!" rngLn="37">
          <ElDescList>
            <ElDesc lineHash="-869770471" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ln="60" srcRngStartPos="12" srcRngEndPos="26" srcRngStartln="60" srcRngEndLn="60" desc="return _value;" ElType="!" rngLn="60">
              <Props>
                <Prop key="Tracked variables" val="this._value" />
              </Props>
              <Anns>
                <Ann msg="Not explicitly initialized value: this._value" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-107142727" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ln="37" srcRngStartPos="16" srcRngEndPos="55" srcRngStartln="37" srcRngEndLn="37" desc="System.out.println(storage.getValue());" ElType=".P" rngLn="37">
          <Props>
            <Prop key="Tracked variables" val="storage.getValue()" />
          </Props>
          <Anns>
            <Ann msg="Not explicitly initialized value: storage.getValue()" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="37" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="-107142727" pkg="examples.flowanalysis" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e4043180-d732-3f1b-bd90-5aa0d7c9cf8a" locEndPos="54" prio="Not Defined" locEndLn="37" goals="0," locStartln="37" sev="3" locRef="20" tool="jtest" lineHash="-107142727" unbViolId="dbc65cc9-d346-340d-94ba-aa4ff6643afe" risk="Undefined" locType="sr" hash="2110246917" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="55" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="1017003716" pkg="examples.flowanalysis" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d9298a60-8805-34bd-9d6a-fae309798c3f" locEndPos="6" prio="Not Defined" locEndLn="55" goals="0," locStartln="55" sev="3" locRef="20" tool="jtest" lineHash="1017003716" unbViolId="a8a656ba-8260-39e4-9807-a39f191bb369" risk="Undefined" locType="sr" hash="2110246917" />
    <StdViol msg="Missing Javadoc comment for 'ValueStorage'" ln="55" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" auth="mgorecka" rule="JAVADOC.PJDC" lnHash="1017003716" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for types" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0c869999-7310-3b24-908d-931ee1a04000" locEndPos="29" prio="Not Defined" locEndLn="55" goals="0," locStartln="55" sev="3" locRef="20" tool="jtest" lineHash="1017003716" unbViolId="522e5379-215a-392f-bd82-b8f309923aec" risk="Undefined" locType="sr" hash="2110246917" />
    <StdViol msg="Member class could be declared &quot;static&quot;: ValueStorage" ln="55" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" auth="mgorecka" rule="OPT.SI" lnHash="1017003716" pkg="examples.flowanalysis" rule.header="Declare member classes &quot;static&quot; if possible" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="a0853bb0-c7d5-3f9b-9fb7-425e81adffec" locEndPos="29" prio="Not Defined" locEndLn="55" goals="0," locStartln="55" sev="3" locRef="20" tool="jtest" lineHash="1017003716" unbViolId="92b8275b-2d52-36c9-a588-76b0d802405e" risk="Undefined" locType="sr" hash="2110246917" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="12" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="-829791636" pkg="examples.flowanalysis" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="91f9a5a6-e37d-387a-a22c-0c4fe3fd4db6" locEndPos="2" prio="Not Defined" locEndLn="12" goals="0," locStartln="12" sev="3" locRef="21" tool="jtest" lineHash="-829791636" unbViolId="7a5295c6-b1b8-368e-b8f8-c6ba5853588b" risk="Undefined" locType="sr" hash="565976681" />
    <StdViol msg="Missing Javadoc comment for 'WebApplication'" ln="12" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" auth="mgorecka" rule="JAVADOC.PJDC" lnHash="-829791636" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for types" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3836c9d5-33f7-33e7-92cb-c8621a54f391" locEndPos="27" prio="Not Defined" locEndLn="12" goals="0," locStartln="12" sev="3" locRef="21" tool="jtest" lineHash="-829791636" unbViolId="93459593-8085-3084-a094-b4d594a9c1d2" risk="Undefined" locType="sr" hash="565976681" />
    <StdViol msg="No serialVersionUID declared in class 'WebApplication'" ln="12" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" auth="mgorecka" rule="SERIAL.DUID" lnHash="-829791636" pkg="examples.flowanalysis" rule.header="Create a 'serialVersionUID' for all 'Serializable' classes" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="fb2c4451-012d-368f-a1b7-64499cc26056" locEndPos="27" prio="Not Defined" locEndLn="12" goals="0," locStartln="12" sev="3" locRef="21" tool="jtest" lineHash="-829791636" unbViolId="a37fab13-3851-3cbe-8012-2803bcb58d93" risk="Undefined" locType="sr" hash="565976681" />
    <StdViol msg="Parameter 'resp' dereferenced before being checked for null" ln="31" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" auth="mgorecka" rule="DBC.IPAN" lnHash="1058819641" pkg="examples.flowanalysis" rule.header="Include a '@pre != null' tag for each parameter that is dereferenced before being checked for null" locStartPos="39" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1eeb65b1-f7c1-3f3a-8bd3-f2fa9d0d4c10" locEndPos="43" prio="Not Defined" locEndLn="31" goals="0," locStartln="31" sev="3" locRef="21" tool="jtest" lineHash="1058819641" unbViolId="210cb46d-c8e8-3f01-aa30-b250e9fbd83e" risk="Undefined" locType="sr" hash="565976681" />
    <StdViol msg="Parameter 'req' dereferenced before being checked for null" ln="33" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" auth="mgorecka" rule="DBC.IPAN" lnHash="1314402360" pkg="examples.flowanalysis" rule.header="Include a '@pre != null' tag for each parameter that is dereferenced before being checked for null" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f9bcc98e-17b2-30e5-b7c4-d8d3f996fc20" locEndPos="30" prio="Not Defined" locEndLn="33" goals="0," locStartln="33" sev="3" locRef="21" tool="jtest" lineHash="1314402360" unbViolId="cea21c56-6ad4-3a02-8679-49fd45a4301c" risk="Undefined" locType="sr" hash="565976681" />
    <StdViol msg="Consider using a &quot;Context&quot; Object instead of calling 'getParameter()'" ln="33" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" auth="mgorecka" rule="SERVLET.UCO" lnHash="1314402360" pkg="examples.flowanalysis" rule.header="Use a Context Object to manage HTTP request parameters" locStartPos="31" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="bf4fa42b-c75c-3423-939c-4e017b714062" locEndPos="43" prio="Not Defined" locEndLn="33" goals="0," locStartln="33" sev="2" locRef="21" tool="jtest" lineHash="1314402360" unbViolId="db321de4-6a4c-3694-aea5-849b6412c3ab" risk="Undefined" locType="sr" hash="565976681" />
    <FlowViol msg="Injection of data received from servlet request (&quot;sUserName&quot;) to servlet response (possible XSS attack)" ln="35" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="56" auth="mgorecka" FirstElSrcRngEndLn="33" rule="BD.SECURITY.TDXSS" FirstElSrcRngStartPos="8" lnHash="126438163" ruleSCSCMsg="Tainting point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" rule.header="Protect against XSS vulnerabilities" FirstElSrcRngStartln="33" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="1184720619" lang="java" violId="d6abee7d-c872-3b30-a34c-a04495f01101" locEndPos="34" urgent="true" prio="Not Defined" locEndLn="35" goals="1," locStartln="35" sev="1" locRef="21" tool="jtest" lineHash="126438163" unbViolId="60feaeb4-f294-3313-9ccd-6c6f1a51d03e" risk="Undefined" locType="sr" hash="565976681" causeLocRef="21">
      <Props>
        <Prop key="Tracked variables" val="Tainted data" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1058819641" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="31" srcRngStartPos="8" srcRngEndPos="62" srcRngStartln="31" srcRngEndLn="31" desc="ServletOutputStream response = resp.getOutputStream();" ElType="." rngLn="31" />
        <ElDesc lineHash="-1384907763" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="32" srcRngStartPos="8" srcRngEndPos="28" srcRngStartln="32" srcRngEndLn="32" desc="addHeader(response);" ElType="." rngLn="32">
          <ElDescList>
            <ElDesc lineHash="1698089777" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="42" srcRngStartPos="8" srcRngEndPos="35" srcRngStartln="42" srcRngEndLn="42" desc="response.print(&quot;&lt;HTML>\n&quot;);" ElType="." rngLn="42" />
            <ElDesc lineHash="1293102263" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="43" srcRngStartPos="8" srcRngEndPos="72" srcRngStartln="43" srcRngEndLn="43" desc="response.print(&quot;&lt;HEAD>&lt;TITLE>Example webpage&lt;/TITLE>&lt;/HEAD>\n&quot;);" ElType="." rngLn="43" />
            <ElDesc lineHash="-823236632" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="44" srcRngStartPos="8" srcRngEndPos="35" srcRngStartln="44" srcRngEndLn="44" desc="response.print(&quot;&lt;BODY>\n&quot;);" ElType="." rngLn="44" />
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1314402360" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="33" srcRngStartPos="8" srcRngEndPos="56" srcRngStartln="33" srcRngEndLn="33" desc="String sUserName = req.getParameter(&quot;username&quot;);" ElType=".C" rngLn="33">
          <Props>
            <Prop key="Tracked variables" val="sUserName" />
          </Props>
          <Anns>
            <Ann msg="Tainting point" kind="cause" />
            <Ann msg="Tainted data: sUserName" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1982726760" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="34" srcRngStartPos="8" srcRngEndPos="36" srcRngStartln="34" srcRngEndLn="34" desc="response.print(&quot;Welcome, &quot;);" ElType="." rngLn="34" />
        <ElDesc lineHash="126438163" locType="sr" srcRnghash="565976681" locRef="21" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" ln="35" srcRngStartPos="8" srcRngEndPos="34" srcRngStartln="35" srcRngEndLn="35" desc="response.print(sUserName);" ElType=".P" rngLn="35">
          <Props>
            <Prop key="Tracked variables" val="sUserName" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: sUserName" kind="var" />
            <Ann msg="Call to a dangerous method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Non-portable newline character used: '\n'" ln="36" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" auth="mgorecka" rule="PORT.LNSP" lnHash="-1925900152" pkg="examples.flowanalysis" rule.header="Do not hard code '\n' or '\r' as a line separator" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="d3cee6a1-0d82-39e3-b7cd-fd3d8a3bfcab" locEndPos="27" prio="Not Defined" locEndLn="36" goals="0," locStartln="36" sev="3" locRef="21" tool="jtest" lineHash="-1925900152" unbViolId="e3de7b01-3b2e-30a4-83f4-43983d44c894" risk="Undefined" locType="sr" hash="565976681" />
    <StdViol msg="Non-portable newline character used: '\n'" ln="42" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" auth="mgorecka" rule="PORT.LNSP" lnHash="1698089777" pkg="examples.flowanalysis" rule.header="Do not hard code '\n' or '\r' as a line separator" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="8536656a-516a-3a9f-be37-62a6732b2c15" locEndPos="33" prio="Not Defined" locEndLn="42" goals="0," locStartln="42" sev="3" locRef="21" tool="jtest" lineHash="1698089777" unbViolId="ef080d5b-0d7a-37d9-9533-c9c958c42129" risk="Undefined" locType="sr" hash="565976681" />
    <StdViol msg="Non-portable newline character used: '\n'" ln="43" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" auth="mgorecka" rule="PORT.LNSP" lnHash="1293102263" pkg="examples.flowanalysis" rule.header="Do not hard code '\n' or '\r' as a line separator" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="9b2eb951-40ab-38eb-bc57-cf9a601053a6" locEndPos="70" prio="Not Defined" locEndLn="43" goals="0," locStartln="43" sev="3" locRef="21" tool="jtest" lineHash="1293102263" unbViolId="20468c79-6243-33ee-b4db-c9b82203d54e" risk="Undefined" locType="sr" hash="565976681" />
    <StdViol msg="Non-portable newline character used: '\n'" ln="44" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" auth="mgorecka" rule="PORT.LNSP" lnHash="-823236632" pkg="examples.flowanalysis" rule.header="Do not hard code '\n' or '\r' as a line separator" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="9c06ec89-baee-34d6-8b47-b474f6027cac" locEndPos="33" prio="Not Defined" locEndLn="44" goals="0," locStartln="44" sev="3" locRef="21" tool="jtest" lineHash="-823236632" unbViolId="e67f812e-3a36-3c4c-b0c5-82069f4e3066" risk="Undefined" locType="sr" hash="565976681" />
    <StdViol msg="Non-portable newline character used: '\n'" ln="48" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" auth="mgorecka" rule="PORT.LNSP" lnHash="-740405485" pkg="examples.flowanalysis" rule.header="Do not hard code '\n' or '\r' as a line separator" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="f21b29b2-eb91-3798-9a59-7c5d919d45c5" locEndPos="34" prio="Not Defined" locEndLn="48" goals="0," locStartln="48" sev="3" locRef="21" tool="jtest" lineHash="-740405485" unbViolId="d8f42a60-058e-3a12-9b47-5ce9e3c8503e" risk="Undefined" locType="sr" hash="565976681" />
    <StdViol msg="Non-portable newline character used: '\n'" ln="49" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" auth="mgorecka" rule="PORT.LNSP" lnHash="1780920924" pkg="examples.flowanalysis" rule.header="Do not hard code '\n' or '\r' as a line separator" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="9eacd1f2-5b24-3c17-8cc7-e3aef4b7dfab" locEndPos="34" prio="Not Defined" locEndLn="49" goals="0," locStartln="49" sev="3" locRef="21" tool="jtest" lineHash="1780920924" unbViolId="fdbe38a6-bd23-35e1-8c76-12a3af990f1a" risk="Undefined" locType="sr" hash="565976681" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="8" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="896184314" pkg="examples.flowanalysis" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="87edaae4-71a8-3b53-831a-9c08a3ce8f1a" locEndPos="2" prio="Not Defined" locEndLn="8" goals="0," locStartln="8" sev="3" locRef="22" tool="jtest" lineHash="896184314" unbViolId="1574efdb-88ec-3eda-9c7c-58a91908b1bb" risk="Undefined" locType="sr" hash="-367659159" />
    <StdViol msg="Missing Javadoc comment for 'XMLInjection'" ln="8" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" auth="mgorecka" rule="JAVADOC.PJDC" lnHash="896184314" pkg="examples.flowanalysis" rule.header="Provide Javadoc comments and descriptions for types" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4ed3687f-d574-3d46-99ba-83b07223a98d" locEndPos="25" prio="Not Defined" locEndLn="8" goals="0," locStartln="8" sev="3" locRef="22" tool="jtest" lineHash="896184314" unbViolId="fb06f085-45bb-3189-8001-de535d69f54f" risk="Undefined" locType="sr" hash="-367659159" />
    <StdViol msg="This '@param' tag does not contain a meaningful description of the parameter" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" auth="mgorecka" rule="JAVADOC.MDJT" lnHash="1278143352" pkg="examples.flowanalysis" rule.header="Include a meaningful description in Javadoc tags" locStartPos="7" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="76f76909-af31-3e73-b372-9b925a6107aa" locEndPos="22" prio="Not Defined" locEndLn="13" goals="0," locStartln="13" sev="3" locRef="22" tool="jtest" lineHash="1278143352" unbViolId="3e8b160a-69a0-3399-ba72-49babb889bc4" risk="Undefined" locType="sr" hash="-367659159" />
    <StdViol msg="This '@param' tag does not contain a meaningful description of the parameter" ln="14" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" auth="mgorecka" rule="JAVADOC.MDJT" lnHash="847208092" pkg="examples.flowanalysis" rule.header="Include a meaningful description in Javadoc tags" locStartPos="7" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="54a638f3-903f-353e-a123-73c8a3c208d4" locEndPos="21" prio="Not Defined" locEndLn="14" goals="0," locStartln="14" sev="3" locRef="22" tool="jtest" lineHash="847208092" unbViolId="db193011-9aae-3174-85cf-176a8093d59c" risk="Undefined" locType="sr" hash="-367659159" />
    <StdViol msg="This '@param' tag does not contain a meaningful description of the parameter" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" auth="mgorecka" rule="JAVADOC.MDJT" lnHash="-1876660276" pkg="examples.flowanalysis" rule.header="Include a meaningful description in Javadoc tags" locStartPos="7" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0e8630e9-e897-3e53-b28e-c3f6e215f97b" locEndPos="23" prio="Not Defined" locEndLn="15" goals="0," locStartln="15" sev="3" locRef="22" tool="jtest" lineHash="-1876660276" unbViolId="98fe85bc-05e4-3cb6-a297-6fa876fc3c9a" risk="Undefined" locType="sr" hash="-367659159" />
    <StdViol msg="This '@param' tag does not contain a meaningful description of the parameter" ln="16" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" auth="mgorecka" rule="JAVADOC.MDJT" lnHash="179077338" pkg="examples.flowanalysis" rule.header="Include a meaningful description in Javadoc tags" locStartPos="7" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="18aedde5-db30-335c-b97c-82f95156b316" locEndPos="23" prio="Not Defined" locEndLn="16" goals="0," locStartln="16" sev="3" locRef="22" tool="jtest" lineHash="179077338" unbViolId="dbdc47e5-d8a3-37ca-b893-4f36c91ec03a" risk="Undefined" locType="sr" hash="-367659159" />
    <StdViol msg="This '@param' tag does not contain a meaningful description of the parameter" ln="17" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" auth="mgorecka" rule="JAVADOC.MDJT" lnHash="1868512640" pkg="examples.flowanalysis" rule.header="Include a meaningful description in Javadoc tags" locStartPos="7" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5af1b1e1-26e5-3f8e-8c67-f03a033c4621" locEndPos="19" prio="Not Defined" locEndLn="17" goals="0," locStartln="17" sev="3" locRef="22" tool="jtest" lineHash="1868512640" unbViolId="45252958-6de7-3dea-b02c-bdcb48d63f97" risk="Undefined" locType="sr" hash="-367659159" />
    <FlowViol msg="Injection of data received by remote method (&quot;userAttrName&quot;) to XML attributes" ln="26" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="49" auth="mgorecka" FirstElSrcRngEndLn="22" rule="BD.SECURITY.TDXML" FirstElSrcRngStartPos="9" lnHash="1823710720" ruleSCSCMsg="Tainting point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" rule.header="Protect against XML data injection" FirstElSrcRngStartln="21" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="143371289" lang="java" violId="7cb0aebe-a97e-3cc5-969e-ad8cad192cf6" locEndPos="60" urgent="true" prio="Not Defined" locEndLn="26" goals="1," locStartln="26" sev="1" locRef="22" tool="jtest" lineHash="1823710720" unbViolId="8f0933cb-21c4-3c0d-83fc-a2d0b2a21528" risk="Undefined" locType="sr" hash="-367659159" causeLocRef="22">
      <Props>
        <Prop key="Tracked variables" val="Tainted data" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-1160252530" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="21" srcRngStartPos="9" srcRngEndPos="49" srcRngStartln="21" srcRngEndLn="22" desc="createXMLDocumentAndStoreData(Document document, String sUserId, String sUserName, String sDataType," ElType=".C" rngLn="21">
          <Props>
            <Prop key="Tracked variables" val="sUserId" />
          </Props>
          <Anns>
            <Ann msg="Tainting point" kind="cause" />
            <Ann msg="Tainted data: sUserId" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="579819957" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="25" srcRngStartPos="8" srcRngEndPos="47" srcRngStartln="25" srcRngEndLn="25" desc="String userAttrName = &quot;User&quot; + sUserId;" ElType="!" rngLn="25" />
        <ElDesc lineHash="1823710720" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="26" srcRngStartPos="8" srcRngEndPos="60" srcRngStartln="26" srcRngEndLn="26" desc="Element user = document.createElement(userAttrName);" ElType=".P" rngLn="26">
          <Props>
            <Prop key="Tracked variables" val="userAttrName" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: userAttrName" kind="var" />
            <Ann msg="Call to a dangerous method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Parameter 'document' dereferenced before being checked for null" ln="26" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" auth="mgorecka" rule="DBC.IPAN" lnHash="1823710720" pkg="examples.flowanalysis" rule.header="Include a '@pre != null' tag for each parameter that is dereferenced before being checked for null" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3a38bacd-934f-3663-b3e6-5e5c170f883f" locEndPos="31" prio="Not Defined" locEndLn="26" goals="0," locStartln="26" sev="3" locRef="22" tool="jtest" lineHash="1823710720" unbViolId="e8fa075a-ef26-3ae1-803e-d4f4828a2d22" risk="Undefined" locType="sr" hash="-367659159" />
    <FlowViol msg="Injection of data received by remote method (&quot;sUserName&quot;) to XML attributes" ln="27" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="49" auth="mgorecka" FirstElSrcRngEndLn="22" rule="BD.SECURITY.TDXML" FirstElSrcRngStartPos="9" lnHash="-114337401" ruleSCSCMsg="Tainting point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" rule.header="Protect against XML data injection" FirstElSrcRngStartln="21" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="981947357" lang="java" violId="5bd38131-d0ac-3730-b29b-1bbd6d96fae2" locEndPos="45" urgent="true" prio="Not Defined" locEndLn="27" goals="1," locStartln="27" sev="1" locRef="22" tool="jtest" lineHash="-114337401" unbViolId="625cd7b6-6f29-3eb7-92dc-824b51b7677d" risk="Undefined" locType="sr" hash="-367659159" causeLocRef="22">
      <Props>
        <Prop key="Tracked variables" val="Tainted data" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-1160252530" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="21" srcRngStartPos="9" srcRngEndPos="49" srcRngStartln="21" srcRngEndLn="22" desc="createXMLDocumentAndStoreData(Document document, String sUserId, String sUserName, String sDataType," ElType=".C" rngLn="21">
          <Props>
            <Prop key="Tracked variables" val="sUserName" />
          </Props>
          <Anns>
            <Ann msg="Tainting point" kind="cause" />
            <Ann msg="Tainted data: sUserName" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="579819957" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="25" srcRngStartPos="8" srcRngEndPos="47" srcRngStartln="25" srcRngEndLn="25" desc="String userAttrName = &quot;User&quot; + sUserId;" ElType="." rngLn="25" />
        <ElDesc lineHash="1823710720" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="26" srcRngStartPos="8" srcRngEndPos="60" srcRngStartln="26" srcRngEndLn="26" desc="Element user = document.createElement(userAttrName);" ElType="." rngLn="26" />
        <ElDesc lineHash="-114337401" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="27" srcRngStartPos="8" srcRngEndPos="45" srcRngStartln="27" srcRngEndLn="27" desc="user.setAttribute(&quot;name&quot;, sUserName);" ElType=".P" rngLn="27">
          <Props>
            <Prop key="Tracked variables" val="sUserName" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: sUserName" kind="var" />
            <Ann msg="Call to a dangerous method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Injection of data received by remote method (&quot;sDataType&quot;) to XML attributes" ln="28" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="49" auth="mgorecka" FirstElSrcRngEndLn="22" rule="BD.SECURITY.TDXML" FirstElSrcRngStartPos="9" lnHash="-1128345384" ruleSCSCMsg="Tainting point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" rule.header="Protect against XML data injection" FirstElSrcRngStartln="21" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="290474411" lang="java" violId="bf193e51-09ca-3ec7-954c-557f79f4b2e6" locEndPos="61" urgent="true" prio="Not Defined" locEndLn="28" goals="1," locStartln="28" sev="1" locRef="22" tool="jtest" lineHash="-1128345384" unbViolId="3ba8cb57-7f78-3de0-8949-0daada8e9986" risk="Undefined" locType="sr" hash="-367659159" causeLocRef="22">
      <Props>
        <Prop key="Tracked variables" val="Tainted data" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-1160252530" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="21" srcRngStartPos="9" srcRngEndPos="49" srcRngStartln="21" srcRngEndLn="22" desc="createXMLDocumentAndStoreData(Document document, String sUserId, String sUserName, String sDataType," ElType=".C" rngLn="21">
          <Props>
            <Prop key="Tracked variables" val="sDataType" />
          </Props>
          <Anns>
            <Ann msg="Tainting point" kind="cause" />
            <Ann msg="Tainted data: sDataType" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="579819957" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="25" srcRngStartPos="8" srcRngEndPos="47" srcRngStartln="25" srcRngEndLn="25" desc="String userAttrName = &quot;User&quot; + sUserId;" ElType="." rngLn="25" />
        <ElDesc lineHash="1823710720" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="26" srcRngStartPos="8" srcRngEndPos="60" srcRngStartln="26" srcRngEndLn="26" desc="Element user = document.createElement(userAttrName);" ElType="." rngLn="26" />
        <ElDesc lineHash="-114337401" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="27" srcRngStartPos="8" srcRngEndPos="45" srcRngStartln="27" srcRngEndLn="27" desc="user.setAttribute(&quot;name&quot;, sUserName);" ElType="." rngLn="27" />
        <ElDesc lineHash="-1128345384" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="28" srcRngStartPos="8" srcRngEndPos="61" srcRngStartln="28" srcRngEndLn="28" desc="Element userData = document.createElement(sDataType);" ElType=".P" rngLn="28">
          <Props>
            <Prop key="Tracked variables" val="sDataType" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: sDataType" kind="var" />
            <Ann msg="Call to a dangerous method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Injection of data received by remote method (&quot;sData&quot;) to XML attributes" ln="29" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="49" auth="mgorecka" FirstElSrcRngEndLn="22" rule="BD.SECURITY.TDXML" FirstElSrcRngStartPos="9" lnHash="917005069" ruleSCSCMsg="Tainting point" pkg="examples.flowanalysis" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" rule.header="Protect against XML data injection" FirstElSrcRngStartln="21" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="416880020" lang="java" violId="4531e0bb-d380-3060-8f37-7db21b96e8e9" locEndPos="37" urgent="true" prio="Not Defined" locEndLn="29" goals="1," locStartln="29" sev="1" locRef="22" tool="jtest" lineHash="917005069" unbViolId="18f7a4f7-cda9-3230-9c2e-b230b284b903" risk="Undefined" locType="sr" hash="-367659159" causeLocRef="22">
      <Props>
        <Prop key="Tracked variables" val="Tainted data" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-1160252530" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="21" srcRngStartPos="9" srcRngEndPos="49" srcRngStartln="21" srcRngEndLn="22" desc="createXMLDocumentAndStoreData(Document document, String sUserId, String sUserName, String sDataType," ElType=".C" rngLn="21">
          <Props>
            <Prop key="Tracked variables" val="sData" />
          </Props>
          <Anns>
            <Ann msg="Tainting point" kind="cause" />
            <Ann msg="Tainted data: sData" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="579819957" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="25" srcRngStartPos="8" srcRngEndPos="47" srcRngStartln="25" srcRngEndLn="25" desc="String userAttrName = &quot;User&quot; + sUserId;" ElType="." rngLn="25" />
        <ElDesc lineHash="1823710720" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="26" srcRngStartPos="8" srcRngEndPos="60" srcRngStartln="26" srcRngEndLn="26" desc="Element user = document.createElement(userAttrName);" ElType="." rngLn="26" />
        <ElDesc lineHash="-114337401" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="27" srcRngStartPos="8" srcRngEndPos="45" srcRngStartln="27" srcRngEndLn="27" desc="user.setAttribute(&quot;name&quot;, sUserName);" ElType="." rngLn="27" />
        <ElDesc lineHash="-1128345384" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="28" srcRngStartPos="8" srcRngEndPos="61" srcRngStartln="28" srcRngEndLn="28" desc="Element userData = document.createElement(sDataType);" ElType="." rngLn="28" />
        <ElDesc lineHash="917005069" locType="sr" srcRnghash="-367659159" locRef="22" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" ln="29" srcRngStartPos="8" srcRngEndPos="37" srcRngStartln="29" srcRngEndLn="29" desc="userData.setNodeValue(sData);" ElType=".P" rngLn="29">
          <Props>
            <Prop key="Tracked variables" val="sData" />
          </Props>
          <Anns>
            <Ann msg="Tainted data: sData" kind="var" />
            <Ann msg="Call to a dangerous method" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Use 2 blank lines before type declaration" ln="8" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.flowanalysis.np" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="df49b09b-cb09-3fa3-ab6f-e4c2d90e3469" locEndPos="2" prio="Not Defined" locEndLn="8" goals="0," locStartln="8" sev="3" locRef="23" tool="jtest" lineHash="46511" unbViolId="fc85e2d4-7ece-342b-a11f-0ae1acf6b4e8" risk="Undefined" locType="sr" hash="635578452" />
    <StdViol msg="Missing Javadoc comment for method 'getObjectFromDatabase()'" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-967427292" pkg="examples.flowanalysis.np" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="33" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="85fd3802-0aa2-337f-9a1f-c9df6c5886a1" locEndPos="54" prio="Not Defined" locEndLn="15" goals="0," locStartln="15" sev="3" locRef="23" tool="jtest" lineHash="-967427292" unbViolId="a4844ea8-e176-34c6-aa10-bab507a5f755" risk="Undefined" locType="sr" hash="635578452" />
    <StdViol msg="This String contains &quot;SELECT *&quot;, make sure it is not being used in a database query" ln="17" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" auth="mgorecka" rule="SECURITY.IBA.AUSS" lnHash="-1951810480" pkg="examples.flowanalysis.np" rule.header="Avoid using &quot;SELECT *&quot; in SQL queries" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="102d4fb4-7748-349e-92b7-66aabb67f4f4" locEndPos="40" prio="Not Defined" locEndLn="17" goals="0," locStartln="17" sev="1" locRef="23" tool="jtest" lineHash="-1951810480" unbViolId="8a7ded9d-c079-3be1-a8d4-92f3eda6ad18" risk="Undefined" locType="sr" hash="635578452" />
    <StdViol msg="Single character ''' using double quotes in string concatenation" ln="17" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" auth="mgorecka" rule="OPT.STR" lnHash="-1951810480" pkg="examples.flowanalysis.np" rule.header="Use single quotes instead of double quotes for single character string concatenation" locStartPos="72" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="bcefff5c-096c-36fa-9fe0-c6bdfab2c73e" locEndPos="75" prio="Not Defined" locEndLn="17" goals="0," locStartln="17" sev="3" locRef="23" tool="jtest" lineHash="-1951810480" unbViolId="e84170b2-c810-3f4f-bb7f-53bfeee67287" risk="Undefined" locType="sr" hash="635578452" />
    <StdViol msg="Variable 'sQuery' is not declared in this &quot;try&quot; block" ln="20" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" auth="mgorecka" rule="CODSTA.READ.DVCU" lnHash="1258828630" pkg="examples.flowanalysis.np" rule.header="Declare variables as close as possible to where they are used" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="894d04ad-7f2e-3d97-b266-dfced5cdffe6" locEndPos="11" prio="Not Defined" locEndLn="20" goals="0," locStartln="20" sev="4" locRef="23" tool="jtest" lineHash="1258828630" unbViolId="e4bae26b-5b0e-3b5a-908d-aeb0982a7d1e" risk="Undefined" locType="sr" hash="635578452" />
    <StdViol msg="Consider using 'prepareCall()' or 'prepareStatement()' to prevent SQL injection vulnerabilities" ln="21" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" auth="mgorecka" rule="SECURITY.IBA.UPS" lnHash="203786084" pkg="examples.flowanalysis.np" rule.header="Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'" locStartPos="33" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="79bfcb5d-6a98-30c4-8022-32f58d2d481d" locEndPos="48" prio="Not Defined" locEndLn="21" goals="0," locStartln="21" sev="1" locRef="23" tool="jtest" lineHash="203786084" unbViolId="fb0839b5-accc-3fad-93c9-fc1506ba3a45" risk="Undefined" locType="sr" hash="635578452" />
    <StdViol msg="Missing Javadoc comment for method 'getClassName()'" ln="36" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-2038152351" pkg="examples.flowanalysis.np" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="79ff9c19-15bd-31ee-a547-4b785e6dcafc" locEndPos="30" prio="Not Defined" locEndLn="36" goals="0," locStartln="36" sev="3" locRef="23" tool="jtest" lineHash="-2038152351" unbViolId="5dbba8be-9316-3c9f-b674-ea1fdde7d558" risk="Undefined" locType="sr" hash="635578452" />
    <StdViol msg="Avoid using unnecessary &quot;this&quot; expressions" ln="37" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" auth="mgorecka" rule="CODSTA.READ.UATS" lnHash="-1919500060" pkg="examples.flowanalysis.np" rule.header="Avoid or enforce the use of &quot;this&quot; and &quot;super&quot; expressions" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="919db336-bb3b-3656-a22b-893033d5e929" locEndPos="19" prio="Not Defined" locEndLn="37" goals="0," locStartln="37" sev="3" locRef="23" tool="jtest" lineHash="-1919500060" unbViolId="7f10f3e1-6836-3a0c-965a-8b6e003772d3" risk="Undefined" locType="sr" hash="635578452" />
    <StdViol msg="&quot;catch&quot; block has an empty body" ln="50" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" auth="mgorecka" rule="PB.TYPO.AECB" lnHash="100324464" pkg="examples.flowanalysis.np" rule.header="Avoid &quot;try&quot;, &quot;catch&quot; and &quot;finally&quot; blocks with empty bodies" locStartPos="10" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="22c4f327-3fe3-37cb-afa4-b32be7949fd1" locEndPos="15" prio="Not Defined" locEndLn="50" goals="0," locStartln="50" sev="3" locRef="23" tool="jtest" lineHash="100324464" unbViolId="13e05d7e-d0ca-3ec6-9a07-121327fbd367" risk="Undefined" locType="sr" hash="635578452" />
    <StdViol msg="&quot;catch&quot; statement directly catches the general exception type 'Exception'" ln="50" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" auth="mgorecka" rule="CODSTA.EPC.NCE" lnHash="100324464" pkg="examples.flowanalysis.np" rule.header="Do not catch exception types which are too general or are unchecked exceptions" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1f81a885-8f60-3330-ab08-3ff4d1f19dac" locEndPos="26" prio="Not Defined" locEndLn="50" goals="0," locStartln="50" sev="3" locRef="23" tool="jtest" lineHash="100324464" unbViolId="76a9b8e5-7638-3bdf-acff-9386fc5ab9dc" risk="Undefined" locType="sr" hash="635578452" />
    <StdViol msg="This block should contain a comment explaining why it is empty" ln="50" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" auth="mgorecka" rule="CODSTA.READ.CEB" lnHash="100324464" pkg="examples.flowanalysis.np" rule.header="Comment empty blocks" locStartPos="30" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="851515b4-8019-30ed-b018-f79d5ad0053d" locEndPos="31" prio="Not Defined" locEndLn="50" goals="0," locStartln="50" sev="3" locRef="23" tool="jtest" lineHash="100324464" unbViolId="7e5b7cb8-f72c-359b-901d-76bd8a9cfcec" risk="Undefined" locType="sr" hash="635578452" />
    <StdViol msg="&quot;catch&quot; block has an empty body" ln="60" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" auth="mgorecka" rule="PB.TYPO.AECB" lnHash="100324464" pkg="examples.flowanalysis.np" rule.header="Avoid &quot;try&quot;, &quot;catch&quot; and &quot;finally&quot; blocks with empty bodies" locStartPos="10" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="bc6becf1-9d64-32a0-9595-a5fdc58de709" locEndPos="15" prio="Not Defined" locEndLn="60" goals="0," locStartln="60" sev="3" locRef="23" tool="jtest" lineHash="100324464" unbViolId="716d81ca-9528-3f8e-af36-46b5949fe1c2" risk="Undefined" locType="sr" hash="635578452" />
    <StdViol msg="&quot;catch&quot; statement directly catches the general exception type 'Exception'" ln="60" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" auth="mgorecka" rule="CODSTA.EPC.NCE" lnHash="100324464" pkg="examples.flowanalysis.np" rule.header="Do not catch exception types which are too general or are unchecked exceptions" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f168bd8e-bb7d-3ca5-a71d-dc77abcaf2ab" locEndPos="26" prio="Not Defined" locEndLn="60" goals="0," locStartln="60" sev="3" locRef="23" tool="jtest" lineHash="100324464" unbViolId="f9e0ef6b-0d1f-3178-80fd-102a36b2c4f6" risk="Undefined" locType="sr" hash="635578452" />
    <StdViol msg="This block should contain a comment explaining why it is empty" ln="60" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" auth="mgorecka" rule="CODSTA.READ.CEB" lnHash="100324464" pkg="examples.flowanalysis.np" rule.header="Comment empty blocks" locStartPos="30" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ed71c5c3-37b8-30e8-a2c1-4d2b3ebe7b95" locEndPos="31" prio="Not Defined" locEndLn="60" goals="0," locStartln="60" sev="3" locRef="23" tool="jtest" lineHash="100324464" unbViolId="eeb99769-7a26-35d5-8d19-b6e57aee5021" risk="Undefined" locType="sr" hash="635578452" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="11" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.flowanalysis.np" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="db562888-17d3-3f41-adb3-8c6defbc8974" locEndPos="2" prio="Not Defined" locEndLn="11" goals="0," locStartln="11" sev="3" locRef="24" tool="jtest" lineHash="46511" unbViolId="271b5183-e56a-3167-9c1f-d8edf745547a" risk="Undefined" locType="sr" hash="1118499003" />
    <StdViol msg="Consider changing the raw type 'Map' to a parameterized type" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" auth="mgorecka" rule="CODSTA.POD.UPT" lnHash="74432546" pkg="examples.flowanalysis.np" rule.header="Enforce or avoid the use of parameterized types" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c03d6997-8a9c-3c34-845f-9c74de8b37d2" locEndPos="7" prio="Not Defined" locEndLn="18" goals="0," locStartln="18" sev="3" locRef="24" tool="jtest" lineHash="74432546" unbViolId="a1c8dce9-9417-3d7f-ad52-a04950772de4" risk="Undefined" locType="sr" hash="1118499003" />
    <StdViol msg="Initial container capacity is not specified" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" auth="mgorecka" rule="OPT.DIC" lnHash="74432546" pkg="examples.flowanalysis.np" rule.header="Define initial capacities for 'ArrayList', 'HashMap', 'HashSet', 'Hashtable', 'Vector' and 'WeakHashMap'" locStartPos="34" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="e2a18345-ebc8-3a8d-ae3f-99ddaeff5f51" locEndPos="41" prio="Not Defined" locEndLn="18" goals="0," locStartln="18" sev="3" locRef="24" tool="jtest" lineHash="74432546" unbViolId="39b7506a-e28f-34e1-ab6c-b3b4e32987c0" risk="Undefined" locType="sr" hash="1118499003" />
    <StdViol msg="You may not want to use the type 'FileReader' because it does not allow you to specify an encoding option" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" auth="mgorecka" rule="INTER.SEO" lnHash="-1664407388" pkg="examples.flowanalysis.np" rule.header="Avoid calling methods and constructors which do not allow you to specify a character encoding option" locStartPos="44" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a215eaf9-d157-3f79-913f-24bc14ccfacf" locEndPos="54" prio="Not Defined" locEndLn="24" goals="0," locStartln="24" sev="3" locRef="24" tool="jtest" lineHash="-1664407388" unbViolId="b0d69546-eaaf-3f60-aca1-0e291914017e" risk="Undefined" locType="sr" hash="1118499003" />
    <StdViol msg="&quot;catch&quot; statement directly catches the general exception type 'Exception'" ln="26" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" auth="mgorecka" rule="CODSTA.EPC.NCE" lnHash="100324464" pkg="examples.flowanalysis.np" rule.header="Do not catch exception types which are too general or are unchecked exceptions" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="acf25096-e756-3f58-a54e-042cee4b0dbb" locEndPos="26" prio="Not Defined" locEndLn="26" goals="0," locStartln="26" sev="3" locRef="24" tool="jtest" lineHash="100324464" unbViolId="0086386d-5ec9-318c-816f-9e29621eb382" risk="Undefined" locType="sr" hash="1118499003" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="27" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="-747252483" pkg="examples.flowanalysis.np" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ba0be028-cad1-3ed9-806f-a052d306b2fb" locEndPos="68" prio="Not Defined" locEndLn="27" goals="0," locStartln="27" sev="3" locRef="24" tool="jtest" lineHash="-747252483" unbViolId="82f41a63-7c95-3590-94fe-d3ce2accd5f6" risk="Undefined" locType="sr" hash="1118499003" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="27" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" auth="mgorecka" rule="SECURITY.ESD.PEO" lnHash="-747252483" pkg="examples.flowanalysis.np" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e9ddbbb3-c419-34e9-be9c-5ab441db4266" locEndPos="30" prio="Not Defined" locEndLn="27" goals="0," locStartln="27" sev="1" locRef="24" tool="jtest" lineHash="-747252483" unbViolId="8a86aff0-2779-334e-9d2f-4f5e1787c89e" risk="Undefined" locType="sr" hash="1118499003" />
    <StdViol msg="Unnecessary call to &quot;toString()&quot;" ln="27" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" auth="mgorecka" rule="CODSTA.READ.AUTS" lnHash="-747252483" pkg="examples.flowanalysis.np" rule.header="Avoid unnecessary calls to 'toString()'" locStartPos="57" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="03d76a05-00f3-3342-9fb1-d180c8f45dc3" locEndPos="65" prio="Not Defined" locEndLn="27" goals="0," locStartln="27" sev="3" locRef="24" tool="jtest" lineHash="-747252483" unbViolId="83d6ee28-ad7a-3497-8098-676d22ca98be" risk="Undefined" locType="sr" hash="1118499003" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="28" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="-1248760618" pkg="examples.flowanalysis.np" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="aa2ae6bb-4c04-3ef2-8a3c-11f2a16035d3" locEndPos="77" prio="Not Defined" locEndLn="28" goals="0," locStartln="28" sev="3" locRef="24" tool="jtest" lineHash="-1248760618" unbViolId="8a188fb0-39ae-35e4-b236-212f3dd0629d" risk="Undefined" locType="sr" hash="1118499003" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="28" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" auth="mgorecka" rule="SECURITY.ESD.PEO" lnHash="-1248760618" pkg="examples.flowanalysis.np" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="701f0dd2-dbcb-3833-8be9-bc5d5b3239c3" locEndPos="30" prio="Not Defined" locEndLn="28" goals="0," locStartln="28" sev="1" locRef="24" tool="jtest" lineHash="-1248760618" unbViolId="a210dc53-28e1-3edf-ac89-9f36982b77dd" risk="Undefined" locType="sr" hash="1118499003" />
    <StdViol msg="&quot;catch&quot; block has an empty body" ln="54" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" auth="mgorecka" rule="PB.TYPO.AECB" lnHash="100324464" pkg="examples.flowanalysis.np" rule.header="Avoid &quot;try&quot;, &quot;catch&quot; and &quot;finally&quot; blocks with empty bodies" locStartPos="10" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4487ab01-526c-3251-a318-add57e7d9a8b" locEndPos="15" prio="Not Defined" locEndLn="54" goals="0," locStartln="54" sev="3" locRef="24" tool="jtest" lineHash="100324464" unbViolId="16910286-1f35-35d9-8900-02eb3eb827c8" risk="Undefined" locType="sr" hash="1118499003" />
    <StdViol msg="&quot;catch&quot; statement directly catches the general exception type 'Exception'" ln="54" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" auth="mgorecka" rule="CODSTA.EPC.NCE" lnHash="100324464" pkg="examples.flowanalysis.np" rule.header="Do not catch exception types which are too general or are unchecked exceptions" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c081354b-318a-3feb-a730-876dea26319a" locEndPos="26" prio="Not Defined" locEndLn="54" goals="0," locStartln="54" sev="3" locRef="24" tool="jtest" lineHash="100324464" unbViolId="415ddbc4-6e83-3a49-8311-9b4f46f31878" risk="Undefined" locType="sr" hash="1118499003" />
    <StdViol msg="This block should contain a comment explaining why it is empty" ln="54" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" auth="mgorecka" rule="CODSTA.READ.CEB" lnHash="100324464" pkg="examples.flowanalysis.np" rule.header="Comment empty blocks" locStartPos="30" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8b16a095-322f-3486-aec2-87d22b11f046" locEndPos="31" prio="Not Defined" locEndLn="54" goals="0," locStartln="54" sev="3" locRef="24" tool="jtest" lineHash="100324464" unbViolId="dbb0f95d-52be-3c5d-923c-56bed85889b8" risk="Undefined" locType="sr" hash="1118499003" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="3" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MessageFormatter.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.flowanalysis.np" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0b71f765-6408-3db2-8bf0-04f4f84b9912" locEndPos="2" prio="Not Defined" locEndLn="3" goals="0," locStartln="3" sev="3" locRef="25" tool="jtest" lineHash="46511" unbViolId="6dfcb517-3b96-37ef-b498-f7919c90edfb" risk="Undefined" locType="sr" hash="796982299" />
    <StdViol msg="Missing Javadoc comment for method 'printMessage()'" ln="8" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MessageFormatter.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-170549514" pkg="examples.flowanalysis.np" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8ef48dfb-3315-3f04-8e7a-5a8557c3a4d7" locEndPos="35" prio="Not Defined" locEndLn="8" goals="0," locStartln="8" sev="3" locRef="25" tool="jtest" lineHash="-170549514" unbViolId="e91c09cb-860b-36bc-94e3-4bd1b9cc0d92" risk="Undefined" locType="sr" hash="796982299" />
    <StdViol msg="Missing Javadoc comment for method 'printMessage()'" ln="12" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MessageFormatter.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-1518746264" pkg="examples.flowanalysis.np" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="17c0c328-8289-3620-b296-a850d3b351c6" locEndPos="35" prio="Not Defined" locEndLn="12" goals="0," locStartln="12" sev="3" locRef="25" tool="jtest" lineHash="-1518746264" unbViolId="bd1de2ed-4c46-3bca-8173-bd65d9c0265d" risk="Undefined" locType="sr" hash="796982299" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MessageFormatter.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="-568163166" pkg="examples.flowanalysis.np" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="33a13c56-b9fb-37cc-bba5-ef4ddcf073fa" locEndPos="78" prio="Not Defined" locEndLn="13" goals="0," locStartln="13" sev="3" locRef="25" tool="jtest" lineHash="-568163166" unbViolId="10c57337-c8bf-38be-a52a-d87b96c89a9b" risk="Undefined" locType="sr" hash="796982299" />
    <FlowViol msg="&quot;oid&quot; may possibly be null" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MessageFormatter.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="22" auth="mgorecka" FirstElSrcRngEndLn="13" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="4" lnHash="-568163166" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis.np" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="13" locStartPos="27" analyzer="com.parasoft.jtest.flowanalyzer" id="50224895" lang="java" violId="9da3df27-9387-32b0-89b5-6f6003fa10c0" locEndPos="77" urgent="true" prio="Not Defined" locEndLn="13" goals="1," locStartln="13" sev="1" locRef="25" tool="jtest" lineHash="-568163166" unbViolId="c44d9a1c-0887-3a33-bf3a-4b93c395aa27" risk="Undefined" locType="sr" hash="796982299" causeLocRef="23">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-864216146" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="16" srcRngStartPos="29" srcRngEndPos="49" srcRngStartln="16" srcRngEndLn="16" desc="new DatabaseObject()" ElType="!" rngLn="16">
          <ElDescList>
            <ElDesc lineHash="1402874458" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="13" srcRngStartPos="4" srcRngEndPos="22" srcRngStartln="13" srcRngEndLn="13" desc="Object oid = null;" ElType=".C" rngLn="13">
              <Props>
                <Prop key="Tracked variables" val="this.oid" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: this.oid" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-864216146" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="16" srcRngStartPos="8" srcRngEndPos="50" srcRngStartln="16" srcRngEndLn="16" desc="DatabaseObject obj = new DatabaseObject();" ElType="!" rngLn="16">
          <Props>
            <Prop key="Tracked variables" val="new DatabaseObject().oid" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: new DatabaseObject().oid" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1951810480" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="17" srcRngStartPos="8" srcRngEndPos="76" srcRngStartln="17" srcRngEndLn="17" desc="String sQuery = &quot;SELECT * FROM &quot; + table + &quot; WHERE id='&quot; + id + &quot;'&quot;;" ElType="." rngLn="17">
          <Props>
            <Prop key="Tracked variables" val="obj.oid" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: obj.oid" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-271783734" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="18" srcRngStartPos="8" srcRngEndPos="30" srcRngStartln="18" srcRngEndLn="18" desc="Statement stmt = null;" ElType="." rngLn="18" />
        <ElDesc lineHash="920994605" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="19" srcRngStartPos="8" srcRngEndPos="28" srcRngStartln="19" srcRngEndLn="19" desc="ResultSet rs = null;" ElType="." rngLn="19" />
        <ElDesc lineHash="203786084" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="21" srcRngStartPos="12" srcRngEndPos="50" srcRngStartln="21" srcRngEndLn="21" desc="stmt = sqlConnection.createStatement()" ElType="!E" rngLn="21" thrownTypes="SQLException" throwingMethod="Connection.createStatement">
          <Anns>
            <Ann msg="Connection.createStatement() throws SQLException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1213180686" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="26" srcRngStartPos="10" srcRngEndPos="9" srcRngStartln="26" srcRngEndLn="28" desc="catch (SQLException sqle) {" ElType="." rngLn="26" />
        <ElDesc lineHash="1132095587" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="29" srcRngStartPos="12" srcRngEndPos="22" srcRngStartln="29" srcRngEndLn="29" desc="close(rs);" ElType="." rngLn="29">
          <ElDescList>
            <ElDesc lineHash="-1102065577" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="45" srcRngStartPos="8" srcRngEndPos="25" srcRngStartln="45" srcRngEndLn="45" desc="if (rs == null) {" ElType="." rngLn="45">
              <Anns>
                <Ann msg="Condition evaluation: (rs == null) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1196601077" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="46" srcRngStartPos="12" srcRngEndPos="19" srcRngStartln="46" srcRngEndLn="46" desc="return;" ElType="." rngLn="46" />
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1348767786" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="30" srcRngStartPos="12" srcRngEndPos="24" srcRngStartln="30" srcRngEndLn="30" desc="close(stmt);" ElType="." rngLn="30">
          <ElDescList>
            <ElDesc lineHash="1987037616" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="55" srcRngStartPos="8" srcRngEndPos="27" srcRngStartln="55" srcRngEndLn="55" desc="if (stmt == null) {" ElType="." rngLn="55">
              <Anns>
                <Ann msg="Condition evaluation: (stmt == null) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1196601077" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="56" srcRngStartPos="12" srcRngEndPos="19" srcRngStartln="56" srcRngEndLn="56" desc="return;" ElType="." rngLn="56" />
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1945770374" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="32" srcRngStartPos="8" srcRngEndPos="43" srcRngStartln="32" srcRngEndLn="32" desc="MessageFormatter.printMessage(obj);" ElType="!" rngLn="32">
          <ElDescList>
            <ElDesc lineHash="2011414693" locType="sr" srcRnghash="796982299" locRef="25" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MessageFormatter.java" ln="9" srcRngStartPos="21" srcRngEndPos="39" srcRngStartln="9" srcRngEndLn="9" desc="obj.getClassName()" ElType="." rngLn="9">
              <ElDescList>
                <ElDesc lineHash="-1919500060" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="37" srcRngStartPos="8" srcRngEndPos="41" srcRngStartln="37" srcRngEndLn="37" desc="return this.getClass().getName();" ElType="." rngLn="37">
                  <Props>
                    <Prop key="Tracked variables" val="this.oid" />
                  </Props>
                  <Anns>
                    <Ann msg="Null value carrier: this.oid" kind="var" />
                  </Anns>
                </ElDesc>
              </ElDescList>
              <Props>
                <Prop key="Tracked variables" val="obj.oid" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: obj.oid" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="2011414693" locType="sr" srcRnghash="796982299" locRef="25" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MessageFormatter.java" ln="9" srcRngStartPos="41" srcRngEndPos="53" srcRngStartln="9" srcRngEndLn="9" desc="obj.getOID()" ElType="!" rngLn="9">
              <ElDescList>
                <ElDesc lineHash="1890282657" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" ln="41" srcRngStartPos="8" srcRngEndPos="19" srcRngStartln="41" srcRngEndLn="41" desc="return oid;" ElType="!" rngLn="41">
                  <Props>
                    <Prop key="Tracked variables" val="this.oid" />
                  </Props>
                  <Anns>
                    <Ann msg="Null value carrier: this.oid" kind="var" />
                  </Anns>
                </ElDesc>
              </ElDescList>
            </ElDesc>
            <ElDesc lineHash="2011414693" locType="sr" srcRnghash="796982299" locRef="25" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MessageFormatter.java" ln="9" srcRngStartPos="8" srcRngEndPos="55" srcRngStartln="9" srcRngEndLn="9" desc="printMessage(obj.getClassName(), obj.getOID());" ElType="!" rngLn="9">
              <ElDescList>
                <ElDesc lineHash="-568163166" locType="sr" srcRnghash="796982299" locRef="25" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MessageFormatter.java" ln="13" srcRngStartPos="27" srcRngEndPos="77" srcRngStartln="13" srcRngEndLn="13" desc="&quot;[&quot; + className.toString() + &quot;] &quot; + oid.toString()" ElType=".P" rngLn="13">
                  <Props>
                    <Prop key="Tracked variables" val="oid" />
                  </Props>
                  <Anns>
                    <Ann msg="Null value carrier: oid" kind="var" />
                    <Ann msg="NullPointerException point" kind="point" />
                  </Anns>
                </ElDesc>
              </ElDescList>
              <Props>
                <Prop key="Tracked variables" val="obj.getOID()" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: obj.getOID()" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Single character '[' using double quotes in string concatenation" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MessageFormatter.java" auth="mgorecka" rule="OPT.STR" lnHash="-568163166" pkg="examples.flowanalysis.np" rule.header="Use single quotes instead of double quotes for single character string concatenation" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8d1f657f-7ff3-3d1c-a14f-d0a3e8001c13" locEndPos="30" prio="Not Defined" locEndLn="13" goals="0," locStartln="13" sev="3" locRef="25" tool="jtest" lineHash="-568163166" unbViolId="84e6b821-de2c-34d0-b74f-0d0c10cfc246" risk="Undefined" locType="sr" hash="796982299" />
    <StdViol msg="Unnecessary call to &quot;toString()&quot;" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MessageFormatter.java" auth="mgorecka" rule="CODSTA.READ.AUTS" lnHash="-568163166" pkg="examples.flowanalysis.np" rule.header="Avoid unnecessary calls to 'toString()'" locStartPos="43" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b02dcae6-71c8-343c-9677-1d57e5491b92" locEndPos="51" prio="Not Defined" locEndLn="13" goals="0," locStartln="13" sev="3" locRef="25" tool="jtest" lineHash="-568163166" unbViolId="08d044ff-8047-3b48-9d50-a9e29ba18dcf" risk="Undefined" locType="sr" hash="796982299" />
    <StdViol msg="Unnecessary call to &quot;toString()&quot;" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MessageFormatter.java" auth="mgorecka" rule="CODSTA.READ.AUTS" lnHash="-568163166" pkg="examples.flowanalysis.np" rule.header="Avoid unnecessary calls to 'toString()'" locStartPos="67" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ca75cdd8-6620-3a0e-9b68-2f9546b857dc" locEndPos="75" prio="Not Defined" locEndLn="13" goals="0," locStartln="13" sev="3" locRef="25" tool="jtest" lineHash="-568163166" unbViolId="06c94936-fe27-3adf-b605-32394bc9b54b" risk="Undefined" locType="sr" hash="796982299" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="6" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MyDictionary.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.flowanalysis.np" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a51b0445-da15-3c21-b93f-2718acbad57b" locEndPos="2" prio="Not Defined" locEndLn="6" goals="0," locStartln="6" sev="3" locRef="26" tool="jtest" lineHash="46511" unbViolId="692f3808-e1c2-3d54-b1df-fc4dac06ff87" risk="Undefined" locType="sr" hash="1067996598" />
    <StdViol msg="Initial container capacity is not specified" ln="11" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MyDictionary.java" auth="mgorecka" rule="OPT.DIC" lnHash="1424644925" pkg="examples.flowanalysis.np" rule.header="Define initial capacities for 'ArrayList', 'HashMap', 'HashSet', 'Hashtable', 'Vector' and 'WeakHashMap'" locStartPos="26" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="ffe5545e-c51d-37fc-aa93-7574e4d013de" locEndPos="35" prio="Not Defined" locEndLn="11" goals="0," locStartln="11" sev="3" locRef="26" tool="jtest" lineHash="1424644925" unbViolId="1007ec85-fd61-37d0-9133-3ac23dd9a792" risk="Undefined" locType="sr" hash="1067996598" />
    <StdViol msg="Missing Javadoc comment for method 'putToDictionary()'" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MyDictionary.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-877765179" pkg="examples.flowanalysis.np" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="15b3fdd8-b466-38d8-b9bf-b81ea20b72a0" locEndPos="31" prio="Not Defined" locEndLn="13" goals="0," locStartln="13" sev="3" locRef="26" tool="jtest" lineHash="-877765179" unbViolId="f50979a9-28cf-3274-aaaa-b98d7e42554c" risk="Undefined" locType="sr" hash="1067996598" />
    <FlowViol msg="&quot;strKey&quot; may possibly be null" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MyDictionary.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="29" auth="mgorecka" FirstElSrcRngEndLn="14" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="-1504762512" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis.np" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MyDictionary.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="14" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="-1727847030" lang="java" violId="90dc4df2-1552-3060-94dd-a7b5f7811dbf" locEndPos="32" urgent="true" prio="Not Defined" locEndLn="18" goals="1," locStartln="18" sev="1" locRef="26" tool="jtest" lineHash="-1504762512" unbViolId="142d99ca-5af2-3735-bfbe-cf2263adc1ff" risk="Undefined" locType="sr" hash="1067996598" causeLocRef="26">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-1935852018" locType="sr" srcRnghash="1067996598" locRef="26" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MyDictionary.java" ln="14" srcRngStartPos="8" srcRngEndPos="29" srcRngStartln="14" srcRngEndLn="14" desc="String strKey = null;" ElType=".C" rngLn="14">
          <Props>
            <Prop key="Tracked variables" val="strKey" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: strKey" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1183172741" locType="sr" srcRnghash="1067996598" locRef="26" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MyDictionary.java" ln="15" srcRngStartPos="8" srcRngEndPos="36" srcRngStartln="15" srcRngEndLn="15" desc="if (key instanceof String) {" ElType="." rngLn="15">
          <Anns>
            <Ann msg="Condition evaluation: key instanceof java.lang.String (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1504762512" locType="sr" srcRnghash="1067996598" locRef="26" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MyDictionary.java" ln="18" srcRngStartPos="8" srcRngEndPos="32" srcRngStartln="18" srcRngEndLn="18" desc="dict.put(strKey, value);" ElType=".P" rngLn="18">
          <Props>
            <Prop key="Tracked variables" val="strKey" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: strKey" kind="var" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Missing Javadoc comment for method 'getFromDictionary()'" ln="21" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MyDictionary.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="802194492" pkg="examples.flowanalysis.np" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ad079076-7b02-3830-94a1-79142faf1c9f" locEndPos="35" prio="Not Defined" locEndLn="21" goals="0," locStartln="21" sev="3" locRef="26" tool="jtest" lineHash="802194492" unbViolId="8957e318-6050-3e79-8389-dbb70a33be5f" risk="Undefined" locType="sr" hash="1067996598" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="7" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="-673999726" pkg="examples.flowanalysis.np" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="46a7bb90-3b6c-303c-99e1-29aa58a471bd" locEndPos="2" prio="Not Defined" locEndLn="7" goals="0," locStartln="7" sev="3" locRef="27" tool="jtest" lineHash="-673999726" unbViolId="922f84f0-5140-3198-810b-15e2f638d16e" risk="Undefined" locType="sr" hash="-51902665" />
    <StdViol msg="Missing Javadoc comment for 'NullPointer'" ln="7" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" auth="mgorecka" rule="JAVADOC.PJDC" lnHash="-673999726" pkg="examples.flowanalysis.np" rule.header="Provide Javadoc comments and descriptions for types" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9f86a1ab-4bf8-3871-8ea1-9b274a49f7a7" locEndPos="24" prio="Not Defined" locEndLn="7" goals="0," locStartln="7" sev="3" locRef="27" tool="jtest" lineHash="-673999726" unbViolId="bef80ca4-98c8-3ee2-afaa-1f1e728d6cc6" risk="Undefined" locType="sr" hash="-51902665" />
    <StdViol msg="You may not want to use the type 'FileReader' because it does not allow you to specify an encoding option" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" auth="mgorecka" rule="INTER.SEO" lnHash="-1664407388" pkg="examples.flowanalysis.np" rule.header="Avoid calling methods and constructors which do not allow you to specify a character encoding option" locStartPos="44" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="309d97a6-c156-3d92-8d7a-f85327289bbe" locEndPos="54" prio="Not Defined" locEndLn="15" goals="0," locStartln="15" sev="3" locRef="27" tool="jtest" lineHash="-1664407388" unbViolId="e32de030-758e-398c-a57b-9c40fec1950a" risk="Undefined" locType="sr" hash="-51902665" />
    <StdViol msg="&quot;catch&quot; statement directly catches the general exception type 'Exception'" ln="17" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" auth="mgorecka" rule="CODSTA.EPC.NCE" lnHash="100324464" pkg="examples.flowanalysis.np" rule.header="Do not catch exception types which are too general or are unchecked exceptions" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b2def99a-3a8d-3337-8c21-3648d7835ce6" locEndPos="26" prio="Not Defined" locEndLn="17" goals="0," locStartln="17" sev="3" locRef="27" tool="jtest" lineHash="100324464" unbViolId="43fcd713-0ba3-38b2-b38e-92bdda894719" risk="Undefined" locType="sr" hash="-51902665" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="-747252483" pkg="examples.flowanalysis.np" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c525fbac-cfaa-3228-b8a9-76c86d4ebaf6" locEndPos="68" prio="Not Defined" locEndLn="18" goals="0," locStartln="18" sev="3" locRef="27" tool="jtest" lineHash="-747252483" unbViolId="819b3af1-59ab-304f-908c-ad905c801a69" risk="Undefined" locType="sr" hash="-51902665" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" auth="mgorecka" rule="SECURITY.ESD.PEO" lnHash="-747252483" pkg="examples.flowanalysis.np" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c30c5c60-1b78-3bcd-ad8a-01bd85fae885" locEndPos="30" prio="Not Defined" locEndLn="18" goals="0," locStartln="18" sev="1" locRef="27" tool="jtest" lineHash="-747252483" unbViolId="7a8b30a1-b4f5-336a-8b82-e4a26717f8dd" risk="Undefined" locType="sr" hash="-51902665" />
    <StdViol msg="Unnecessary call to &quot;toString()&quot;" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" auth="mgorecka" rule="CODSTA.READ.AUTS" lnHash="-747252483" pkg="examples.flowanalysis.np" rule.header="Avoid unnecessary calls to 'toString()'" locStartPos="57" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="cfaad72b-2035-3fe4-bbb2-9e795b0e8ead" locEndPos="65" prio="Not Defined" locEndLn="18" goals="0," locStartln="18" sev="3" locRef="27" tool="jtest" lineHash="-747252483" unbViolId="69f96e7d-7756-37dc-beba-a2c6336a6445" risk="Undefined" locType="sr" hash="-51902665" />
    <FlowViol msg="&quot;sFirstLine&quot; may possibly be null" ln="22" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="33" auth="mgorecka" FirstElSrcRngEndLn="12" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="-1543564921" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis.np" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="12" locStartPos="15" analyzer="com.parasoft.jtest.flowanalyzer" id="-905475100" lang="java" violId="127939be-13a7-3961-af7a-35189166651a" locEndPos="34" urgent="true" prio="Not Defined" locEndLn="22" goals="1," locStartln="22" sev="1" locRef="27" tool="jtest" lineHash="-1543564921" unbViolId="04bf248a-7fa3-3b92-9946-116340efd45d" risk="Undefined" locType="sr" hash="-51902665" causeLocRef="27">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-989328207" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ln="12" srcRngStartPos="8" srcRngEndPos="33" srcRngStartln="12" srcRngEndLn="12" desc="String sFirstLine = null;" ElType=".C" rngLn="12">
          <Props>
            <Prop key="Tracked variables" val="sFirstLine" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: sFirstLine" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="191709394" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ln="13" srcRngStartPos="8" srcRngEndPos="37" srcRngStartln="13" srcRngEndLn="13" desc="BufferedReader reader = null;" ElType="." rngLn="13" />
        <ElDesc lineHash="-1664407388" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ln="15" srcRngStartPos="40" srcRngEndPos="65" srcRngStartln="15" srcRngEndLn="15" desc="new FileReader(sFileName)" ElType="!E" rngLn="15" thrownTypes="FileNotFoundException" throwingMethod="FileReader.FileReader">
          <Anns>
            <Ann msg="FileReader.FileReader() throws FileNotFoundException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="100324464" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ln="17" srcRngStartPos="10" srcRngEndPos="30" srcRngStartln="17" srcRngEndLn="17" desc="catch (Exception e)" ElType="." rngLn="17" />
        <ElDesc lineHash="-747252483" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ln="18" srcRngStartPos="12" srcRngEndPos="69" srcRngStartln="18" srcRngEndLn="18" desc="System.out.println(&quot;Exception occured. &quot; + e.toString());" ElType="." rngLn="18" />
        <ElDesc lineHash="853738085" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ln="20" srcRngStartPos="12" srcRngEndPos="26" srcRngStartln="20" srcRngEndLn="20" desc="close(reader);" ElType="." rngLn="20">
          <ElDescList>
            <ElDesc lineHash="-2039937235" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ln="27" srcRngStartPos="12" srcRngEndPos="27" srcRngStartln="27" srcRngEndLn="27" desc="reader.close();" ElType="." rngLn="27" />
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-1543564921" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ln="22" srcRngStartPos="15" srcRngEndPos="34" srcRngStartln="22" srcRngEndLn="22" desc="sFirstLine.length()" ElType=".P" rngLn="22">
          <Props>
            <Prop key="Tracked variables" val="sFirstLine" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: sFirstLine" kind="var" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;reader&quot; may possibly be null" ln="27" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="37" auth="mgorecka" FirstElSrcRngEndLn="13" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="-2039937235" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis.np" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="13" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="1268810782" lang="java" violId="63215e05-f086-3050-a77e-c08a1944776f" locEndPos="27" urgent="true" prio="Not Defined" locEndLn="27" goals="1," locStartln="27" sev="1" locRef="27" tool="jtest" lineHash="-2039937235" unbViolId="17d406b5-64c4-3699-8d31-951aaea64e36" risk="Undefined" locType="sr" hash="-51902665" causeLocRef="27">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-989328207" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ln="12" srcRngStartPos="8" srcRngEndPos="33" srcRngStartln="12" srcRngEndLn="12" desc="String sFirstLine = null;" ElType="." rngLn="12" />
        <ElDesc lineHash="191709394" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ln="13" srcRngStartPos="8" srcRngEndPos="37" srcRngStartln="13" srcRngEndLn="13" desc="BufferedReader reader = null;" ElType=".C" rngLn="13">
          <Props>
            <Prop key="Tracked variables" val="reader" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: reader" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1664407388" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ln="15" srcRngStartPos="40" srcRngEndPos="65" srcRngStartln="15" srcRngEndLn="15" desc="new FileReader(sFileName)" ElType="!E" rngLn="15" thrownTypes="FileNotFoundException" throwingMethod="FileReader.FileReader">
          <Anns>
            <Ann msg="FileReader.FileReader() throws FileNotFoundException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="100324464" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ln="17" srcRngStartPos="10" srcRngEndPos="30" srcRngStartln="17" srcRngEndLn="17" desc="catch (Exception e)" ElType="." rngLn="17" />
        <ElDesc lineHash="-747252483" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ln="18" srcRngStartPos="12" srcRngEndPos="69" srcRngStartln="18" srcRngEndLn="18" desc="System.out.println(&quot;Exception occured. &quot; + e.toString());" ElType="." rngLn="18" />
        <ElDesc lineHash="853738085" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ln="20" srcRngStartPos="12" srcRngEndPos="26" srcRngStartln="20" srcRngEndLn="20" desc="close(reader);" ElType="!" rngLn="20">
          <ElDescList>
            <ElDesc lineHash="-2039937235" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ln="27" srcRngStartPos="12" srcRngEndPos="27" srcRngStartln="27" srcRngEndLn="27" desc="reader.close();" ElType=".P" rngLn="27">
              <Props>
                <Prop key="Tracked variables" val="reader" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: reader" kind="var" />
                <Ann msg="NullPointerException point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="&quot;catch&quot; block has an empty body" ln="28" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" auth="mgorecka" rule="PB.TYPO.AECB" lnHash="100324464" pkg="examples.flowanalysis.np" rule.header="Avoid &quot;try&quot;, &quot;catch&quot; and &quot;finally&quot; blocks with empty bodies" locStartPos="10" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ec3373db-47c8-3315-ac36-9c0f072bc294" locEndPos="15" prio="Not Defined" locEndLn="28" goals="0," locStartln="28" sev="3" locRef="27" tool="jtest" lineHash="100324464" unbViolId="5807afd2-64ea-3241-9fe2-898c3889defe" risk="Undefined" locType="sr" hash="-51902665" />
    <StdViol msg="&quot;catch&quot; statement directly catches the general exception type 'Exception'" ln="28" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" auth="mgorecka" rule="CODSTA.EPC.NCE" lnHash="100324464" pkg="examples.flowanalysis.np" rule.header="Do not catch exception types which are too general or are unchecked exceptions" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="721ea74f-fa3d-3ddc-b6b6-1451d7cb8b83" locEndPos="26" prio="Not Defined" locEndLn="28" goals="0," locStartln="28" sev="3" locRef="27" tool="jtest" lineHash="100324464" unbViolId="09bf28d0-875e-38a6-89db-53847b4846ce" risk="Undefined" locType="sr" hash="-51902665" />
    <StdViol msg="This block should contain a comment explaining why it is empty" ln="28" locFile="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" auth="mgorecka" rule="CODSTA.READ.CEB" lnHash="100324464" pkg="examples.flowanalysis.np" rule.header="Comment empty blocks" locStartPos="30" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="639f7ad6-a0b5-3fa1-ade5-b9a27c53097f" locEndPos="31" prio="Not Defined" locEndLn="28" goals="0," locStartln="28" sev="3" locRef="27" tool="jtest" lineHash="100324464" unbViolId="1b2c2c3e-2c3d-3184-a359-283dda7aeef4" risk="Undefined" locType="sr" hash="-51902665" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="9" locFile="/com.parasoft:demo/src/main/java/examples/junit/ChoosingConstructor.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.junit" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="679ef46c-d989-3e8b-a1be-55fd1fc0fb45" locEndPos="2" prio="Not Defined" locEndLn="9" goals="0," locStartln="9" sev="3" locRef="28" tool="jtest" lineHash="46511" unbViolId="fb4f44cf-4e76-355c-ac49-7594a8b2b9a0" risk="Undefined" locType="sr" hash="13842231" />
    <StdViol msg="Missing Javadoc comment for method 'ChoosingConstructor()'" ln="21" locFile="/com.parasoft:demo/src/main/java/examples/junit/ChoosingConstructor.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-1548968053" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="11" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="bac0c5fb-8ee1-320f-ab17-c25766575b2e" locEndPos="30" prio="Not Defined" locEndLn="21" goals="0," locStartln="21" sev="3" locRef="28" tool="jtest" lineHash="-1548968053" unbViolId="f63cc0b5-62b0-3f48-9cee-0120268592aa" risk="Undefined" locType="sr" hash="13842231" />
    <StdViol msg="This block should contain a comment explaining why it is empty" ln="21" locFile="/com.parasoft:demo/src/main/java/examples/junit/ChoosingConstructor.java" auth="mgorecka" rule="CODSTA.READ.CEB" lnHash="-1548968053" pkg="examples.junit" rule.header="Comment empty blocks" locStartPos="33" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9f492749-e702-3ec3-909c-719a23f48cd9" locEndPos="34" prio="Not Defined" locEndLn="21" goals="0," locStartln="21" sev="3" locRef="28" tool="jtest" lineHash="-1548968053" unbViolId="7213c2ce-0eef-39f0-86ef-779cb4bc7c22" risk="Undefined" locType="sr" hash="13842231" />
    <StdViol msg="Missing Javadoc comment for method 'ChoosingConstructor()'" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/junit/ChoosingConstructor.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="1961108957" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="11" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a89b8885-5098-355d-8298-a76d54ccb832" locEndPos="30" prio="Not Defined" locEndLn="24" goals="0," locStartln="24" sev="3" locRef="28" tool="jtest" lineHash="1961108957" unbViolId="5b4719ec-4682-34d0-9088-c8ecd7a80f29" risk="Undefined" locType="sr" hash="13842231" />
    <StdViol msg="Missing Javadoc comment for method 'ChoosingConstructor()'" ln="28" locFile="/com.parasoft:demo/src/main/java/examples/junit/ChoosingConstructor.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="1770965904" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="11" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="eb1d7a53-ba6a-38b0-a285-382d0b3b54e5" locEndPos="30" prio="Not Defined" locEndLn="28" goals="0," locStartln="28" sev="3" locRef="28" tool="jtest" lineHash="1770965904" unbViolId="80eb6630-13b7-3995-8ff4-2162fa000bbc" risk="Undefined" locType="sr" hash="13842231" />
    <StdViol msg="Missing Javadoc comment for method 'ChoosingConstructor()'" ln="32" locFile="/com.parasoft:demo/src/main/java/examples/junit/ChoosingConstructor.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="1926143708" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="11" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f4169526-64c9-3ca1-b750-216e4f2699c9" locEndPos="30" prio="Not Defined" locEndLn="32" goals="0," locStartln="32" sev="3" locRef="28" tool="jtest" lineHash="1926143708" unbViolId="f4f57073-295f-3047-a119-44e1123ee016" risk="Undefined" locType="sr" hash="13842231" />
    <StdViol msg="Missing Javadoc comment for method 'ChoosingConstructor()'" ln="36" locFile="/com.parasoft:demo/src/main/java/examples/junit/ChoosingConstructor.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="320180299" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="11" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2632f9da-6e03-3a2a-a0ae-11e357638b89" locEndPos="30" prio="Not Defined" locEndLn="36" goals="0," locStartln="36" sev="3" locRef="28" tool="jtest" lineHash="320180299" unbViolId="db743018-1405-3458-b526-2bc26a5fb203" risk="Undefined" locType="sr" hash="13842231" />
    <StdViol msg="Missing Javadoc comment for method 'performAction()'" ln="42" locFile="/com.parasoft:demo/src/main/java/examples/junit/ChoosingConstructor.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="1879857230" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4e32dbd5-d693-312f-9c60-319c2375486f" locEndPos="29" prio="Not Defined" locEndLn="42" goals="0," locStartln="42" sev="3" locRef="28" tool="jtest" lineHash="1879857230" unbViolId="44a9c5f9-990c-33e2-bfe1-b59464a9bbd5" risk="Undefined" locType="sr" hash="13842231" />
    <StdViol msg="Missing Javadoc comment for method 'read()'" ln="48" locFile="/com.parasoft:demo/src/main/java/examples/junit/ChoosingConstructor.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="850295045" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9e000576-9c18-3a30-9fc7-49870d0a69be" locEndPos="20" prio="Not Defined" locEndLn="48" goals="0," locStartln="48" sev="3" locRef="28" tool="jtest" lineHash="850295045" unbViolId="249c6cf0-6936-31c3-9dc2-8a544065aa2a" risk="Undefined" locType="sr" hash="13842231" />
    <StdViol msg="Missing Javadoc comment for method 'getFromStream()'" ln="52" locFile="/com.parasoft:demo/src/main/java/examples/junit/ChoosingConstructor.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-1480317083" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2f38bcb5-44a0-3564-9db8-775bb7ae7966" locEndPos="29" prio="Not Defined" locEndLn="52" goals="0," locStartln="52" sev="3" locRef="28" tool="jtest" lineHash="-1480317083" unbViolId="f5847f98-62a9-3e68-8841-3ca830140508" risk="Undefined" locType="sr" hash="13842231" />
    <StdViol msg="Missing Javadoc comment for method 'putToStream()'" ln="56" locFile="/com.parasoft:demo/src/main/java/examples/junit/ChoosingConstructor.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="1875017499" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="73afb849-c96c-3915-aef7-e095411630d2" locEndPos="27" prio="Not Defined" locEndLn="56" goals="0," locStartln="56" sev="3" locRef="28" tool="jtest" lineHash="1875017499" unbViolId="1268bf54-ec93-39e9-9614-6bdc17b83fb6" risk="Undefined" locType="sr" hash="13842231" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="3" locFile="/com.parasoft:demo/src/main/java/examples/junit/CustomMoney.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.junit" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d93db4e3-5a25-3e70-b648-64d7a4c8ad41" locEndPos="2" prio="Not Defined" locEndLn="3" goals="0," locStartln="3" sev="3" locRef="29" tool="jtest" lineHash="46511" unbViolId="23b0c33a-80a8-3564-8b6c-52cd55b0ff34" risk="Undefined" locType="sr" hash="1460192582" />
    <StdViol msg="Missing Javadoc comment for method 'CustomMoney()'" ln="8" locFile="/com.parasoft:demo/src/main/java/examples/junit/CustomMoney.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="954484081" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="11" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ff514f74-2161-376d-914b-1ea02e13fb8e" locEndPos="22" prio="Not Defined" locEndLn="8" goals="0," locStartln="8" sev="3" locRef="29" tool="jtest" lineHash="954484081" unbViolId="ff26f0c5-9290-30a9-b1ee-b00efbdbd611" risk="Undefined" locType="sr" hash="1460192582" />
    <StdViol msg="Missing Javadoc comment for method 'changeCurrency()'" ln="12" locFile="/com.parasoft:demo/src/main/java/examples/junit/CustomMoney.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="237593046" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7936e98d-52de-3b1f-902d-9faed8a36cc4" locEndPos="30" prio="Not Defined" locEndLn="12" goals="0," locStartln="12" sev="3" locRef="29" tool="jtest" lineHash="237593046" unbViolId="1e95c3c0-3c25-3526-af81-7a03b2e6b675" risk="Undefined" locType="sr" hash="1460192582" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="3" locFile="/com.parasoft:demo/src/main/java/examples/junit/IMoney.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.junit" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6c0992e5-fb0a-3e8b-8f3d-0d12a4bfac0a" locEndPos="2" prio="Not Defined" locEndLn="3" goals="0," locStartln="3" sev="3" locRef="30" tool="jtest" lineHash="46511" unbViolId="e1450db4-d4d9-371b-907d-bd95f29a2841" risk="Undefined" locType="sr" hash="-47973091" />
    <StdViol msg="Method 'add' missing '@return' Javadoc tag" ln="12" locFile="/com.parasoft:demo/src/main/java/examples/junit/IMoney.java" auth="mgorecka" rule="JAVADOC.MRDC" lnHash="-496408577" pkg="examples.junit" rule.header="Use the '@return' Javadoc tag in method Javadoc comments" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="28bcfe1f-2925-3cb0-9a00-3fe8760e8826" locEndPos="30" prio="Not Defined" locEndLn="12" goals="0," locStartln="12" sev="3" locRef="30" tool="jtest" lineHash="-496408577" unbViolId="35bed4d2-9550-3c35-a6f5-9c4dc0c83cc0" risk="Undefined" locType="sr" hash="-47973091" />
    <StdViol msg="Method 'add' is missing '@param m' in Javadoc comment" ln="12" locFile="/com.parasoft:demo/src/main/java/examples/junit/IMoney.java" auth="mgorecka" rule="JAVADOC.PARAM" lnHash="-496408577" pkg="examples.junit" rule.header="Use the '@param' Javadoc tag for each parameter of methods" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="87beed2d-2d63-3073-b5db-13d012e23b1d" locEndPos="30" prio="Not Defined" locEndLn="12" goals="0," locStartln="12" sev="3" locRef="30" tool="jtest" lineHash="-496408577" unbViolId="a66414ee-d86e-35c2-8586-06b22397228b" risk="Undefined" locType="sr" hash="-47973091" />
    <StdViol msg="Unnecessary &quot;public&quot; &quot;abstract&quot; in method declaration: add()" ln="12" locFile="/com.parasoft:demo/src/main/java/examples/junit/IMoney.java" auth="mgorecka" rule="UC.AAI" lnHash="-496408577" pkg="examples.junit" rule.header="Avoid unnecessary modifiers in an &quot;interface&quot;" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ba8c046a-fca5-3752-9a03-bbbc3e98a753" locEndPos="30" prio="Not Defined" locEndLn="12" goals="0," locStartln="12" sev="3" locRef="30" tool="jtest" lineHash="-496408577" unbViolId="74aac392-3037-3970-be4d-c92b9cc6db41" risk="Undefined" locType="sr" hash="-47973091" />
    <StdViol msg="Method 'addMoney' missing '@return' Javadoc tag" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/junit/IMoney.java" auth="mgorecka" rule="JAVADOC.MRDC" lnHash="-1764928264" pkg="examples.junit" rule.header="Use the '@return' Javadoc tag in method Javadoc comments" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="72d4dc26-4f5a-37b2-852c-d5b5380cfe77" locEndPos="35" prio="Not Defined" locEndLn="18" goals="0," locStartln="18" sev="3" locRef="30" tool="jtest" lineHash="-1764928264" unbViolId="250b2d47-f9c4-310e-b5eb-94a34d640ed5" risk="Undefined" locType="sr" hash="-47973091" />
    <StdViol msg="Method 'addMoney' is missing '@param m' in Javadoc comment" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/junit/IMoney.java" auth="mgorecka" rule="JAVADOC.PARAM" lnHash="-1764928264" pkg="examples.junit" rule.header="Use the '@param' Javadoc tag for each parameter of methods" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="014f849c-c38b-395b-b615-bf050884b4e3" locEndPos="35" prio="Not Defined" locEndLn="18" goals="0," locStartln="18" sev="3" locRef="30" tool="jtest" lineHash="-1764928264" unbViolId="9baff0ef-2e44-3a5c-9fb6-a7cdb9daca65" risk="Undefined" locType="sr" hash="-47973091" />
    <StdViol msg="Unnecessary &quot;public&quot; &quot;abstract&quot; in method declaration: addMoney()" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/junit/IMoney.java" auth="mgorecka" rule="UC.AAI" lnHash="-1764928264" pkg="examples.junit" rule.header="Avoid unnecessary modifiers in an &quot;interface&quot;" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="148fdaaf-3895-38a7-b2fb-94c07cf33d5d" locEndPos="35" prio="Not Defined" locEndLn="18" goals="0," locStartln="18" sev="3" locRef="30" tool="jtest" lineHash="-1764928264" unbViolId="e895aaac-b80d-3a50-85cc-d721d9060dd0" risk="Undefined" locType="sr" hash="-47973091" />
    <StdViol msg="Method 'addMoneyBag' missing '@return' Javadoc tag" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/junit/IMoney.java" auth="mgorecka" rule="JAVADOC.MRDC" lnHash="-783520306" pkg="examples.junit" rule.header="Use the '@return' Javadoc tag in method Javadoc comments" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6eb461b1-7b5d-3aff-a4db-149325b08ba8" locEndPos="38" prio="Not Defined" locEndLn="24" goals="0," locStartln="24" sev="3" locRef="30" tool="jtest" lineHash="-783520306" unbViolId="34fe92dc-d602-3099-8a47-a7112f92ca3b" risk="Undefined" locType="sr" hash="-47973091" />
    <StdViol msg="Method 'addMoneyBag' is missing '@param s' in Javadoc comment" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/junit/IMoney.java" auth="mgorecka" rule="JAVADOC.PARAM" lnHash="-783520306" pkg="examples.junit" rule.header="Use the '@param' Javadoc tag for each parameter of methods" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="09e17a59-80cc-3937-8504-d786ecbe0228" locEndPos="38" prio="Not Defined" locEndLn="24" goals="0," locStartln="24" sev="3" locRef="30" tool="jtest" lineHash="-783520306" unbViolId="4cc87ebf-4832-3780-8949-24fd8afa450e" risk="Undefined" locType="sr" hash="-47973091" />
    <StdViol msg="Unnecessary &quot;public&quot; &quot;abstract&quot; in method declaration: addMoneyBag()" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/junit/IMoney.java" auth="mgorecka" rule="UC.AAI" lnHash="-783520306" pkg="examples.junit" rule.header="Avoid unnecessary modifiers in an &quot;interface&quot;" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="66fcec22-8148-3a8b-a31d-086c5cfac95a" locEndPos="38" prio="Not Defined" locEndLn="24" goals="0," locStartln="24" sev="3" locRef="30" tool="jtest" lineHash="-783520306" unbViolId="8eab214b-34e1-375b-9304-0ea0c4811752" risk="Undefined" locType="sr" hash="-47973091" />
    <StdViol msg="Method 'isZero' missing '@return' Javadoc tag" ln="29" locFile="/com.parasoft:demo/src/main/java/examples/junit/IMoney.java" auth="mgorecka" rule="JAVADOC.MRDC" lnHash="-1324788535" pkg="examples.junit" rule.header="Use the '@return' Javadoc tag in method Javadoc comments" locStartPos="28" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3fadddc4-8fb0-3bbb-ac26-4106314d65b5" locEndPos="34" prio="Not Defined" locEndLn="29" goals="0," locStartln="29" sev="3" locRef="30" tool="jtest" lineHash="-1324788535" unbViolId="6cf55107-b673-3339-ae26-f813346d6081" risk="Undefined" locType="sr" hash="-47973091" />
    <StdViol msg="Unnecessary &quot;public&quot; &quot;abstract&quot; in method declaration: isZero()" ln="29" locFile="/com.parasoft:demo/src/main/java/examples/junit/IMoney.java" auth="mgorecka" rule="UC.AAI" lnHash="-1324788535" pkg="examples.junit" rule.header="Avoid unnecessary modifiers in an &quot;interface&quot;" locStartPos="28" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5608907a-c547-3f77-8d31-c8172c2b72b8" locEndPos="34" prio="Not Defined" locEndLn="29" goals="0," locStartln="29" sev="3" locRef="30" tool="jtest" lineHash="-1324788535" unbViolId="b8c4916f-5173-383c-a8f8-79f0afece350" risk="Undefined" locType="sr" hash="-47973091" />
    <StdViol msg="Method 'multiply' missing '@return' Javadoc tag" ln="34" locFile="/com.parasoft:demo/src/main/java/examples/junit/IMoney.java" auth="mgorecka" rule="JAVADOC.MRDC" lnHash="1594568116" pkg="examples.junit" rule.header="Use the '@return' Javadoc tag in method Javadoc comments" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b4e88f7a-1b85-3ddc-bdf9-57f24bcf72a7" locEndPos="35" prio="Not Defined" locEndLn="34" goals="0," locStartln="34" sev="3" locRef="30" tool="jtest" lineHash="1594568116" unbViolId="a68b5a99-cbcb-3a7f-8269-3bc9eea7280e" risk="Undefined" locType="sr" hash="-47973091" />
    <StdViol msg="Method 'multiply' is missing '@param factor' in Javadoc comment" ln="34" locFile="/com.parasoft:demo/src/main/java/examples/junit/IMoney.java" auth="mgorecka" rule="JAVADOC.PARAM" lnHash="1594568116" pkg="examples.junit" rule.header="Use the '@param' Javadoc tag for each parameter of methods" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="23a49200-db5e-341e-ad8d-7b9273d3a70e" locEndPos="35" prio="Not Defined" locEndLn="34" goals="0," locStartln="34" sev="3" locRef="30" tool="jtest" lineHash="1594568116" unbViolId="9176552a-f818-3e0a-97d7-65d447797399" risk="Undefined" locType="sr" hash="-47973091" />
    <StdViol msg="Unnecessary &quot;public&quot; &quot;abstract&quot; in method declaration: multiply()" ln="34" locFile="/com.parasoft:demo/src/main/java/examples/junit/IMoney.java" auth="mgorecka" rule="UC.AAI" lnHash="1594568116" pkg="examples.junit" rule.header="Avoid unnecessary modifiers in an &quot;interface&quot;" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a33ab708-ecbb-3f35-8902-5b5c0f2f08aa" locEndPos="35" prio="Not Defined" locEndLn="34" goals="0," locStartln="34" sev="3" locRef="30" tool="jtest" lineHash="1594568116" unbViolId="6e4a5bdc-79b0-3b20-b508-dbc11ba377d3" risk="Undefined" locType="sr" hash="-47973091" />
    <StdViol msg="Method 'negate' missing '@return' Javadoc tag" ln="39" locFile="/com.parasoft:demo/src/main/java/examples/junit/IMoney.java" auth="mgorecka" rule="JAVADOC.MRDC" lnHash="105849718" pkg="examples.junit" rule.header="Use the '@return' Javadoc tag in method Javadoc comments" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7bdc2b79-67ba-3374-910b-d4421a45b615" locEndPos="33" prio="Not Defined" locEndLn="39" goals="0," locStartln="39" sev="3" locRef="30" tool="jtest" lineHash="105849718" unbViolId="cd5842cc-7c9e-36c6-9a78-09cebdc20b03" risk="Undefined" locType="sr" hash="-47973091" />
    <StdViol msg="Unnecessary &quot;public&quot; &quot;abstract&quot; in method declaration: negate()" ln="39" locFile="/com.parasoft:demo/src/main/java/examples/junit/IMoney.java" auth="mgorecka" rule="UC.AAI" lnHash="105849718" pkg="examples.junit" rule.header="Avoid unnecessary modifiers in an &quot;interface&quot;" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3971ed43-6c26-3b2f-9ca9-3cc1a77e47bd" locEndPos="33" prio="Not Defined" locEndLn="39" goals="0," locStartln="39" sev="3" locRef="30" tool="jtest" lineHash="105849718" unbViolId="2afda9d4-6b9a-32a4-b88a-6c932eefe197" risk="Undefined" locType="sr" hash="-47973091" />
    <StdViol msg="Method 'subtract' missing '@return' Javadoc tag" ln="44" locFile="/com.parasoft:demo/src/main/java/examples/junit/IMoney.java" auth="mgorecka" rule="JAVADOC.MRDC" lnHash="-1197607896" pkg="examples.junit" rule.header="Use the '@return' Javadoc tag in method Javadoc comments" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="06a09250-e9d2-3a81-a755-e8d698973f31" locEndPos="35" prio="Not Defined" locEndLn="44" goals="0," locStartln="44" sev="3" locRef="30" tool="jtest" lineHash="-1197607896" unbViolId="0c7579c4-064a-3c93-83fb-c1ced59b5d8c" risk="Undefined" locType="sr" hash="-47973091" />
    <StdViol msg="Method 'subtract' is missing '@param m' in Javadoc comment" ln="44" locFile="/com.parasoft:demo/src/main/java/examples/junit/IMoney.java" auth="mgorecka" rule="JAVADOC.PARAM" lnHash="-1197607896" pkg="examples.junit" rule.header="Use the '@param' Javadoc tag for each parameter of methods" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="cb8c640c-dd4c-383c-acf0-6bbcd6831688" locEndPos="35" prio="Not Defined" locEndLn="44" goals="0," locStartln="44" sev="3" locRef="30" tool="jtest" lineHash="-1197607896" unbViolId="1c2782d6-c851-385c-ba4e-7976fa3773aa" risk="Undefined" locType="sr" hash="-47973091" />
    <StdViol msg="Unnecessary &quot;public&quot; &quot;abstract&quot; in method declaration: subtract()" ln="44" locFile="/com.parasoft:demo/src/main/java/examples/junit/IMoney.java" auth="mgorecka" rule="UC.AAI" lnHash="-1197607896" pkg="examples.junit" rule.header="Avoid unnecessary modifiers in an &quot;interface&quot;" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8815d717-cfa5-3d7f-a302-8f57fa99bc92" locEndPos="35" prio="Not Defined" locEndLn="44" goals="0," locStartln="44" sev="3" locRef="30" tool="jtest" lineHash="-1197607896" unbViolId="1b332e2f-b095-37dd-a360-c7170bcb3144" risk="Undefined" locType="sr" hash="-47973091" />
    <StdViol msg="Method 'appendTo' is missing '@param m' in Javadoc comment" ln="51" locFile="/com.parasoft:demo/src/main/java/examples/junit/IMoney.java" auth="mgorecka" rule="JAVADOC.PARAM" lnHash="-650894443" pkg="examples.junit" rule.header="Use the '@param' Javadoc tag for each parameter of methods" locStartPos="25" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d9e07755-27b9-316d-8cb6-28c9ab9b17f3" locEndPos="33" prio="Not Defined" locEndLn="51" goals="0," locStartln="51" sev="3" locRef="30" tool="jtest" lineHash="-650894443" unbViolId="de790428-acb0-3383-a6a9-a1642ade0ddf" risk="Undefined" locType="sr" hash="-47973091" />
    <StdViol msg="Unnecessary &quot;public&quot; &quot;abstract&quot; in method declaration: appendTo()" ln="51" locFile="/com.parasoft:demo/src/main/java/examples/junit/IMoney.java" auth="mgorecka" rule="UC.AAI" lnHash="-650894443" pkg="examples.junit" rule.header="Avoid unnecessary modifiers in an &quot;interface&quot;" locStartPos="25" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6204699f-7619-3e88-ae8b-0301ad744214" locEndPos="33" prio="Not Defined" locEndLn="51" goals="0," locStartln="51" sev="3" locRef="30" tool="jtest" lineHash="-650894443" unbViolId="05ff3087-0698-392f-baa2-1f16625ecba5" risk="Undefined" locType="sr" hash="-47973091" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="3" locFile="/com.parasoft:demo/src/main/java/examples/junit/IntegerComparator.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.junit" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c0d9c924-1498-34cd-b5b7-159a6565e3b2" locEndPos="2" prio="Not Defined" locEndLn="3" goals="0," locStartln="3" sev="3" locRef="31" tool="jtest" lineHash="46511" unbViolId="e2aa106a-adfd-39a0-abcf-360e193ea1b8" risk="Undefined" locType="sr" hash="1622384320" />
    <StdViol msg="Missing Javadoc comment for method 'isGreater()'" ln="12" locFile="/com.parasoft:demo/src/main/java/examples/junit/IntegerComparator.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="1611299938" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="26" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4cf56d2a-7c29-3c44-98d5-0e985135b405" locEndPos="35" prio="Not Defined" locEndLn="12" goals="0," locStartln="12" sev="3" locRef="31" tool="jtest" lineHash="1611299938" unbViolId="7b9332f0-167f-36a1-8f9c-79739c6ceee8" risk="Undefined" locType="sr" hash="1622384320" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="3" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.junit" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4c25f359-b133-3417-9f50-db7e31176144" locEndPos="2" prio="Not Defined" locEndLn="3" goals="0," locStartln="3" sev="3" locRef="32" tool="jtest" lineHash="46511" unbViolId="0311335e-495d-359b-ab29-9300b4b7dcb7" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="Method 'Money' is missing '@param amount' in Javadoc comment" ln="16" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="JAVADOC.PARAM" lnHash="-1384276064" pkg="examples.junit" rule.header="Use the '@param' Javadoc tag for each parameter of methods" locStartPos="11" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f59c311f-3a5f-3987-a6ae-37f6e2a1043f" locEndPos="16" prio="Not Defined" locEndLn="16" goals="0," locStartln="16" sev="3" locRef="32" tool="jtest" lineHash="-1384276064" unbViolId="acbb06f2-741a-3851-93ef-ba5c405a585e" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="Method 'Money' is missing '@param currency' in Javadoc comment" ln="16" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="JAVADOC.PARAM" lnHash="-1384276064" pkg="examples.junit" rule.header="Use the '@param' Javadoc tag for each parameter of methods" locStartPos="11" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4fa8161d-2c8d-3c0e-885d-15dc7b3d7850" locEndPos="16" prio="Not Defined" locEndLn="16" goals="0," locStartln="16" sev="3" locRef="32" tool="jtest" lineHash="-1384276064" unbViolId="5bd5f558-300b-335e-81e9-9787d22e33cc" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="Method 'add' missing '@return' Javadoc tag" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="JAVADOC.MRDC" lnHash="1187993767" pkg="examples.junit" rule.header="Use the '@return' Javadoc tag in method Javadoc comments" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1ae85dbc-f71e-33ad-9a3e-c41807a3a852" locEndPos="21" prio="Not Defined" locEndLn="24" goals="0," locStartln="24" sev="3" locRef="32" tool="jtest" lineHash="1187993767" unbViolId="9f9ad49f-969c-3ea2-aed0-dff1b7a0633b" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="Method 'add' is missing '@param m' in Javadoc comment" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="JAVADOC.PARAM" lnHash="1187993767" pkg="examples.junit" rule.header="Use the '@param' Javadoc tag for each parameter of methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9095d432-786f-3273-91ad-a77c1433f1d2" locEndPos="21" prio="Not Defined" locEndLn="24" goals="0," locStartln="24" sev="3" locRef="32" tool="jtest" lineHash="1187993767" unbViolId="8d40f3eb-e232-3d18-b140-c4181f07325e" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="The overriding method 'add()' does not have an &quot;@Override&quot; annotation" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="OOP.AOA" lnHash="1187993767" pkg="examples.junit" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2a382edc-4d3a-337e-a8db-210ef53ca20f" locEndPos="21" prio="Not Defined" locEndLn="24" goals="0," locStartln="24" sev="3" locRef="32" tool="jtest" lineHash="1187993767" unbViolId="10a12abe-b299-3310-862f-0360153540a3" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="Parameter 'm' dereferenced before being checked for null" ln="25" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="DBC.IPAN" lnHash="106617480" pkg="examples.junit" rule.header="Include a '@pre != null' tag for each parameter that is dereferenced before being checked for null" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="327f4d8d-0aa8-3eec-a8c4-8f4f80488b8d" locEndPos="16" prio="Not Defined" locEndLn="25" goals="0," locStartln="25" sev="3" locRef="32" tool="jtest" lineHash="106617480" unbViolId="45dfb1a5-a323-3520-9a7b-4f18dd03527c" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="Missing Javadoc comment for method 'addMoney()'" ln="28" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-449002802" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="225fcd3a-894e-3014-bb93-ab62cba64d29" locEndPos="26" prio="Not Defined" locEndLn="28" goals="0," locStartln="28" sev="3" locRef="32" tool="jtest" lineHash="-449002802" unbViolId="a36440ba-e048-36c1-8f0e-fe9917eb5cb2" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="The overriding method 'addMoney()' does not have an &quot;@Override&quot; annotation" ln="28" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="OOP.AOA" lnHash="-449002802" pkg="examples.junit" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f7cc4645-2694-30e3-bbf6-522420d941d6" locEndPos="26" prio="Not Defined" locEndLn="28" goals="0," locStartln="28" sev="3" locRef="32" tool="jtest" lineHash="-449002802" unbViolId="da81f521-935e-343e-bc6d-3ba518b657e0" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="&quot;if&quot; statement without a &quot;{ }&quot; block" ln="29" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="-1720949595" pkg="examples.junit" rule.header="Provide a '{}' block for conditional statements" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1744559e-d056-3615-876d-2ea94c250835" locEndPos="10" prio="Not Defined" locEndLn="29" goals="0," locStartln="29" sev="3" locRef="32" tool="jtest" lineHash="-1720949595" unbViolId="81e956fc-f2fe-3d95-9112-a893f82c882c" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="Missing Javadoc comment for method 'addMoneyBag()'" ln="34" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-681977672" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4550505f-3f7d-3759-ac93-c6f558ac250b" locEndPos="29" prio="Not Defined" locEndLn="34" goals="0," locStartln="34" sev="3" locRef="32" tool="jtest" lineHash="-681977672" unbViolId="4c4562af-e348-3219-9439-b13ba58278d3" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="The overriding method 'addMoneyBag()' does not have an &quot;@Override&quot; annotation" ln="34" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="OOP.AOA" lnHash="-681977672" pkg="examples.junit" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c9ba3d26-7c0a-306a-9ff2-3d0d04e7183f" locEndPos="29" prio="Not Defined" locEndLn="34" goals="0," locStartln="34" sev="3" locRef="32" tool="jtest" lineHash="-681977672" unbViolId="597a6f1b-441b-3eff-9796-ce33b9d17844" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="Missing Javadoc comment for method 'amount()'" ln="38" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-1767488292" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d4430b0b-478c-3436-a388-2639d1d78065" locEndPos="21" prio="Not Defined" locEndLn="38" goals="0," locStartln="38" sev="3" locRef="32" tool="jtest" lineHash="-1767488292" unbViolId="0673487e-978b-3fe8-a79b-46d75457c93d" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="Missing Javadoc comment for method 'currency()'" ln="42" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="1011425285" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d56f9252-1da6-37ff-9634-d5fab80fabbe" locEndPos="26" prio="Not Defined" locEndLn="42" goals="0," locStartln="42" sev="3" locRef="32" tool="jtest" lineHash="1011425285" unbViolId="6fed6be0-bbd9-39ac-89a5-9b345e9e1122" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="Missing Javadoc comment for method 'equals()'" ln="47" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="759268305" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c5def1b0-ac75-3bf5-a64f-d4c201e0abc1" locEndPos="25" prio="Not Defined" locEndLn="47" goals="0," locStartln="47" sev="3" locRef="32" tool="jtest" lineHash="759268305" unbViolId="3657216f-a946-3a2e-a0ee-cf95f247106f" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="&quot;if&quot; statement without a &quot;{ }&quot; block" ln="48" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="1181393" pkg="examples.junit" rule.header="Provide a '{}' block for conditional statements" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c510aa90-568d-38ee-8209-4906d2952378" locEndPos="10" prio="Not Defined" locEndLn="48" goals="0," locStartln="48" sev="3" locRef="32" tool="jtest" lineHash="1181393" unbViolId="0105dc32-55e2-3813-adf2-db763cb5a19c" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="&quot;if&quot; statement without a &quot;{ }&quot; block" ln="49" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="188568557" pkg="examples.junit" rule.header="Provide a '{}' block for conditional statements" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d1f1010c-fb0a-3ba4-a4d6-e0af41ef33f1" locEndPos="14" prio="Not Defined" locEndLn="49" goals="0," locStartln="49" sev="3" locRef="32" tool="jtest" lineHash="188568557" unbViolId="3fd57d32-a7f0-30f2-b02f-81d3d98fe9c5" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="Missing Javadoc comment for method 'hashCode()'" ln="59" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-111620833" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7fb1d7eb-40e8-3b63-8864-3f276d937294" locEndPos="23" prio="Not Defined" locEndLn="59" goals="0," locStartln="59" sev="3" locRef="32" tool="jtest" lineHash="-111620833" unbViolId="1a834533-6067-3ad9-986f-96f1c53c436f" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="&quot;if&quot; statement without a &quot;{ }&quot; block" ln="60" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="1306308210" pkg="examples.junit" rule.header="Provide a '{}' block for conditional statements" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0f66f1a8-c8c4-3e84-9831-46fcf420fe07" locEndPos="10" prio="Not Defined" locEndLn="60" goals="0," locStartln="60" sev="3" locRef="32" tool="jtest" lineHash="1306308210" unbViolId="29b1e0af-04c7-3412-b355-91d86b06e7e8" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="Missing Javadoc comment for method 'isZero()'" ln="65" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-1757590243" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="44a7cc61-8527-33a6-892f-e60da908d194" locEndPos="25" prio="Not Defined" locEndLn="65" goals="0," locStartln="65" sev="3" locRef="32" tool="jtest" lineHash="-1757590243" unbViolId="aba2e799-2daa-3ee5-9e0c-600b98632ad8" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="The overriding method 'isZero()' does not have an &quot;@Override&quot; annotation" ln="65" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="OOP.AOA" lnHash="-1757590243" pkg="examples.junit" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a0cb826d-95ab-3201-8504-25ea109a4ca9" locEndPos="25" prio="Not Defined" locEndLn="65" goals="0," locStartln="65" sev="3" locRef="32" tool="jtest" lineHash="-1757590243" unbViolId="82548c19-5f3e-3eb6-b74b-cd6663be7689" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="Missing Javadoc comment for method 'multiply()'" ln="69" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="130457714" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5187d190-6179-3ebd-864c-b50871ae3346" locEndPos="26" prio="Not Defined" locEndLn="69" goals="0," locStartln="69" sev="3" locRef="32" tool="jtest" lineHash="130457714" unbViolId="b1b89790-5f7e-300f-a7a5-7d25249137bb" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="The overriding method 'multiply()' does not have an &quot;@Override&quot; annotation" ln="69" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="OOP.AOA" lnHash="130457714" pkg="examples.junit" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="452294c1-4724-345e-b253-afd3a0904b4c" locEndPos="26" prio="Not Defined" locEndLn="69" goals="0," locStartln="69" sev="3" locRef="32" tool="jtest" lineHash="130457714" unbViolId="49672ac8-5095-3363-a8a8-f81ea16d47d9" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="Missing Javadoc comment for method 'negate()'" ln="73" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="1778486000" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a984a308-254f-3ac4-aeb0-0dadef037b14" locEndPos="24" prio="Not Defined" locEndLn="73" goals="0," locStartln="73" sev="3" locRef="32" tool="jtest" lineHash="1778486000" unbViolId="21d63281-de78-3b74-8856-8710e337d1df" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="The overriding method 'negate()' does not have an &quot;@Override&quot; annotation" ln="73" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="OOP.AOA" lnHash="1778486000" pkg="examples.junit" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f159d35e-38fe-3818-8717-6f50cde63714" locEndPos="24" prio="Not Defined" locEndLn="73" goals="0," locStartln="73" sev="3" locRef="32" tool="jtest" lineHash="1778486000" unbViolId="c6ebd3c8-7c89-389a-9c22-515cfac29381" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="Missing Javadoc comment for method 'subtract()'" ln="77" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="78677118" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3dda534a-6b2b-3435-ab7c-20d3d8f4cdbc" locEndPos="26" prio="Not Defined" locEndLn="77" goals="0," locStartln="77" sev="3" locRef="32" tool="jtest" lineHash="78677118" unbViolId="3a3cf773-a025-3e68-914d-e89e1abaf44e" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="The overriding method 'subtract()' does not have an &quot;@Override&quot; annotation" ln="77" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="OOP.AOA" lnHash="78677118" pkg="examples.junit" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f2726430-af98-3c12-aa84-1c5701a46ebf" locEndPos="26" prio="Not Defined" locEndLn="77" goals="0," locStartln="77" sev="3" locRef="32" tool="jtest" lineHash="78677118" unbViolId="ff129d63-7bcb-3998-8f6c-a9fbb82c645a" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="Missing Javadoc comment for method 'toString()'" ln="82" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="622124256" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="af71fb2d-474d-3ecb-ae1c-9dc3b4419431" locEndPos="26" prio="Not Defined" locEndLn="82" goals="0," locStartln="82" sev="3" locRef="32" tool="jtest" lineHash="622124256" unbViolId="54492378-43c0-34b4-bd0a-4283538358b6" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="'buffer' appends a String concatenation" ln="84" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="OPT.USB" lnHash="-2067537065" pkg="examples.junit" rule.header="Use 'StringBuffer' instead of 'String' when concatenating strings" locStartPos="26" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3bfb2607-7b6a-3500-ab0b-8ea5ab00e5dd" locEndPos="27" prio="Not Defined" locEndLn="84" goals="0," locStartln="84" sev="3" locRef="32" tool="jtest" lineHash="-2067537065" unbViolId="0dce724a-2a32-3c54-8833-39558988f702" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="Single character ' ' using double quotes in string concatenation" ln="84" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="OPT.STR" lnHash="-2067537065" pkg="examples.junit" rule.header="Use single quotes instead of double quotes for single character string concatenation" locStartPos="39" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ec1e885e-4620-3e83-9b2f-bd012efe47a7" locEndPos="42" prio="Not Defined" locEndLn="84" goals="0," locStartln="84" sev="3" locRef="32" tool="jtest" lineHash="-2067537065" unbViolId="a26918b2-a503-3973-b4bc-1e0e1064e883" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="Single character ']' using double quotes in string concatenation" ln="84" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="OPT.STR" lnHash="-2067537065" pkg="examples.junit" rule.header="Use single quotes instead of double quotes for single character string concatenation" locStartPos="58" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="df4cb39b-87e5-3005-bbad-2979e5515aa8" locEndPos="61" prio="Not Defined" locEndLn="84" goals="0," locStartln="84" sev="3" locRef="32" tool="jtest" lineHash="-2067537065" unbViolId="310741c0-0132-3ad8-b069-dd6afb44cbf6" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="Missing Javadoc comment for method 'appendTo()'" ln="88" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="1741005391" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="42" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="439b5395-19e3-3a5c-b45c-02a82632e915" locEndPos="50" prio="Not Defined" locEndLn="88" goals="0," locStartln="88" sev="3" locRef="32" tool="jtest" lineHash="1741005391" unbViolId="409373c9-67e7-3f86-886d-cb944c047d1f" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="The overriding method 'appendTo()' does not have an &quot;@Override&quot; annotation" ln="88" locFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" auth="mgorecka" rule="OOP.AOA" lnHash="1741005391" pkg="examples.junit" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="42" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="14aa56ae-43eb-3de6-a89a-0a9e95773d82" locEndPos="50" prio="Not Defined" locEndLn="88" goals="0," locStartln="88" sev="3" locRef="32" tool="jtest" lineHash="1741005391" unbViolId="91e8fc5d-9de1-311a-9818-41fd762c4aa6" risk="Undefined" locType="sr" hash="-1765121077" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="6" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.junit" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f48478df-a2cb-323a-90e5-b45cd7b0f82e" locEndPos="2" prio="Not Defined" locEndLn="6" goals="0," locStartln="6" sev="3" locRef="33" tool="jtest" lineHash="46511" unbViolId="5526c4e3-a25c-3a2e-bd5b-ec9631437453" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="Missing Javadoc comment for method 'create()'" ln="20" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="490769273" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="25" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="69997fd8-1b64-3577-98a3-1117e23d502f" locEndPos="31" prio="Not Defined" locEndLn="20" goals="0," locStartln="20" sev="3" locRef="33" tool="jtest" lineHash="490769273" unbViolId="7759b544-0d31-3f5d-9165-353d3a34ef03" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="Missing Javadoc comment for method 'add()'" ln="27" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="1187993767" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c5b63604-b7f2-3138-9caa-9ac39f40afa6" locEndPos="21" prio="Not Defined" locEndLn="27" goals="0," locStartln="27" sev="3" locRef="33" tool="jtest" lineHash="1187993767" unbViolId="b0d1611b-8099-32f4-b717-29c99d1cf22d" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="The overriding method 'add()' does not have an &quot;@Override&quot; annotation" ln="27" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="OOP.AOA" lnHash="1187993767" pkg="examples.junit" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6aae83f5-fda5-38a7-bcf2-a7569288f6d3" locEndPos="21" prio="Not Defined" locEndLn="27" goals="0," locStartln="27" sev="3" locRef="33" tool="jtest" lineHash="1187993767" unbViolId="5fa4fab9-c617-31fe-a903-a7b4641803da" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="Missing Javadoc comment for method 'addMoney()'" ln="31" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-449002802" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e1293270-165b-38e3-9d71-d95430160a6f" locEndPos="26" prio="Not Defined" locEndLn="31" goals="0," locStartln="31" sev="3" locRef="33" tool="jtest" lineHash="-449002802" unbViolId="96c2b705-888c-35cc-a9a2-80ff1f3bffc9" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="The overriding method 'addMoney()' does not have an &quot;@Override&quot; annotation" ln="31" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="OOP.AOA" lnHash="-449002802" pkg="examples.junit" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="63be252f-7c9d-360c-973f-6a83443f393f" locEndPos="26" prio="Not Defined" locEndLn="31" goals="0," locStartln="31" sev="3" locRef="33" tool="jtest" lineHash="-449002802" unbViolId="a0f4d957-ef16-3b7a-87b9-281b47c9a43c" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="Missing Javadoc comment for method 'addMoneyBag()'" ln="35" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-681977672" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9379a999-9784-3d34-a1a6-d6b8c1010b5d" locEndPos="29" prio="Not Defined" locEndLn="35" goals="0," locStartln="35" sev="3" locRef="33" tool="jtest" lineHash="-681977672" unbViolId="bd57ad6a-9971-3431-8211-3caae05d7230" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="The overriding method 'addMoneyBag()' does not have an &quot;@Override&quot; annotation" ln="35" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="OOP.AOA" lnHash="-681977672" pkg="examples.junit" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="295ae8a3-f440-34af-87e9-6519a2a8626e" locEndPos="29" prio="Not Defined" locEndLn="35" goals="0," locStartln="35" sev="3" locRef="33" tool="jtest" lineHash="-681977672" unbViolId="3a3e3dc7-12bd-3077-b082-048c56604d82" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="&quot;for&quot; statement without a &quot;{ }&quot; block" ln="40" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="-648733333" pkg="examples.junit" rule.header="Provide a '{}' block for conditional statements" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c1d7a5d0-1af3-3572-b47d-de2009dcc7ab" locEndPos="11" prio="Not Defined" locEndLn="40" goals="0," locStartln="40" sev="3" locRef="33" tool="jtest" lineHash="-648733333" unbViolId="2eb53ea7-bb1a-3c9a-95fe-04c9659e9653" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="&quot;if&quot; statement without a &quot;{ }&quot; block" ln="45" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="1322628268" pkg="examples.junit" rule.header="Provide a '{}' block for conditional statements" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0e50548e-f68b-3573-bdda-cd513a1491b2" locEndPos="10" prio="Not Defined" locEndLn="45" goals="0," locStartln="45" sev="3" locRef="33" tool="jtest" lineHash="1322628268" unbViolId="04da3a36-749d-319f-a531-44fe2a3543e5" risk="Undefined" locType="sr" hash="-113332437" />
    <FlowViol msg="Inefficient removal from collection &quot;this.fMonies&quot;. Remove elements by &quot;Iterator.remove()&quot;" ln="52" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" ruleSAFMsg="Point where element is removed from collection" FirstElSrcRngEndPos="28" auth="mgorecka" FirstElSrcRngEndLn="79" rule="BD.OPT.INEFCOL" FirstElSrcRngStartPos="8" lnHash="146087538" ruleSCSCMsg="Point of getting iterator" pkg="examples.junit" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" rule.header="Avoid inefficient removal of Collection elements" FirstElSrcRngStartln="77" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="-852211742" lang="java" violId="1c3281f6-d481-3e9a-84a5-a1d92233441d" locEndPos="28" urgent="true" prio="Not Defined" locEndLn="52" goals="1," locStartln="52" sev="3" locRef="33" tool="jtest" lineHash="146087538" unbViolId="7ff519ed-83dd-3453-a3e3-d80e7e9f5918" risk="Undefined" locType="sr" hash="-113332437" causeLocRef="33">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-210416179" locType="sr" srcRnghash="-113332437" locRef="33" srcRngFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" ln="47" srcRngStartPos="8" srcRngEndPos="50" srcRngStartln="47" srcRngEndLn="47" desc="IMoney old = findMoney(aMoney.currency());" ElType="!" rngLn="47">
          <ElDescList>
            <ElDesc lineHash="-2088105684" locType="sr" srcRnghash="-113332437" locRef="33" srcRngFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" ln="77" srcRngStartPos="8" srcRngEndPos="28" srcRngStartln="77" srcRngEndLn="79" desc="for (Money each : fMonies)" ElType=".C" rngLn="77">
              <Anns>
                <Ann msg="Point of getting iterator" kind="cause" />
                <Ann msg="Loop condition evaluation: this.fMonies.iterator().hasNext() (assuming true)" kind="condEval" />
                <Ann msg="Entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1007878298" locType="sr" srcRnghash="-113332437" locRef="33" srcRngFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" ln="78" srcRngStartPos="16" srcRngEndPos="31" srcRngStartln="78" srcRngEndLn="78" desc="each.currency()" ElType="." rngLn="78">
              <ElDescList>
                <ElDesc lineHash="-584175244" locType="sr" srcRnghash="-1765121077" locRef="32" srcRngFile="/com.parasoft:demo/src/main/java/examples/junit/Money.java" ln="43" srcRngStartPos="8" srcRngEndPos="25" srcRngStartln="43" srcRngEndLn="43" desc="return fCurrency;" ElType="." rngLn="43" />
              </ElDescList>
            </ElDesc>
            <ElDesc lineHash="-1007878298" locType="sr" srcRnghash="-113332437" locRef="33" srcRngFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" ln="78" srcRngStartPos="12" srcRngEndPos="17" srcRngStartln="78" srcRngEndLn="79" desc="if (each.currency().equals(currency))" ElType="." rngLn="78">
              <Anns>
                <Ann msg="Condition evaluation: each.currency().equals(currency) (assuming true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-740054166" locType="sr" srcRnghash="-113332437" locRef="33" srcRngFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" ln="79" srcRngStartPos="16" srcRngEndPos="28" srcRngStartln="79" srcRngEndLn="79" desc="return each;" ElType="." rngLn="79" />
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-803811429" locType="sr" srcRnghash="-113332437" locRef="33" srcRngFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" ln="48" srcRngStartPos="8" srcRngEndPos="26" srcRngStartln="48" srcRngEndLn="48" desc="if (old == null) {" ElType="." rngLn="48">
          <Anns>
            <Ann msg="Condition evaluation: (old == null) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="146087538" locType="sr" srcRnghash="-113332437" locRef="33" srcRngFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" ln="52" srcRngStartPos="8" srcRngEndPos="28" srcRngStartln="52" srcRngEndLn="52" desc="fMonies.remove(old);" ElType=".P" rngLn="52">
          <Anns>
            <Ann msg="Point where element is removed from collection" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="&quot;if&quot; statement without a &quot;{ }&quot; block" ln="54" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="562209134" pkg="examples.junit" rule.header="Provide a '{}' block for conditional statements" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6ac2f364-863b-3e0a-8f42-1b0dea07ff56" locEndPos="10" prio="Not Defined" locEndLn="54" goals="0," locStartln="54" sev="3" locRef="33" tool="jtest" lineHash="562209134" unbViolId="cc574246-6aee-34b9-b8c9-fca7358c3034" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="Missing Javadoc comment for method 'equals()'" ln="60" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="759268305" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6e8339a4-50ea-34de-8498-64929705aaf0" locEndPos="25" prio="Not Defined" locEndLn="60" goals="0," locStartln="60" sev="3" locRef="33" tool="jtest" lineHash="759268305" unbViolId="c9acb6af-309a-30f0-afa8-0e9769579357" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="&quot;if&quot; statement without a &quot;{ }&quot; block" ln="61" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="1181393" pkg="examples.junit" rule.header="Provide a '{}' block for conditional statements" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="415f58be-9447-35e9-b7fe-f1988272c475" locEndPos="10" prio="Not Defined" locEndLn="61" goals="0," locStartln="61" sev="3" locRef="33" tool="jtest" lineHash="1181393" unbViolId="45e06ff6-2080-3933-9eda-4cf1793a1db6" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="&quot;if&quot; statement without a &quot;{ }&quot; block" ln="62" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="188568557" pkg="examples.junit" rule.header="Provide a '{}' block for conditional statements" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="386c63ae-eb72-384b-8200-d8acd515af22" locEndPos="14" prio="Not Defined" locEndLn="62" goals="0," locStartln="62" sev="3" locRef="33" tool="jtest" lineHash="188568557" unbViolId="6ef9eecd-b1eb-3311-a6c3-7f89bcee066e" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="&quot;if&quot; statement without a &quot;{ }&quot; block" ln="66" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="846790365" pkg="examples.junit" rule.header="Provide a '{}' block for conditional statements" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d89bf39e-6b03-369b-a5d5-c8e867b30818" locEndPos="14" prio="Not Defined" locEndLn="66" goals="0," locStartln="66" sev="3" locRef="33" tool="jtest" lineHash="846790365" unbViolId="46b453a0-6852-344d-89c8-a768f577cd0f" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="&quot;for&quot; statement without a &quot;{ }&quot; block" ln="68" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="-2049502932" pkg="examples.junit" rule.header="Provide a '{}' block for conditional statements" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7b78b9c8-7520-3caa-93c4-c475e4850298" locEndPos="15" prio="Not Defined" locEndLn="68" goals="0," locStartln="68" sev="3" locRef="33" tool="jtest" lineHash="-2049502932" unbViolId="8a845791-197b-3faf-acf0-549cfeb2f126" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="&quot;if&quot; statement without a &quot;{ }&quot; block" ln="69" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="-2122890903" pkg="examples.junit" rule.header="Provide a '{}' block for conditional statements" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ff423fe1-37c7-38e7-82e2-5e76a1feef49" locEndPos="18" prio="Not Defined" locEndLn="69" goals="0," locStartln="69" sev="3" locRef="33" tool="jtest" lineHash="-2122890903" unbViolId="0f6c24e4-dc55-345e-8725-8af8549bcb50" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="&quot;for&quot; statement without a &quot;{ }&quot; block" ln="77" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="-2088105684" pkg="examples.junit" rule.header="Provide a '{}' block for conditional statements" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4d5dec40-0a4f-3100-a0de-b0e2fc6a16eb" locEndPos="11" prio="Not Defined" locEndLn="77" goals="0," locStartln="77" sev="3" locRef="33" tool="jtest" lineHash="-2088105684" unbViolId="ffb948db-a594-3781-a620-6eaffa28062c" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="&quot;if&quot; statement without a &quot;{ }&quot; block" ln="78" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="-1007878298" pkg="examples.junit" rule.header="Provide a '{}' block for conditional statements" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c4b570f9-6a30-377d-8c66-50f852ef92e3" locEndPos="14" prio="Not Defined" locEndLn="78" goals="0," locStartln="78" sev="3" locRef="33" tool="jtest" lineHash="-1007878298" unbViolId="331b4db7-ebee-334e-aa47-9089d0428d8b" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="&quot;if&quot; statement without a &quot;{ }&quot; block" ln="85" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="172229381" pkg="examples.junit" rule.header="Provide a '{}' block for conditional statements" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9fab72e4-51fd-3fdd-ba23-6b734d59d41a" locEndPos="10" prio="Not Defined" locEndLn="85" goals="0," locStartln="85" sev="3" locRef="33" tool="jtest" lineHash="172229381" unbViolId="fce1f7d2-a919-39ab-9d6e-f80ae7de1b31" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="Missing Javadoc comment for method 'hashCode()'" ln="91" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-111620833" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b7a85c1d-2e37-3313-866f-e4b618987110" locEndPos="23" prio="Not Defined" locEndLn="91" goals="0," locStartln="91" sev="3" locRef="33" tool="jtest" lineHash="-111620833" unbViolId="fd27a378-627e-37e3-b41f-2c4129ff6905" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="&quot;for&quot; statement without a &quot;{ }&quot; block" ln="93" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="-2088105684" pkg="examples.junit" rule.header="Provide a '{}' block for conditional statements" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f8da292b-1524-3182-ae4e-5b3df848595d" locEndPos="11" prio="Not Defined" locEndLn="93" goals="0," locStartln="93" sev="3" locRef="33" tool="jtest" lineHash="-2088105684" unbViolId="263a8244-46d1-38fa-ad7d-3878b72d248f" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="Missing Javadoc comment for method 'isZero()'" ln="98" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-1757590243" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="eb5c5af2-9bed-362a-adc3-44908361deda" locEndPos="25" prio="Not Defined" locEndLn="98" goals="0," locStartln="98" sev="3" locRef="33" tool="jtest" lineHash="-1757590243" unbViolId="33cd2832-4205-38b8-bcac-f31f194fbd93" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="The overriding method 'isZero()' does not have an &quot;@Override&quot; annotation" ln="98" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="OOP.AOA" lnHash="-1757590243" pkg="examples.junit" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1bf9bc21-8515-3a55-92a9-0349aeb4f9b3" locEndPos="25" prio="Not Defined" locEndLn="98" goals="0," locStartln="98" sev="3" locRef="33" tool="jtest" lineHash="-1757590243" unbViolId="a02082fd-6b5c-33ae-a493-20f287c0bb95" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="Consider using 'fMonies.isEmpty()' here" ln="99" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="CODSTA.READ.SIE" lnHash="-1455546086" pkg="examples.junit" rule.header="Use 'isEmpty()' for Collections and Maps instead of comparing 'size()' to 0" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="76787028-acf7-311f-b5d3-fda5ce71a663" locEndPos="22" prio="Not Defined" locEndLn="99" goals="0," locStartln="99" sev="3" locRef="33" tool="jtest" lineHash="-1455546086" unbViolId="1b59f762-26ca-3068-98ef-05dcd3bcaddd" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="Missing Javadoc comment for method 'multiply()'" ln="102" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="130457714" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="fabd896b-8b4d-3350-b16a-235417a336b5" locEndPos="26" prio="Not Defined" locEndLn="102" goals="0," locStartln="102" sev="3" locRef="33" tool="jtest" lineHash="130457714" unbViolId="0c669e95-814f-320d-9623-2e8e2391b93a" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="The overriding method 'multiply()' does not have an &quot;@Override&quot; annotation" ln="102" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="OOP.AOA" lnHash="130457714" pkg="examples.junit" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f861cc86-1734-39d8-8252-d57c7652678b" locEndPos="26" prio="Not Defined" locEndLn="102" goals="0," locStartln="102" sev="3" locRef="33" tool="jtest" lineHash="130457714" unbViolId="c3c241f4-b290-3459-a435-b5cc6423c587" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="&quot;if&quot; statement without a &quot;{ }&quot; block" ln="104" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="1110865073" pkg="examples.junit" rule.header="Provide a '{}' block for conditional statements" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6057f639-0892-3af1-a59d-d77b824e9580" locEndPos="10" prio="Not Defined" locEndLn="104" goals="0," locStartln="104" sev="3" locRef="33" tool="jtest" lineHash="1110865073" unbViolId="a624b972-75c6-3aa1-bca0-c82571a20ddb" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="&quot;for&quot; statement without a &quot;{ }&quot; block" ln="105" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="-2049502932" pkg="examples.junit" rule.header="Provide a '{}' block for conditional statements" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f1494257-f9a5-3239-af3b-6d10f6551ea7" locEndPos="15" prio="Not Defined" locEndLn="105" goals="0," locStartln="105" sev="3" locRef="33" tool="jtest" lineHash="-2049502932" unbViolId="e078cd7d-298b-34ef-98a6-e205fc17955a" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="Missing Javadoc comment for method 'negate()'" ln="110" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="1778486000" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3f0b207c-46e9-3708-8666-5255dded27fc" locEndPos="24" prio="Not Defined" locEndLn="110" goals="0," locStartln="110" sev="3" locRef="33" tool="jtest" lineHash="1778486000" unbViolId="9244c211-8732-3377-ac5e-82b0df80a6e6" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="The overriding method 'negate()' does not have an &quot;@Override&quot; annotation" ln="110" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="OOP.AOA" lnHash="1778486000" pkg="examples.junit" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="84369b06-7e98-3034-9290-0e5b41b6cf87" locEndPos="24" prio="Not Defined" locEndLn="110" goals="0," locStartln="110" sev="3" locRef="33" tool="jtest" lineHash="1778486000" unbViolId="1a1ddae2-d1ed-344a-90e7-6f1736bc9fb0" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="&quot;for&quot; statement without a &quot;{ }&quot; block" ln="112" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="-2088105684" pkg="examples.junit" rule.header="Provide a '{}' block for conditional statements" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a647208b-521f-3ef8-889e-5824465dc4fc" locEndPos="11" prio="Not Defined" locEndLn="112" goals="0," locStartln="112" sev="3" locRef="33" tool="jtest" lineHash="-2088105684" unbViolId="b3c42edf-c028-3f52-ae28-2722d057b3b8" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="&quot;if&quot; statement without a &quot;{ }&quot; block" ln="118" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="1366624668" pkg="examples.junit" rule.header="Provide a '{}' block for conditional statements" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1c32ce5a-362d-3d66-aa31-0e9eafcb4432" locEndPos="10" prio="Not Defined" locEndLn="118" goals="0," locStartln="118" sev="3" locRef="33" tool="jtest" lineHash="1366624668" unbViolId="2ec9e1ed-0f1c-3740-8446-8ee6921dbe98" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="Missing Javadoc comment for method 'subtract()'" ln="123" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="78677118" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ea0b1a1d-0044-328a-827c-da021684dcce" locEndPos="26" prio="Not Defined" locEndLn="123" goals="0," locStartln="123" sev="3" locRef="33" tool="jtest" lineHash="78677118" unbViolId="2c4949fa-4d92-306f-8235-950f077f4465" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="The overriding method 'subtract()' does not have an &quot;@Override&quot; annotation" ln="123" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="OOP.AOA" lnHash="78677118" pkg="examples.junit" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ba0c7a3a-5fe9-3ef7-afc9-c211c1f72015" locEndPos="26" prio="Not Defined" locEndLn="123" goals="0," locStartln="123" sev="3" locRef="33" tool="jtest" lineHash="78677118" unbViolId="371b37e0-a54b-3e69-8060-2364c2518e46" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="Missing Javadoc comment for method 'toString()'" ln="128" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="622124256" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e0a8df71-841c-3ed9-8876-cddfb9f61dd6" locEndPos="26" prio="Not Defined" locEndLn="128" goals="0," locStartln="128" sev="3" locRef="33" tool="jtest" lineHash="622124256" unbViolId="ff6250b3-21d2-3ed7-ba90-e2092ceb7bea" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="Single character '{' using double quotes in string concatenation" ln="130" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="OPT.STR" lnHash="-2081986309" pkg="examples.junit" rule.header="Use single quotes instead of double quotes for single character string concatenation" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3b91506f-da51-3c84-9396-4a50fca0338b" locEndPos="25" prio="Not Defined" locEndLn="130" goals="0," locStartln="130" sev="3" locRef="33" tool="jtest" lineHash="-2081986309" unbViolId="ec29ec51-bccb-341e-8ada-4f74a0e4568f" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="&quot;for&quot; statement without a &quot;{ }&quot; block" ln="131" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="-2088105684" pkg="examples.junit" rule.header="Provide a '{}' block for conditional statements" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="53123e28-7d65-362c-9113-2a02b10eea67" locEndPos="11" prio="Not Defined" locEndLn="131" goals="0," locStartln="131" sev="3" locRef="33" tool="jtest" lineHash="-2088105684" unbViolId="6e89ba09-d5cc-3fd7-93c2-8aa4bbe9ce26" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="Single character '}' using double quotes in string concatenation" ln="133" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="OPT.STR" lnHash="-2081926727" pkg="examples.junit" rule.header="Use single quotes instead of double quotes for single character string concatenation" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4a2f9f74-26c6-3644-902f-f3c4eb025b34" locEndPos="25" prio="Not Defined" locEndLn="133" goals="0," locStartln="133" sev="3" locRef="33" tool="jtest" lineHash="-2081926727" unbViolId="dfc54944-14c4-36dc-bf88-3d21712291ce" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="Missing Javadoc comment for method 'appendTo()'" ln="137" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-153075023" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="50f49e9f-13b4-3c71-aee1-5350864491c7" locEndPos="24" prio="Not Defined" locEndLn="137" goals="0," locStartln="137" sev="3" locRef="33" tool="jtest" lineHash="-153075023" unbViolId="5dba7c2b-a50f-333b-92c6-9aa31f07f8f3" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="The overriding method 'appendTo()' does not have an &quot;@Override&quot; annotation" ln="137" locFile="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" auth="mgorecka" rule="OOP.AOA" lnHash="-153075023" pkg="examples.junit" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="547f9825-7899-330e-a743-392b04b8eb0b" locEndPos="24" prio="Not Defined" locEndLn="137" goals="0," locStartln="137" sev="3" locRef="33" tool="jtest" lineHash="-153075023" unbViolId="a4437342-a951-34f7-b246-aef97533db68" risk="Undefined" locType="sr" hash="-113332437" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="3" locFile="/com.parasoft:demo/src/main/java/examples/junit/NaiveStringBuilder.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.junit" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9e40d2ea-7b21-3f6c-bed3-4aa0fdfe9dbf" locEndPos="2" prio="Not Defined" locEndLn="3" goals="0," locStartln="3" sev="3" locRef="34" tool="jtest" lineHash="46511" unbViolId="ccdc25c0-c79f-3da4-9303-66994cb8d04c" risk="Undefined" locType="sr" hash="1434598914" />
    <StdViol msg="Missing Javadoc comment for method 'createInstance()'" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/junit/NaiveStringBuilder.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="1470197963" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="37" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="fa85ca46-043f-36cc-973f-9bc859ef1a50" locEndPos="51" prio="Not Defined" locEndLn="15" goals="0," locStartln="15" sev="3" locRef="34" tool="jtest" lineHash="1470197963" unbViolId="b66499e6-44a4-31b1-9800-b7d6a2c6cb0a" risk="Undefined" locType="sr" hash="1434598914" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="9" locFile="/com.parasoft:demo/src/main/java/examples/junit/SimpleObjectHandler.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.junit" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="83e36427-e07b-3504-a226-4c25c088eaa6" locEndPos="2" prio="Not Defined" locEndLn="9" goals="0," locStartln="9" sev="3" locRef="35" tool="jtest" lineHash="46511" unbViolId="1d3c2b92-cd1a-3186-aaaf-a1b6ebc636b1" risk="Undefined" locType="sr" hash="1554031451" />
    <StdViol msg="Missing Javadoc comment for method 'SimpleObjectHandler()'" ln="17" locFile="/com.parasoft:demo/src/main/java/examples/junit/SimpleObjectHandler.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-1633834077" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="11" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="560d0118-fce2-3e17-ada5-1ec1ac135100" locEndPos="30" prio="Not Defined" locEndLn="17" goals="0," locStartln="17" sev="3" locRef="35" tool="jtest" lineHash="-1633834077" unbViolId="9022cb17-c580-372f-8178-6a69dc671c9f" risk="Undefined" locType="sr" hash="1554031451" />
    <StdViol msg="The parameter 'element' uses the same name as a field declared in an enclosing scope, which may cause confusion" ln="17" locFile="/com.parasoft:demo/src/main/java/examples/junit/SimpleObjectHandler.java" auth="mgorecka" rule="OOP.HIF" lnHash="-1633834077" pkg="examples.junit" rule.header="Do not hide fields and local variables declared in enclosing scopes" locStartPos="38" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3106095d-fd49-3020-922f-7e55483e9117" locEndPos="45" prio="Not Defined" locEndLn="17" goals="0," locStartln="17" sev="3" locRef="35" tool="jtest" lineHash="-1633834077" unbViolId="c9c961aa-bb99-3fe8-987e-b0e97a75e836" risk="Undefined" locType="sr" hash="1554031451" />
    <StdViol msg="Missing Javadoc comment for method 'getList()'" ln="22" locFile="/com.parasoft:demo/src/main/java/examples/junit/SimpleObjectHandler.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="478851347" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="38" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="23dcefef-f318-305f-a4c7-70ead39a70b4" locEndPos="45" prio="Not Defined" locEndLn="22" goals="0," locStartln="22" sev="3" locRef="35" tool="jtest" lineHash="478851347" unbViolId="84f63144-9f99-3857-8a38-e3838a530842" risk="Undefined" locType="sr" hash="1554031451" />
    <StdViol msg="Initial container capacity is not specified" ln="23" locFile="/com.parasoft:demo/src/main/java/examples/junit/SimpleObjectHandler.java" auth="mgorecka" rule="OPT.DIC" lnHash="-971766446" pkg="examples.junit" rule.header="Define initial capacities for 'ArrayList', 'HashMap', 'HashSet', 'Hashtable', 'Vector' and 'WeakHashMap'" locStartPos="33" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="e5b9205a-de05-3b9e-aa9c-505625c524dc" locEndPos="42" prio="Not Defined" locEndLn="23" goals="0," locStartln="23" sev="3" locRef="35" tool="jtest" lineHash="-971766446" unbViolId="7db94df0-0746-3629-9bf0-a8b5fb36ae61" risk="Undefined" locType="sr" hash="1554031451" />
    <StdViol msg="Missing Javadoc comment for method 'getMap()'" ln="27" locFile="/com.parasoft:demo/src/main/java/examples/junit/SimpleObjectHandler.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-82842923" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="35" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1b975afe-a058-332e-b88d-484d2e64c7d7" locEndPos="41" prio="Not Defined" locEndLn="27" goals="0," locStartln="27" sev="3" locRef="35" tool="jtest" lineHash="-82842923" unbViolId="d306284e-372b-36d5-ae52-8d08b052bafa" risk="Undefined" locType="sr" hash="1554031451" />
    <StdViol msg="Initial container capacity is not specified" ln="28" locFile="/com.parasoft:demo/src/main/java/examples/junit/SimpleObjectHandler.java" auth="mgorecka" rule="OPT.DIC" lnHash="1699194081" pkg="examples.junit" rule.header="Define initial capacities for 'ArrayList', 'HashMap', 'HashSet', 'Hashtable', 'Vector' and 'WeakHashMap'" locStartPos="28" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="0279ae17-6af4-3a44-923d-19a951e5cdb3" locEndPos="35" prio="Not Defined" locEndLn="28" goals="0," locStartln="28" sev="3" locRef="35" tool="jtest" lineHash="1699194081" unbViolId="466fc33b-68bc-3c98-adc9-0be4f7aa9306" risk="Undefined" locType="sr" hash="1554031451" />
    <StdViol msg="Missing Javadoc comment for method 'getString()'" ln="32" locFile="/com.parasoft:demo/src/main/java/examples/junit/SimpleObjectHandler.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-1638921141" pkg="examples.junit" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="143b4b4a-37ba-3efe-a7c5-4d48b43306eb" locEndPos="27" prio="Not Defined" locEndLn="32" goals="0," locStartln="32" sev="3" locRef="35" tool="jtest" lineHash="-1638921141" unbViolId="a7e28b12-64b3-3850-835a-bb03758541dd" risk="Undefined" locType="sr" hash="1554031451" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="11" locFile="/com.parasoft:demo/src/main/java/examples/metrics/MetricsExample.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="1994209057" pkg="examples.metrics" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="49f61d14-db8a-39c5-8492-1d737f582a60" locEndPos="2" prio="Not Defined" locEndLn="11" goals="0," locStartln="11" sev="3" locRef="36" tool="jtest" lineHash="1994209057" unbViolId="d4f2be9f-a0b1-35ad-813c-35804e03ac59" risk="Undefined" locType="sr" hash="-1994237948" />
    <StdViol msg="Missing Javadoc comment for 'MetricsExample'" ln="11" locFile="/com.parasoft:demo/src/main/java/examples/metrics/MetricsExample.java" auth="mgorecka" rule="JAVADOC.PJDC" lnHash="1994209057" pkg="examples.metrics" rule.header="Provide Javadoc comments and descriptions for types" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c9965098-c82e-30de-8555-8c77bffc9791" locEndPos="27" prio="Not Defined" locEndLn="11" goals="0," locStartln="11" sev="3" locRef="36" tool="jtest" lineHash="1994209057" unbViolId="252ff7aa-31ee-3042-a85a-ea7794344028" risk="Undefined" locType="sr" hash="-1994237948" />
    <StdViol msg="Missing Javadoc comment for method 'collectErrorCodesFromFiles()'" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/metrics/MetricsExample.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="844216599" pkg="examples.metrics" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="022567cc-0a66-3f3d-b89b-de838b6a4dcc" locEndPos="50" prio="Not Defined" locEndLn="13" goals="0," locStartln="13" sev="3" locRef="36" tool="jtest" lineHash="844216599" unbViolId="89ccafd7-db68-3764-9ba9-4f488da8fc59" risk="Undefined" locType="sr" hash="-1994237948" />
    <StdViol msg="Variable name 'aFile' does not match user-specified regular expression '(s|List|Set|Array|Table)$' for array and collection variables" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/metrics/MetricsExample.java" auth="mgorecka" rule="NAMING.NAC" lnHash="844216599" pkg="examples.metrics" rule.header="Use a naming convention for array and collection variables" locStartPos="58" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="72a4239d-1d42-340e-b9d3-ef68a495802a" locEndPos="63" prio="Not Defined" locEndLn="13" goals="0," locStartln="13" sev="3" locRef="36" tool="jtest" lineHash="844216599" unbViolId="e6fe67ab-b463-3543-9ce7-e303f448c325" risk="Undefined" locType="sr" hash="-1994237948" />
    <StdViol msg="Variable name 'hsErrorCode' does not match user-specified regular expression '(s|List|Set|Array|Table)$' for array and collection variables" ln="14" locFile="/com.parasoft:demo/src/main/java/examples/metrics/MetricsExample.java" auth="mgorecka" rule="NAMING.NAC" lnHash="72068051" pkg="examples.metrics" rule.header="Use a naming convention for array and collection variables" locStartPos="21" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9f299ea2-1ad0-3209-b731-15c0b538c73a" locEndPos="32" prio="Not Defined" locEndLn="14" goals="0," locStartln="14" sev="3" locRef="36" tool="jtest" lineHash="72068051" unbViolId="4f625924-79d1-3956-a3fa-07228266596a" risk="Undefined" locType="sr" hash="-1994237948" />
    <StdViol msg="Initial container capacity is not specified" ln="14" locFile="/com.parasoft:demo/src/main/java/examples/metrics/MetricsExample.java" auth="mgorecka" rule="OPT.DIC" lnHash="72068051" pkg="examples.metrics" rule.header="Define initial capacities for 'ArrayList', 'HashMap', 'HashSet', 'Hashtable', 'Vector' and 'WeakHashMap'" locStartPos="39" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="136625c9-3f9c-376e-8876-ce2fe155dd9c" locEndPos="46" prio="Not Defined" locEndLn="14" goals="0," locStartln="14" sev="3" locRef="36" tool="jtest" lineHash="72068051" unbViolId="3b5bb4b7-4993-3ce0-a802-2373280e9be0" risk="Undefined" locType="sr" hash="-1994237948" />
    <StdViol msg="You may not want to use the type 'FileReader' because it does not allow you to specify an encoding option" ln="20" locFile="/com.parasoft:demo/src/main/java/examples/metrics/MetricsExample.java" auth="mgorecka" rule="INTER.SEO" lnHash="-377145668" pkg="examples.metrics" rule.header="Avoid calling methods and constructors which do not allow you to specify a character encoding option" locStartPos="56" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b2299f68-98a7-31fb-998a-1a41dee7dfc7" locEndPos="66" prio="Not Defined" locEndLn="20" goals="0," locStartln="20" sev="3" locRef="36" tool="jtest" lineHash="-377145668" unbViolId="c03781ec-3806-3c16-b34d-21ac520c1822" risk="Undefined" locType="sr" hash="-1994237948" />
    <StdViol msg="Print method 'printStackTrace()' is not allowed in a &quot;catch&quot; block" ln="32" locFile="/com.parasoft:demo/src/main/java/examples/metrics/MetricsExample.java" auth="mgorecka" rule="SECURITY.ESD.PEO" lnHash="497810129" pkg="examples.metrics" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="44" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e8f28cf1-f2c9-385d-b73b-d799bf85a1ee" locEndPos="59" prio="Not Defined" locEndLn="32" goals="0," locStartln="32" sev="1" locRef="36" tool="jtest" lineHash="497810129" unbViolId="05c57a61-5533-3a89-9121-30de74f8e3a1" risk="Undefined" locType="sr" hash="-1994237948" />
    <StdViol msg="The 'printStackTrace()' method of a &quot;Throwable&quot; object is called here" ln="32" locFile="/com.parasoft:demo/src/main/java/examples/metrics/MetricsExample.java" auth="mgorecka" rule="SECURITY.WSC.ACPST" lnHash="497810129" pkg="examples.metrics" rule.header="Do not call the 'printStackTrace()' method of &quot;Throwable&quot; objects" locStartPos="44" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f6e390e3-3f6f-39c5-9c0e-878e0307d724" locEndPos="59" prio="Not Defined" locEndLn="32" goals="0," locStartln="32" sev="3" locRef="36" tool="jtest" lineHash="497810129" unbViolId="1c8df5ac-a88f-3bf5-85f6-92a3ba1ef27d" risk="Undefined" locType="sr" hash="-1994237948" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="8" locFile="/com.parasoft:demo/src/main/java/examples/mock/CharacterReader.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.mock" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="582e2e20-698c-32cc-b5c6-a6d0724ea4cf" locEndPos="2" prio="Not Defined" locEndLn="8" goals="0," locStartln="8" sev="3" locRef="37" tool="jtest" lineHash="46511" unbViolId="9fd28845-4ad6-3a00-9758-f12452ad7774" risk="Undefined" locType="sr" hash="1497176251" />
    <StdViol msg="Missing Javadoc comment for method 'read()'" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/mock/CharacterReader.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="376578699" pkg="examples.mock" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5502c499-c4b6-3d55-b3c6-397a4e180a02" locEndPos="20" prio="Not Defined" locEndLn="13" goals="0," locStartln="13" sev="3" locRef="37" tool="jtest" lineHash="376578699" unbViolId="b0a3d962-d70d-3a28-bf93-bbb48faf89c8" risk="Undefined" locType="sr" hash="1497176251" />
    <StdViol msg="Missing Javadoc comment for method 'readString()'" ln="19" locFile="/com.parasoft:demo/src/main/java/examples/mock/CharacterReader.java" locStartln="19" sev="3" auth="mgorecka" locRef="37" rule="JAVADOC.PJDM" lnHash="-711746689" pkg="examples.mock" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="-711746689" unbViolId="6a1bf22b-68c7-3262-94f1-d5d015cd8fe3" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1029a90e-99ed-3694-9d89-25616d437b02" locEndPos="28" locType="sr" hash="1497176251" locEndLn="19" goals="0," />
    <StdViol msg="Variable name 'arr' does not match user-specified regular expression '(s|List|Set|Array|Table)$' for array and collection variables" ln="23" locFile="/com.parasoft:demo/src/main/java/examples/mock/CharacterReader.java" locStartln="23" sev="3" auth="mgorecka" locRef="37" rule="NAMING.NAC" lnHash="847365016" pkg="examples.mock" rule.header="Use a naming convention for array and collection variables" tool="jtest" lineHash="847365016" unbViolId="4b1693c2-a3c7-3d37-a6ae-149f9d2c9066" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="44e90d0f-7257-376b-855a-6673d18118d3" locEndPos="26" locType="sr" hash="1497176251" locEndLn="23" goals="0," />
    <StdViol msg="It may be possible to move the declaration of the variable 'arr' outside of the enclosing loop" ln="23" locFile="/com.parasoft:demo/src/main/java/examples/mock/CharacterReader.java" locStartln="23" sev="3" auth="mgorecka" locRef="37" rule="OPT.LIOL" lnHash="847365016" pkg="examples.mock" rule.header="Move invariants outside of loops wherever possible" tool="jtest" lineHash="847365016" unbViolId="381b62bd-470e-378d-99f3-292016be98be" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e3a25c7b-d205-3ba3-b25c-38da94a1cf40" locEndPos="26" locType="sr" hash="1497176251" locEndLn="23" goals="0," />
    <StdViol msg="This &quot;else&quot; statement is unnecessary" ln="34" locFile="/com.parasoft:demo/src/main/java/examples/mock/CharacterReader.java" locStartln="34" sev="3" auth="mgorecka" locRef="37" rule="UC.UES" lnHash="2005176407" pkg="examples.mock" rule.header="Avoid unnecessary &quot;else&quot; statements" tool="jtest" lineHash="2005176407" unbViolId="99850c30-ccda-379e-b851-484609c61c20" locStartPos="14" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d88b7a30-9c97-3ee0-94d2-faf3a0d43c67" locEndPos="18" locType="sr" hash="1497176251" locEndLn="34" goals="0," />
    <StdViol msg="Use 2 blank lines before type declaration" ln="46" locFile="/com.parasoft:demo/src/main/java/examples/mock/CharacterReader.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="-1216890291" pkg="examples.mock" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f090db71-54b1-3576-b588-4aa6a1bbadf4" locEndPos="10" prio="Not Defined" locEndLn="46" goals="0," locStartln="46" sev="3" locRef="37" tool="jtest" lineHash="-1216890291" unbViolId="79c47856-c0e6-332c-bdcd-c9c3da3dec85" risk="Undefined" locType="sr" hash="1497176251" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="6" locFile="/com.parasoft:demo/src/main/java/examples/mock/ConstructorExample.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.mock" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e18a4ee1-3e1f-32e6-b32a-818b1c09c0a3" locEndPos="2" urgent="true" prio="Not Defined" locEndLn="6" goals="1," locStartln="6" sev="3" locRef="38" tool="jtest" lineHash="46511" unbViolId="1b2f10ce-9886-3df8-9302-b53445993add" risk="Undefined" locType="sr" hash="-458905718" />
    <StdViol msg="Missing Javadoc comment for method 'getFileLength()'" ln="11" locFile="/com.parasoft:demo/src/main/java/examples/mock/ConstructorExample.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-906499965" pkg="examples.mock" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d135195d-97f0-3f16-b69a-ac4629ac0797" locEndPos="36" urgent="true" prio="Not Defined" locEndLn="11" goals="1," locStartln="11" sev="3" locRef="38" tool="jtest" lineHash="-906499965" unbViolId="c8123f06-1a7d-300b-876c-092af72b90bd" risk="Undefined" locType="sr" hash="-458905718" />
    <StdViol msg="Variable 'file' may not have a close resource" ln="12" locFile="/com.parasoft:demo/src/main/java/examples/mock/ConstructorExample.java" auth="mgorecka" rule="PB.CLOSE" lnHash="89628897" pkg="examples.mock" rule.header="Unrestricted lock resource" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="26a5628e-a656-3763-bb7f-74ba9e2640f0" locEndPos="65" urgent="true" prio="Not Defined" locEndLn="12" goals="1," locStartln="12" sev="1" locRef="38" tool="jtest" lineHash="89628897" unbViolId="089a6c7d-79ce-3d20-b964-f8ef18384554" risk="Undefined" locType="sr" hash="-458905718" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="6" locFile="/com.parasoft:demo/src/main/java/examples/mock/FileExample.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.mock" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d479a4b8-cdda-3fb3-ba6e-9219cf3686c3" locEndPos="2" prio="Not Defined" locEndLn="6" goals="0," locStartln="6" sev="3" locRef="39" tool="jtest" lineHash="46511" unbViolId="5327c6bf-2a34-3a36-ae5a-58e691a3803e" risk="Undefined" locType="sr" hash="-220867651" />
    <StdViol msg="Missing Javadoc comment for method 'analyze()'" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/mock/FileExample.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-1659185644" pkg="examples.mock" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="25" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="52e5c6ff-c370-3982-8a19-331f7a09ff1d" locEndPos="32" prio="Not Defined" locEndLn="13" goals="0," locStartln="13" sev="3" locRef="39" tool="jtest" lineHash="-1659185644" unbViolId="b258fb4c-f9f4-3d6c-92a2-befb4b04547c" risk="Undefined" locType="sr" hash="-220867651" />
    <StdViol msg="Missing Javadoc comment for method 'isOversize()'" ln="26" locFile="/com.parasoft:demo/src/main/java/examples/mock/FileExample.java" locStartln="26" sev="3" auth="mgorecka" locRef="39" rule="JAVADOC.PJDM" lnHash="494426400" pkg="examples.mock" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="494426400" unbViolId="9ed0eee8-883a-3acc-8850-26bae56736f1" locStartPos="26" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="621851cd-7f70-31d5-8833-765c336a2c0f" locEndPos="36" locType="sr" hash="-220867651" locEndLn="26" goals="0," />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="31" locFile="/com.parasoft:demo/src/main/java/examples/mock/FileExample.java" locStartln="31" sev="3" auth="mgorecka" locRef="39" rule="SECURITY.ESD.SIO" lnHash="1700658549" pkg="examples.mock" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" tool="jtest" lineHash="1700658549" unbViolId="2660de51-0a17-3ae1-97cb-14ad634635df" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="cf66ff02-047c-3a32-a7c9-3d31ca639edf" locEndPos="53" locType="sr" hash="-220867651" locEndLn="31" goals="0," />
    <StdViol msg="Use 2 blank lines before type declaration" ln="7" locFile="/com.parasoft:demo/src/main/java/examples/mock/Interpreter.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="-666841258" pkg="examples.mock" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="90ee5540-9ba4-34de-b55e-42e2e243b34c" locEndPos="2" prio="Not Defined" locEndLn="7" goals="0," locStartln="7" sev="3" locRef="40" tool="jtest" lineHash="-666841258" unbViolId="46569181-95a5-3a47-a19b-0a9565b4a82c" risk="Undefined" locType="sr" hash="-141343473" />
    <StdViol msg="Missing Javadoc comment for 'Interpreter'" ln="7" locFile="/com.parasoft:demo/src/main/java/examples/mock/Interpreter.java" auth="mgorecka" rule="JAVADOC.PJDC" lnHash="-666841258" pkg="examples.mock" rule.header="Provide Javadoc comments and descriptions for types" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="197a33bd-e179-359e-bc41-5ed6845571e2" locEndPos="24" prio="Not Defined" locEndLn="7" goals="0," locStartln="7" sev="3" locRef="40" tool="jtest" lineHash="-666841258" unbViolId="ac5e496f-f482-358d-8a3b-ea0dab0cf326" risk="Undefined" locType="sr" hash="-141343473" />
    <StdViol msg="Missing Javadoc comment for method 'Interpreter()'" ln="9" locFile="/com.parasoft:demo/src/main/java/examples/mock/Interpreter.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="2027754921" pkg="examples.mock" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="11" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="cb9e3e23-837a-3bf9-a857-4432a7ecce6d" locEndPos="22" prio="Not Defined" locEndLn="9" goals="0," locStartln="9" sev="3" locRef="40" tool="jtest" lineHash="2027754921" unbViolId="1ac03713-b4fb-35f8-bbc7-63e772840450" risk="Undefined" locType="sr" hash="-141343473" />
    <StdViol msg="Missing Javadoc comment for method 'getNext()'" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/mock/Interpreter.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-1680656288" pkg="examples.mock" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4a86d8dd-1191-3b55-868d-dc9d3fb8f85b" locEndPos="26" prio="Not Defined" locEndLn="13" goals="0," locStartln="13" sev="3" locRef="40" tool="jtest" lineHash="-1680656288" unbViolId="f05f1ec1-4074-36d9-becc-0bde8b07177b" risk="Undefined" locType="sr" hash="-141343473" />
    <StdViol msg="Make sure 'System.err.println' is not a leftover debug statement" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/mock/Interpreter.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="-643698138" pkg="examples.mock" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d061fdbd-4ca6-36ba-ba21-f7478699fc4d" locEndPos="52" prio="Not Defined" locEndLn="15" goals="0," locStartln="15" sev="3" locRef="40" tool="jtest" lineHash="-643698138" unbViolId="58c0d2c3-eb22-3375-b14b-00c1945b30c7" risk="Undefined" locType="sr" hash="-141343473" />
    <StdViol msg="Make sure 'System.err.println' is not a leftover debug statement" ln="17" locFile="/com.parasoft:demo/src/main/java/examples/mock/Interpreter.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="1883900656" pkg="examples.mock" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="55d1e229-1d8a-3a80-beaa-af262eece5ec" locEndPos="44" prio="Not Defined" locEndLn="17" goals="0," locStartln="17" sev="3" locRef="40" tool="jtest" lineHash="1883900656" unbViolId="d4851a63-330a-3e24-9ed5-545cce18f2bb" risk="Undefined" locType="sr" hash="-141343473" />
    <StdViol msg="Make sure 'System.err.println' is not a leftover debug statement" ln="19" locFile="/com.parasoft:demo/src/main/java/examples/mock/Interpreter.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="86950258" pkg="examples.mock" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0996e5d0-5ee9-32ed-a0dd-6e0b463a4770" locEndPos="44" prio="Not Defined" locEndLn="19" goals="0," locStartln="19" sev="3" locRef="40" tool="jtest" lineHash="86950258" unbViolId="e22f4ad9-ee50-3dbd-a67f-c4f45f127db4" risk="Undefined" locType="sr" hash="-141343473" />
    <StdViol msg="&quot;if&quot; statement without a &quot;{ }&quot; block" ln="20" locFile="/com.parasoft:demo/src/main/java/examples/mock/Interpreter.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="-791225342" pkg="examples.mock" rule.header="Provide a '{}' block for conditional statements" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5e3ee104-6089-374e-b317-8092b9ebd35a" locEndPos="10" prio="Not Defined" locEndLn="20" goals="0," locStartln="20" sev="3" locRef="40" tool="jtest" lineHash="-791225342" unbViolId="2d6388b3-9f41-30b6-8196-64875aa9c5b6" risk="Undefined" locType="sr" hash="-141343473" />
    <StdViol msg="command.equals (&quot;ADD&quot;) is called, use &quot;ADD&quot;.equals (command) instead" ln="20" locFile="/com.parasoft:demo/src/main/java/examples/mock/Interpreter.java" auth="mgorecka" rule="PB.RE.ISEM" lnHash="-791225342" pkg="examples.mock" rule.header="Do not call 'String.equals(constant)' or 'String.equalsIgnoreCase(constant)'" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="bb3b9118-06f0-395c-9dd1-a7cd22d6efaf" locEndPos="32" prio="Not Defined" locEndLn="20" goals="0," locStartln="20" sev="3" locRef="40" tool="jtest" lineHash="-791225342" unbViolId="2ad52f0e-468a-30fd-886c-0908124c044e" risk="Undefined" locType="sr" hash="-141343473" />
    <StdViol msg="&quot;if&quot; statement without a &quot;{ }&quot; block" ln="22" locFile="/com.parasoft:demo/src/main/java/examples/mock/Interpreter.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="908569930" pkg="examples.mock" rule.header="Provide a '{}' block for conditional statements" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a87e9641-4934-3823-9120-24046a606710" locEndPos="15" prio="Not Defined" locEndLn="22" goals="0," locStartln="22" sev="3" locRef="40" tool="jtest" lineHash="908569930" unbViolId="90d73afb-37e9-3724-a09e-958b9d6223c8" risk="Undefined" locType="sr" hash="-141343473" />
    <StdViol msg="command.equals (&quot;SUB&quot;) is called, use &quot;SUB&quot;.equals (command) instead" ln="22" locFile="/com.parasoft:demo/src/main/java/examples/mock/Interpreter.java" auth="mgorecka" rule="PB.RE.ISEM" lnHash="908569930" pkg="examples.mock" rule.header="Do not call 'String.equals(constant)' or 'String.equalsIgnoreCase(constant)'" locStartPos="32" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="29976b68-20d1-3235-a66a-8db804fa5b10" locEndPos="37" prio="Not Defined" locEndLn="22" goals="0," locStartln="22" sev="3" locRef="40" tool="jtest" lineHash="908569930" unbViolId="01af3c96-5a83-3b0d-b147-08a6631494ce" risk="Undefined" locType="sr" hash="-141343473" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="8" locFile="/com.parasoft:demo/src/main/java/examples/mock/MultiSourceCharacterReader.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.mock" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4b29a242-e4e5-38dd-927b-94c24225dac5" locEndPos="2" prio="Not Defined" locEndLn="8" goals="0," locStartln="8" sev="3" locRef="41" tool="jtest" lineHash="46511" unbViolId="9a259943-aecb-3ee7-ad0d-3213caf14a54" risk="Undefined" locType="sr" hash="-762775565" />
    <StdViol msg="Instance field is declared &quot;public&quot;: _readablePublic" ln="19" locFile="/com.parasoft:demo/src/main/java/examples/mock/MultiSourceCharacterReader.java" auth="mgorecka" rule="OOP.AF" lnHash="154914236" pkg="examples.mock" rule.header="Avoid &quot;public&quot;/&quot;protected&quot;/package-private fields" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b05106e9-1f4e-3e44-bb30-e889bd2d290b" locEndPos="35" prio="Not Defined" locEndLn="19" goals="0," locStartln="19" sev="3" locRef="41" tool="jtest" lineHash="154914236" unbViolId="86025662-ba97-34e1-86cc-9793d4ecd29e" risk="Undefined" locType="sr" hash="-762775565" />
    <StdViol msg="Missing Javadoc comment for method 'MultiSourceCharacterReader()'" ln="21" locFile="/com.parasoft:demo/src/main/java/examples/mock/MultiSourceCharacterReader.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-50883683" pkg="examples.mock" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="11" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="54714120-1fb4-3a50-96fe-3b053f980c58" locEndPos="37" prio="Not Defined" locEndLn="21" goals="0," locStartln="21" sev="3" locRef="41" tool="jtest" lineHash="-50883683" unbViolId="fb0aa955-c299-3235-a7da-900728775d0b" risk="Undefined" locType="sr" hash="-762775565" />
    <StdViol msg="Missing Javadoc comment for method 'initialize()'" ln="25" locFile="/com.parasoft:demo/src/main/java/examples/mock/MultiSourceCharacterReader.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="1940497537" pkg="examples.mock" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="02a0d47a-a140-3942-9496-36dd667ce2ca" locEndPos="26" prio="Not Defined" locEndLn="25" goals="0," locStartln="25" sev="3" locRef="41" tool="jtest" lineHash="1940497537" unbViolId="f97f9507-3b13-3460-8629-9d6056ce59a1" risk="Undefined" locType="sr" hash="-762775565" />
    <StdViol msg="Missing Javadoc comment for method 'performAction()'" ln="29" locFile="/com.parasoft:demo/src/main/java/examples/mock/MultiSourceCharacterReader.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-2044668949" pkg="examples.mock" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="170cc206-d9aa-39f5-9fe6-e8b33f56be41" locEndPos="29" prio="Not Defined" locEndLn="29" goals="0," locStartln="29" sev="3" locRef="41" tool="jtest" lineHash="-2044668949" unbViolId="e4542d8c-b365-3bda-91c6-848c9851c43d" risk="Undefined" locType="sr" hash="-762775565" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="3" locFile="/com.parasoft:demo/src/main/java/examples/nbank/AbstractTransaction.java" auth="John" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.nbank" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="db486768-b64b-3430-9221-a19091dfe6d4" locEndPos="2" urgent="true" prio="Not Defined" locEndLn="3" goals="1," locStartln="3" sev="3" locRef="42" tool="jtest" lineHash="46511" unbViolId="9ca491c3-82b1-30fc-8843-fd9d94df3b54" risk="Undefined" locType="sr" hash="-251506569" />
    <StdViol msg="Missing Javadoc comment for method 'AbstractTransaction()'" ln="10" locFile="/com.parasoft:demo/src/main/java/examples/nbank/AbstractTransaction.java" auth="John" rule="JAVADOC.PJDM" lnHash="1793344417" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="11" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b75aec8b-da96-38c4-817a-5837f4770089" locEndPos="30" urgent="true" prio="Not Defined" locEndLn="10" goals="1," locStartln="10" sev="3" locRef="42" tool="jtest" lineHash="1793344417" unbViolId="04c20c8a-fc6f-34aa-86b6-40ecfb5f10d5" risk="Undefined" locType="sr" hash="-251506569" />
    <StdViol msg="&quot;if&quot; statement without a &quot;{ }&quot; block" ln="11" locFile="/com.parasoft:demo/src/main/java/examples/nbank/AbstractTransaction.java" auth="John" rule="CODSTA.BP.BLK" lnHash="347821559" pkg="examples.nbank" rule.header="Provide a '{}' block for conditional statements" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c6bac1ff-9695-3d60-b0aa-81ac4730f4c7" locEndPos="10" urgent="true" prio="Not Defined" locEndLn="11" goals="1," locStartln="11" sev="3" locRef="42" tool="jtest" lineHash="347821559" unbViolId="1be45ff2-7207-3735-9b08-967e86e405de" risk="Undefined" locType="sr" hash="-251506569" />
    <StdViol msg="Missing Javadoc comment for method 'fee()'" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/nbank/AbstractTransaction.java" auth="John" rule="JAVADOC.PJDM" lnHash="-28505286" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6f842f2a-584a-3663-88b5-9a40ee32fdfc" locEndPos="18" urgent="true" prio="Not Defined" locEndLn="15" goals="1," locStartln="15" sev="3" locRef="42" tool="jtest" lineHash="-28505286" unbViolId="2c5b93ba-c2e4-3719-85f9-64be8655ca64" risk="Undefined" locType="sr" hash="-251506569" />
    <StdViol msg="The overriding method 'fee()' does not have an &quot;@Override&quot; annotation" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/nbank/AbstractTransaction.java" auth="John" rule="OOP.AOA" lnHash="-28505286" pkg="examples.nbank" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="dc424ed5-0da9-3640-8876-23e13810c4f5" locEndPos="18" urgent="true" prio="Not Defined" locEndLn="15" goals="1," locStartln="15" sev="3" locRef="42" tool="jtest" lineHash="-28505286" unbViolId="ee20b8ef-ebeb-311c-856a-abcc89e14751" risk="Undefined" locType="sr" hash="-251506569" />
    <StdViol msg="&quot;import&quot; with star &quot;*&quot;, Single-type imports should be used instead" ln="3" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" locStartln="3" sev="3" auth="Mark Wilson" locRef="43" rule="CODSTA.BP.IMPTD" lnHash="1161190312" pkg="examples.nbank" rule.header="Avoid or enforce usage of '*' form of import statements" tool="jtest" lineHash="1161190312" unbViolId="144ee419-99fa-3036-a86e-d01886818a79" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1fc791c2-86fa-3642-abd7-df39765bbe8d" locEndPos="17" locType="sr" urgent="true" hash="-2109136904" locEndLn="3" goals="1," />
    <StdViol msg="Use 2 blank lines before type declaration" ln="7" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" auth="Mark Wilson" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.nbank" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ae19073a-7c2c-3ea0-92e0-cae5c4dff780" locEndPos="2" urgent="true" prio="Not Defined" locEndLn="7" goals="1," locStartln="7" sev="3" locRef="43" tool="jtest" lineHash="46511" unbViolId="d584c78e-b744-39dc-bf76-d16a81d5238d" risk="Undefined" locType="sr" hash="-2109136904" />
    <StdViol msg="Missing Javadoc comment for method 'Account()'" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" auth="Mark Wilson" rule="JAVADOC.PJDM" lnHash="1014411894" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="11" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9424ab8b-9fa6-3d0f-b5d4-774b7ac141a3" locEndPos="18" urgent="true" prio="Not Defined" locEndLn="24" goals="1," locStartln="24" sev="3" locRef="43" tool="jtest" lineHash="1014411894" unbViolId="aacec7bf-42ed-3a74-9567-c6b045159421" risk="Undefined" locType="sr" hash="-2109136904" />
    <StdViol msg="&quot;if&quot; statement without a &quot;{ }&quot; block" ln="25" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" auth="Mark Wilson" rule="CODSTA.BP.BLK" lnHash="-414148191" pkg="examples.nbank" rule.header="Provide a '{}' block for conditional statements" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2aad74de-06f9-36fa-9fdd-91f8bf72d29d" locEndPos="10" urgent="true" prio="Not Defined" locEndLn="25" goals="1," locStartln="25" sev="3" locRef="43" tool="jtest" lineHash="-414148191" unbViolId="ae494628-09a5-3f56-8e5a-a2690b1bd08e" risk="Undefined" locType="sr" hash="-2109136904" />
    <StdViol msg="This assignment may store the original parameter 'customer' rather than a copy of the parameter into the field '_customer'" ln="27" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" auth="Mark Wilson" rule="SECURITY.EAB.SMO" lnHash="-1648520809" pkg="examples.nbank" rule.header="Do not store user-given mutable objects directly into variables" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="92995874-a91a-3ed4-866c-22fd484071f7" locEndPos="28" urgent="true" prio="Not Defined" locEndLn="27" goals="1," locStartln="27" sev="3" locRef="43" tool="jtest" lineHash="-1648520809" unbViolId="f592f728-1fe4-38b8-b059-b6206872a72b" risk="Undefined" locType="sr" hash="-2109136904" />
    <FlowViol msg="Condition &quot;balance >= 5000&quot; always evaluates to true" ln="36" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" ruleSAFMsg="Point where senseless condition is used" FirstElSrcRngEndPos="49" auth="Mark Wilson" FirstElSrcRngEndLn="33" rule="BD.PB.CC" FirstElSrcRngStartPos="19" lnHash="729855832" ruleSCSCMsg="Start of the path" pkg="examples.nbank" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" rule.header="Avoid conditions that always evaluate to the same value" FirstElSrcRngStartln="33" locStartPos="19" analyzer="com.parasoft.jtest.flowanalyzer" id="-566745273" lang="java" violId="d4192b8e-87dd-3143-b2b9-173b15e59cc9" locEndPos="48" urgent="true" prio="Not Defined" locEndLn="36" goals="1," locStartln="36" sev="2" locRef="43" tool="jtest" lineHash="729855832" unbViolId="07943256-b84e-3f0b-babd-3947b5a3ba10" risk="Undefined" locType="sr" hash="-2109136904" causeLocRef="43">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-1809142446" locType="sr" srcRnghash="-2109136904" locRef="43" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" ln="33" srcRngStartPos="19" srcRngEndPos="49" srcRngStartln="33" srcRngEndLn="33" desc="setAccountStatus(int balance)" ElType=".C" rngLn="33">
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1153895073" locType="sr" srcRnghash="-2109136904" locRef="43" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" ln="34" srcRngStartPos="8" srcRngEndPos="41" srcRngStartln="34" srcRngEndLn="34" desc="if (balance &lt; BALANCE_GOLD_MIN) {" ElType="." rngLn="34">
          <Anns>
            <Ann msg="Condition evaluation: (balance &lt; 5000) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="729855832" locType="sr" srcRnghash="-2109136904" locRef="43" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" ln="36" srcRngStartPos="19" srcRngEndPos="48" srcRngStartln="36" srcRngEndLn="36" desc="(balance >= BALANCE_GOLD_MIN)" ElType=".P" rngLn="36">
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Missing Javadoc comment for method 'reportToCreditAgency()'" ln="43" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" locStartln="43" sev="3" auth="Mark Wilson" locRef="43" rule="JAVADOC.PJDM" lnHash="-1107858209" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="-1107858209" unbViolId="b5da6491-f425-3db9-b3b6-4b7a1cbc0e08" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="fd9a8778-4326-3f98-b4ab-00a5f27e9af4" locEndPos="39" locType="sr" urgent="true" hash="-2109136904" locEndLn="43" goals="1," />
    <StdViol msg="Missing Javadoc comment for method 'getID()'" ln="53" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" auth="Mark Wilson" rule="JAVADOC.PJDM" lnHash="2039132981" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ad458374-c531-368c-b74d-b667041af313" locEndPos="23" urgent="true" prio="Not Defined" locEndLn="53" goals="1," locStartln="53" sev="3" locRef="43" tool="jtest" lineHash="2039132981" unbViolId="592c06a6-10fd-39ec-968a-f4ffc9ca5439" risk="Undefined" locType="sr" hash="-2109136904" />
    <StdViol msg="Missing Javadoc comment for method 'getStatus()'" ln="65" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" auth="Mark Wilson" rule="JAVADOC.PJDM" lnHash="182166444" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1ed08e02-28f0-3ba5-bad4-f3dba598bab1" locEndPos="27" urgent="true" prio="Not Defined" locEndLn="65" goals="1," locStartln="65" sev="3" locRef="43" tool="jtest" lineHash="182166444" unbViolId="f6d20212-c49e-3781-a02e-e5a0f808517e" risk="Undefined" locType="sr" hash="-2109136904" />
    <FlowViol msg="Condition &quot;balance >= 5000&quot; always evaluates to true" ln="73" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" ruleSAFMsg="Point where senseless condition is used" FirstElSrcRngEndPos="40" auth="Mark Wilson" FirstElSrcRngEndLn="69" rule="BD.PB.CC" FirstElSrcRngStartPos="16" lnHash="729855832" ruleSCSCMsg="Start of the path" pkg="examples.nbank" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" rule.header="Avoid conditions that always evaluate to the same value" FirstElSrcRngStartln="69" locStartPos="19" analyzer="com.parasoft.jtest.flowanalyzer" id="-183718716" lang="java" violId="a9aa7817-8d86-3dcb-9b1c-f35e4a2f40c7" locEndPos="48" urgent="true" prio="Not Defined" locEndLn="73" goals="1," locStartln="73" sev="2" locRef="43" tool="jtest" lineHash="729855832" unbViolId="aa9d4a3e-712e-3047-9d8a-62c96ce067c8" risk="Undefined" locType="sr" hash="-2109136904" causeLocRef="43">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-349452654" locType="sr" srcRnghash="-2109136904" locRef="43" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" ln="69" srcRngStartPos="16" srcRngEndPos="40" srcRngStartln="69" srcRngEndLn="69" desc="setBalance(int balance)" ElType=".C" rngLn="69">
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1662992443" locType="sr" srcRnghash="-2109136904" locRef="43" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" ln="70" srcRngStartPos="8" srcRngEndPos="27" srcRngStartln="70" srcRngEndLn="70" desc="_balance = balance;" ElType="." rngLn="70" />
        <ElDesc lineHash="1153895073" locType="sr" srcRnghash="-2109136904" locRef="43" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" ln="71" srcRngStartPos="8" srcRngEndPos="41" srcRngStartln="71" srcRngEndLn="71" desc="if (balance &lt; BALANCE_GOLD_MIN) {" ElType="." rngLn="71">
          <Anns>
            <Ann msg="Condition evaluation: (balance &lt; 5000) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="729855832" locType="sr" srcRnghash="-2109136904" locRef="43" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" ln="73" srcRngStartPos="19" srcRngEndPos="48" srcRngStartln="73" srcRngEndLn="73" desc="(balance >= BALANCE_GOLD_MIN)" ElType=".P" rngLn="73">
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Missing Javadoc comment for method 'isOverdrawn()'" ln="80" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" auth="Mark Wilson" rule="JAVADOC.PJDM" lnHash="978328100" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="92ec6327-7e19-39e9-ab3e-e48aa99c0831" locEndPos="30" urgent="true" prio="Not Defined" locEndLn="80" goals="1," locStartln="80" sev="3" locRef="43" tool="jtest" lineHash="978328100" unbViolId="0a0972d4-22e7-3e36-80d7-6eca60116892" risk="Undefined" locType="sr" hash="-2109136904" />
    <StdViol msg="This &quot;else&quot; statement is unnecessary" ln="84" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" auth="Mark Wilson" rule="UC.UES" lnHash="646285399" pkg="examples.nbank" rule.header="Avoid unnecessary &quot;else&quot; statements" locStartPos="10" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="41a3ffad-df6c-3a97-9ffa-ed21b1465ef3" locEndPos="14" urgent="true" prio="Not Defined" locEndLn="84" goals="1," locStartln="84" sev="3" locRef="43" tool="jtest" lineHash="646285399" unbViolId="65be3c65-89dd-3902-8699-fade06bf3bc9" risk="Undefined" locType="sr" hash="-2109136904" />
    <StdViol msg="This &quot;else&quot; statement is unnecessary" ln="91" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" auth="Mark Wilson" rule="UC.UES" lnHash="-58829216" pkg="examples.nbank" rule.header="Avoid unnecessary &quot;else&quot; statements" locStartPos="11" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="204b3f75-1b78-322b-a31d-5ba27056306d" locEndPos="15" urgent="true" prio="Not Defined" locEndLn="91" goals="1," locStartln="91" sev="3" locRef="43" tool="jtest" lineHash="-58829216" unbViolId="2e1fd1a6-fe4d-3842-a69d-88888676a6a3" risk="Undefined" locType="sr" hash="-2109136904" />
    <StdViol msg="Method 'apply' is missing '@param transaction' in Javadoc comment" ln="104" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" auth="Mark Wilson" rule="JAVADOC.PARAM" lnHash="85916322" pkg="examples.nbank" rule.header="Use the '@param' Javadoc tag for each parameter of methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="63b5b166-a219-3897-9eac-d56b2576e7ad" locEndPos="21" urgent="true" prio="Not Defined" locEndLn="104" goals="1," locStartln="104" sev="3" locRef="43" tool="jtest" lineHash="85916322" unbViolId="73965097-ebed-3a51-86b9-b246615326a0" risk="Undefined" locType="sr" hash="-2109136904" />
    <StdViol msg="&quot;if&quot; statement without a &quot;{ }&quot; block" ln="105" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" auth="Mark Wilson" rule="CODSTA.BP.BLK" lnHash="1437100845" pkg="examples.nbank" rule.header="Provide a '{}' block for conditional statements" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c86f0ddc-1b22-34f1-9395-be30a7ca00eb" locEndPos="10" urgent="true" prio="Not Defined" locEndLn="105" goals="1," locStartln="105" sev="3" locRef="43" tool="jtest" lineHash="1437100845" unbViolId="cdde7a31-d9dd-325b-a263-eab98c84cfab" risk="Undefined" locType="sr" hash="-2109136904" />
    <StdViol msg="Consider changing the raw type 'List' to a parameterized type" ln="116" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" auth="Mark Wilson" rule="CODSTA.POD.UPT" lnHash="2040230778" pkg="examples.nbank" rule.header="Enforce or avoid the use of parameterized types" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e4ac96b4-a28b-3476-a40a-53ca9491b1aa" locEndPos="23" urgent="true" prio="Not Defined" locEndLn="116" goals="1," locStartln="116" sev="3" locRef="43" tool="jtest" lineHash="2040230778" unbViolId="c81a8cd3-9a41-3301-9f6d-2f4d32068f2d" risk="Undefined" locType="sr" hash="-2109136904" />
    <StdViol msg="Found &quot;static&quot; variable of type &quot;Map&quot; or &quot;Collection&quot;: '_accountsLog'" ln="116" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" auth="Mark Wilson" rule="GC.STV" lnHash="2040230778" pkg="examples.nbank" rule.header="Avoid &quot;static&quot; collections or maps; they can grow without bounds" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6b82aeda-c4ca-3f96-abfc-10fd8a0bae15" locEndPos="36" urgent="true" prio="Not Defined" locEndLn="116" goals="1," locStartln="116" sev="3" locRef="43" tool="jtest" lineHash="2040230778" unbViolId="ec890631-27e2-38bc-b3ee-c304212e2a6f" risk="Undefined" locType="sr" hash="-2109136904" />
    <StdViol msg="Variable name '_accountsLog' does not match user-specified regular expression '(s|List|Set|Array|Table)$' for array and collection variables" ln="116" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" auth="Mark Wilson" rule="NAMING.NAC" lnHash="2040230778" pkg="examples.nbank" rule.header="Use a naming convention for array and collection variables" locStartPos="24" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2ca4d816-8033-3492-b1e5-3a6cbf3a3f73" locEndPos="36" urgent="true" prio="Not Defined" locEndLn="116" goals="1," locStartln="116" sev="3" locRef="43" tool="jtest" lineHash="2040230778" unbViolId="9a072339-0f3f-3bb7-b699-8defa631a8a0" risk="Undefined" locType="sr" hash="-2109136904" />
    <StdViol msg="Initial container capacity is not specified" ln="116" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" auth="Mark Wilson" rule="OPT.DIC" lnHash="2040230778" pkg="examples.nbank" rule.header="Define initial capacities for 'ArrayList', 'HashMap', 'HashSet', 'Hashtable', 'Vector' and 'WeakHashMap'" locStartPos="43" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="27ef7b9d-d0be-3f95-91a4-abe954c4b15a" locEndPos="52" urgent="true" prio="Not Defined" locEndLn="116" goals="1," locStartln="116" sev="3" locRef="43" tool="jtest" lineHash="2040230778" unbViolId="d6ae5432-e9cb-327a-8d0d-25ff38a009ec" risk="Undefined" locType="sr" hash="-2109136904" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="7" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Bank.java" auth="Elizabeth" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.nbank" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0ca95f55-2075-3081-8193-6917281029b2" locEndPos="2" urgent="true" prio="Not Defined" locEndLn="7" goals="1," locStartln="7" sev="3" locRef="44" tool="jtest" lineHash="46511" unbViolId="3bdd7bb8-0f3b-3b4a-a75b-3af6f30a6dba" risk="Undefined" locType="sr" hash="-1683403269" />
    <StdViol msg="Initial container capacity is not specified" ln="14" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Bank.java" locStartln="14" sev="3" auth="Elizabeth" locRef="44" rule="OPT.DIC" lnHash="-1311598069" pkg="examples.nbank" rule.header="Define initial capacities for 'ArrayList', 'HashMap', 'HashSet', 'Hashtable', 'Vector' and 'WeakHashMap'" tool="jtest" lineHash="-1311598069" unbViolId="af99cf40-a258-31a5-89af-f41c969a8225" locStartPos="49" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="9c88056f-582d-31c0-9784-c22d3ccc308b" locEndPos="56" locType="sr" urgent="true" hash="-1683403269" locEndLn="14" goals="1," />
    <StdViol msg="Missing Javadoc comment for method 'Bank()'" ln="20" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Bank.java" auth="Elizabeth" rule="JAVADOC.PJDM" lnHash="1311606095" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="11" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c0b17166-15cf-3236-8172-4fa5563b3276" locEndPos="15" urgent="true" prio="Not Defined" locEndLn="20" goals="1," locStartln="20" sev="3" locRef="44" tool="jtest" lineHash="1311606095" unbViolId="e1400f2d-be1e-3f58-b2a6-65d502714641" risk="Undefined" locType="sr" hash="-1683403269" />
    <StdViol msg="Avoid using unnecessary &quot;this&quot; expressions" ln="26" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Bank.java" auth="Elizabeth" rule="CODSTA.READ.UATS" lnHash="-74503699" pkg="examples.nbank" rule.header="Avoid or enforce the use of &quot;this&quot; and &quot;super&quot; expressions" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="51a864bb-8662-3c25-807d-997ceb294e21" locEndPos="12" urgent="true" prio="Not Defined" locEndLn="26" goals="1," locStartln="26" sev="3" locRef="44" tool="jtest" lineHash="-74503699" unbViolId="bb77a7a4-89e8-32ed-a658-fde8b31ea5b9" risk="Undefined" locType="sr" hash="-1683403269" />
    <StdViol msg="Avoid using unnecessary &quot;this&quot; expressions" ln="28" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Bank.java" auth="Elizabeth" rule="CODSTA.READ.UATS" lnHash="1451182755" pkg="examples.nbank" rule.header="Avoid or enforce the use of &quot;this&quot; and &quot;super&quot; expressions" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8e739808-0184-33d6-a7e3-002982db891a" locEndPos="12" urgent="true" prio="Not Defined" locEndLn="28" goals="1," locStartln="28" sev="3" locRef="44" tool="jtest" lineHash="1451182755" unbViolId="f973057f-073a-3d57-8615-8cc355d7a396" risk="Undefined" locType="sr" hash="-1683403269" />
    <StdViol msg="Avoid using unnecessary &quot;this&quot; expressions" ln="30" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Bank.java" auth="Elizabeth" rule="CODSTA.READ.UATS" lnHash="1416712859" pkg="examples.nbank" rule.header="Avoid or enforce the use of &quot;this&quot; and &quot;super&quot; expressions" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="225cc2c3-858f-3e04-a5ee-03aa3dba98d5" locEndPos="12" urgent="true" prio="Not Defined" locEndLn="30" goals="1," locStartln="30" sev="3" locRef="44" tool="jtest" lineHash="1416712859" unbViolId="e7bfbf0e-7111-34f2-9d01-be643cbc2311" risk="Undefined" locType="sr" hash="-1683403269" />
    <StdViol msg="Missing Javadoc comment for method 'addAccount()'" ln="33" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Bank.java" auth="Elizabeth" rule="JAVADOC.PJDM" lnHash="-1412211017" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3f31e5b0-5502-3694-a38f-55b7ffd6f4b0" locEndPos="29" urgent="true" prio="Not Defined" locEndLn="33" goals="1," locStartln="33" sev="3" locRef="44" tool="jtest" lineHash="-1412211017" unbViolId="8dd406ad-aa5b-388a-b5c8-a72ce325151b" risk="Undefined" locType="sr" hash="-1683403269" />
    <StdViol msg="Missing Javadoc comment for method 'closeAccounts()'" ln="42" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Bank.java" locStartln="42" sev="3" auth="Elizabeth" locRef="44" rule="JAVADOC.PJDM" lnHash="822354550" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="822354550" unbViolId="bab036c3-81b4-38fb-97ae-04e1a593a460" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7e7c7c75-ac9c-3ab8-bdff-889c69d5b6af" locEndPos="29" locType="sr" urgent="true" hash="-1683403269" locEndLn="42" goals="1," />
    <StdViol msg="Missing Javadoc comment for method 'getAccount()'" ln="52" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Bank.java" auth="Elizabeth" rule="JAVADOC.PJDM" lnHash="682535777" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ea90bcb8-9f7b-345d-bf76-fda09323cfcf" locEndPos="29" urgent="true" prio="Not Defined" locEndLn="52" goals="1," locStartln="52" sev="3" locRef="44" tool="jtest" lineHash="682535777" unbViolId="87011568-45f6-3eee-b930-83ea998ca07c" risk="Undefined" locType="sr" hash="-1683403269" />
    <StdViol msg="Consider using '!_accounts.isEmpty()' here" ln="54" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Bank.java" auth="Elizabeth" rule="CODSTA.READ.SIE" lnHash="-1632156826" pkg="examples.nbank" rule.header="Use 'isEmpty()' for Collections and Maps instead of comparing 'size()' to 0" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="690a6c22-0f6e-3cb1-80a8-b7e7782a7eab" locEndPos="21" urgent="true" prio="Not Defined" locEndLn="54" goals="1," locStartln="54" sev="3" locRef="44" tool="jtest" lineHash="-1632156826" unbViolId="e62f8147-b537-3f40-8d11-0dc31c91e280" risk="Undefined" locType="sr" hash="-1683403269" />
    <StdViol msg="Missing Javadoc comment for method 'isMaintenanceMode()'" ln="67" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Bank.java" auth="Elizabeth" rule="JAVADOC.PJDM" lnHash="-1433744807" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ac12da43-d70f-30fa-b716-55b0a397dace" locEndPos="36" urgent="true" prio="Not Defined" locEndLn="67" goals="1," locStartln="67" sev="3" locRef="44" tool="jtest" lineHash="-1433744807" unbViolId="1a5d3e8e-c065-3d80-a8ac-1922b9a0effb" risk="Undefined" locType="sr" hash="-1683403269" />
    <StdViol msg="Missing Javadoc comment for method 'startMaintenance()'" ln="71" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Bank.java" auth="Elizabeth" rule="JAVADOC.PJDM" lnHash="1861927426" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8b22f948-916f-3d4b-a04a-54059bfbc40a" locEndPos="32" urgent="true" prio="Not Defined" locEndLn="71" goals="1," locStartln="71" sev="3" locRef="44" tool="jtest" lineHash="1861927426" unbViolId="0f4e8830-25c9-30da-b7fe-19832ecf31cb" risk="Undefined" locType="sr" hash="-1683403269" />
    <StdViol msg="Missing Javadoc comment for method 'endMaintenance()'" ln="75" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Bank.java" auth="Elizabeth" rule="JAVADOC.PJDM" lnHash="904420777" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="08e97d9c-519c-3add-8e01-b3d9a21b1eb8" locEndPos="30" urgent="true" prio="Not Defined" locEndLn="75" goals="1," locStartln="75" sev="3" locRef="44" tool="jtest" lineHash="904420777" unbViolId="eab9fd7e-8cd0-3342-a304-fd165dd55eff" risk="Undefined" locType="sr" hash="-1683403269" />
    <StdViol msg="Missing Javadoc comment for method 'setAccountsLimit()'" ln="79" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Bank.java" auth="Elizabeth" rule="JAVADOC.PJDM" lnHash="-1022213969" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="85d3dc4d-0f89-35b5-b6b3-cb4e51ef0c08" locEndPos="39" urgent="true" prio="Not Defined" locEndLn="79" goals="1," locStartln="79" sev="3" locRef="44" tool="jtest" lineHash="-1022213969" unbViolId="c47d16f1-4129-329a-9b71-b9947c05ea4a" risk="Undefined" locType="sr" hash="-1683403269" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="3" locFile="/com.parasoft:demo/src/main/java/examples/nbank/BankState.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="337073681" pkg="examples.nbank" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7e1fe9ff-d462-30be-a66f-7cd81e0f9009" locEndPos="2" prio="Not Defined" locEndLn="3" goals="0," locStartln="3" sev="3" locRef="45" tool="jtest" lineHash="337073681" unbViolId="9ef1a17a-ca19-3695-a0dd-64b5c896f86a" risk="Undefined" locType="sr" hash="2120971007" />
    <StdViol msg="Missing Javadoc comment for 'BankState'" ln="3" locFile="/com.parasoft:demo/src/main/java/examples/nbank/BankState.java" auth="mgorecka" rule="JAVADOC.PJDC" lnHash="337073681" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for types" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e9e744a9-f1cc-3c58-b7e9-2b468c1b66cc" locEndPos="22" prio="Not Defined" locEndLn="3" goals="0," locStartln="3" sev="3" locRef="45" tool="jtest" lineHash="337073681" unbViolId="bb2938fa-8b60-3188-8a46-200e04aecc73" risk="Undefined" locType="sr" hash="2120971007" />
    <StdViol msg="Missing Javadoc comment for method 'isMaintenanceMode()'" ln="7" locFile="/com.parasoft:demo/src/main/java/examples/nbank/BankState.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="199555829" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="26" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="61739b05-f411-3057-bc13-a4dcf22befe5" locEndPos="43" prio="Not Defined" locEndLn="7" goals="0," locStartln="7" sev="3" locRef="45" tool="jtest" lineHash="199555829" unbViolId="ab7b7f8f-bdc3-3626-989f-abf65ca33427" risk="Undefined" locType="sr" hash="2120971007" />
    <StdViol msg="Missing Javadoc comment for method 'startMaintenance()'" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/nbank/BankState.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="274571422" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="497286bf-5623-396d-a8e2-19be794f5b3c" locEndPos="39" prio="Not Defined" locEndLn="15" goals="0," locStartln="15" sev="3" locRef="45" tool="jtest" lineHash="274571422" unbViolId="a91fcc4e-b08e-3e18-94b4-3c9968eb3d27" risk="Undefined" locType="sr" hash="2120971007" />
    <StdViol msg="Missing Javadoc comment for method 'endMaintenance()'" ln="19" locFile="/com.parasoft:demo/src/main/java/examples/nbank/BankState.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="1886008133" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5c866ebd-8b17-3cb9-b593-2865cbd75f2d" locEndPos="37" prio="Not Defined" locEndLn="19" goals="0," locStartln="19" sev="3" locRef="45" tool="jtest" lineHash="1886008133" unbViolId="44fab2ff-2a37-3572-a202-ed19b04008fa" risk="Undefined" locType="sr" hash="2120971007" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="3" locFile="/com.parasoft:demo/src/main/java/examples/nbank/ConnectionException.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="992598005" pkg="examples.nbank" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2b71fbeb-bffa-3f7f-8480-4ebd24c6eab4" locEndPos="2" prio="Not Defined" locEndLn="3" goals="0," locStartln="3" sev="3" locRef="46" tool="jtest" lineHash="992598005" unbViolId="b967d909-d5d4-3dad-a841-c819968b2bac" risk="Undefined" locType="sr" hash="-368683629" />
    <StdViol msg="Missing Javadoc comment for 'ConnectionException'" ln="3" locFile="/com.parasoft:demo/src/main/java/examples/nbank/ConnectionException.java" auth="mgorecka" rule="JAVADOC.PJDC" lnHash="992598005" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for types" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="62f54b66-55aa-305d-a7a1-5e9a3e6b7c4a" locEndPos="32" prio="Not Defined" locEndLn="3" goals="0," locStartln="3" sev="3" locRef="46" tool="jtest" lineHash="992598005" unbViolId="71633e57-c9da-36a8-b7da-162ee5cfeacc" risk="Undefined" locType="sr" hash="-368683629" />
    <StdViol msg="No serialVersionUID declared in class 'ConnectionException'" ln="3" locFile="/com.parasoft:demo/src/main/java/examples/nbank/ConnectionException.java" auth="mgorecka" rule="SERIAL.DUID" lnHash="992598005" pkg="examples.nbank" rule.header="Create a 'serialVersionUID' for all 'Serializable' classes" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f2d566ad-2752-331c-9fd6-13025057516c" locEndPos="32" prio="Not Defined" locEndLn="3" goals="0," locStartln="3" sev="3" locRef="46" tool="jtest" lineHash="992598005" unbViolId="a25ab22d-b25c-31ef-9dd3-b80a0f45684d" risk="Undefined" locType="sr" hash="-368683629" />
    <StdViol msg="Missing Javadoc comment for method 'ConnectionException()'" ln="5" locFile="/com.parasoft:demo/src/main/java/examples/nbank/ConnectionException.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-2142049276" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="11" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7d697760-479c-313f-8564-9ce5078ffca8" locEndPos="30" prio="Not Defined" locEndLn="5" goals="0," locStartln="5" sev="3" locRef="46" tool="jtest" lineHash="-2142049276" unbViolId="d166cf9e-dd03-348d-b609-1c81721d6bde" risk="Undefined" locType="sr" hash="-368683629" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="3" locFile="/com.parasoft:demo/src/main/java/examples/nbank/CreditCard.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.nbank" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5d7f8e82-845b-3b37-ae7b-a1b345472037" locEndPos="2" prio="Not Defined" locEndLn="3" goals="0," locStartln="3" sev="3" locRef="47" tool="jtest" lineHash="46511" unbViolId="f4576408-ef0a-3f0b-85ef-e40279422c68" risk="Undefined" locType="sr" hash="3241407" />
    <StdViol msg="Method 'CreditCard' is missing '@param balance' in Javadoc comment" ln="40" locFile="/com.parasoft:demo/src/main/java/examples/nbank/CreditCard.java" auth="mgorecka" rule="JAVADOC.PARAM" lnHash="-2142446524" pkg="examples.nbank" rule.header="Use the '@param' Javadoc tag for each parameter of methods" locStartPos="11" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6201d0f4-4e04-3281-83f7-99dffdad60a8" locEndPos="21" prio="Not Defined" locEndLn="40" goals="0," locStartln="40" sev="3" locRef="47" tool="jtest" lineHash="-2142446524" unbViolId="fa085fc8-7a46-3e86-b028-7357208b0d77" risk="Undefined" locType="sr" hash="3241407" />
    <StdViol msg="Method 'CreditCard' is missing '@param id' in Javadoc comment" ln="40" locFile="/com.parasoft:demo/src/main/java/examples/nbank/CreditCard.java" auth="mgorecka" rule="JAVADOC.PARAM" lnHash="-2142446524" pkg="examples.nbank" rule.header="Use the '@param' Javadoc tag for each parameter of methods" locStartPos="11" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1bf0ea3d-87fc-3898-b0b4-0be0427230d5" locEndPos="21" prio="Not Defined" locEndLn="40" goals="0," locStartln="40" sev="3" locRef="47" tool="jtest" lineHash="-2142446524" unbViolId="10437b0b-c38a-3f35-8150-b0c450c8cf12" risk="Undefined" locType="sr" hash="3241407" />
    <StdViol msg="Method 'CreditCard' is missing '@param securityNumber' in Javadoc comment" ln="40" locFile="/com.parasoft:demo/src/main/java/examples/nbank/CreditCard.java" auth="mgorecka" rule="JAVADOC.PARAM" lnHash="-2142446524" pkg="examples.nbank" rule.header="Use the '@param' Javadoc tag for each parameter of methods" locStartPos="11" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1bc72900-dd50-30df-92d9-92dbb6a76c7f" locEndPos="21" prio="Not Defined" locEndLn="40" goals="0," locStartln="40" sev="3" locRef="47" tool="jtest" lineHash="-2142446524" unbViolId="89d5a6c6-1893-31a4-8136-d2ad6fb9ef55" risk="Undefined" locType="sr" hash="3241407" />
    <StdViol msg="Method 'CreditCard' is missing '@param name' in Javadoc comment" ln="40" locFile="/com.parasoft:demo/src/main/java/examples/nbank/CreditCard.java" auth="mgorecka" rule="JAVADOC.PARAM" lnHash="-2142446524" pkg="examples.nbank" rule.header="Use the '@param' Javadoc tag for each parameter of methods" locStartPos="11" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f8ccceac-6416-3943-b60b-8f4403b3cc65" locEndPos="21" prio="Not Defined" locEndLn="40" goals="0," locStartln="40" sev="3" locRef="47" tool="jtest" lineHash="-2142446524" unbViolId="4f296e9e-caf5-31fa-8927-8cc24b793699" risk="Undefined" locType="sr" hash="3241407" />
    <StdViol msg="Method 'CreditCard' is missing '@param zipcode' in Javadoc comment" ln="40" locFile="/com.parasoft:demo/src/main/java/examples/nbank/CreditCard.java" auth="mgorecka" rule="JAVADOC.PARAM" lnHash="-2142446524" pkg="examples.nbank" rule.header="Use the '@param' Javadoc tag for each parameter of methods" locStartPos="11" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0ec6335e-8d89-36d8-8e75-c8e57412a6aa" locEndPos="21" prio="Not Defined" locEndLn="40" goals="0," locStartln="40" sev="3" locRef="47" tool="jtest" lineHash="-2142446524" unbViolId="53ffc846-612c-349f-93c7-6ce467e3ffc7" risk="Undefined" locType="sr" hash="3241407" />
    <StdViol msg="Method 'CreditCard' is missing '@param creditCardNumber' in Javadoc comment" ln="40" locFile="/com.parasoft:demo/src/main/java/examples/nbank/CreditCard.java" auth="mgorecka" rule="JAVADOC.PARAM" lnHash="-2142446524" pkg="examples.nbank" rule.header="Use the '@param' Javadoc tag for each parameter of methods" locStartPos="11" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a1fbd7a4-bacf-3cae-910a-5fef82fd66b7" locEndPos="21" prio="Not Defined" locEndLn="40" goals="0," locStartln="40" sev="3" locRef="47" tool="jtest" lineHash="-2142446524" unbViolId="ec877954-7af3-3e6e-b5f2-81bf41011cfc" risk="Undefined" locType="sr" hash="3241407" />
    <StdViol msg="&quot;if&quot; statement without a &quot;{ }&quot; block" ln="49" locFile="/com.parasoft:demo/src/main/java/examples/nbank/CreditCard.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="-82718186" pkg="examples.nbank" rule.header="Provide a '{}' block for conditional statements" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a2134733-ccc5-3e29-bd68-91bd35789b22" locEndPos="10" prio="Not Defined" locEndLn="49" goals="0," locStartln="49" sev="3" locRef="47" tool="jtest" lineHash="-82718186" unbViolId="563b72cb-e3d2-3903-9e38-6e3d73d0b089" risk="Undefined" locType="sr" hash="3241407" />
    <StdViol msg="Method 'validate' missing '@return' Javadoc tag" ln="68" locFile="/com.parasoft:demo/src/main/java/examples/nbank/CreditCard.java" auth="mgorecka" rule="JAVADOC.MRDC" lnHash="-1155961700" pkg="examples.nbank" rule.header="Use the '@return' Javadoc tag in method Javadoc comments" locStartPos="26" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a8b5047e-3f43-3fb3-bd98-1b28bfa61d12" locEndPos="34" prio="Not Defined" locEndLn="68" goals="0," locStartln="68" sev="3" locRef="47" tool="jtest" lineHash="-1155961700" unbViolId="fe247911-fcb2-3d4b-a596-0d63fe8590af" risk="Undefined" locType="sr" hash="3241407" />
    <StdViol msg="Method 'validate' is missing '@param digLengths' in Javadoc comment" ln="68" locFile="/com.parasoft:demo/src/main/java/examples/nbank/CreditCard.java" auth="mgorecka" rule="JAVADOC.PARAM" lnHash="-1155961700" pkg="examples.nbank" rule.header="Use the '@param' Javadoc tag for each parameter of methods" locStartPos="26" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e1c6c154-d1d6-3523-ab5f-4784968919a9" locEndPos="34" prio="Not Defined" locEndLn="68" goals="0," locStartln="68" sev="3" locRef="47" tool="jtest" lineHash="-1155961700" unbViolId="a0488009-e407-3fed-a961-d8bead39d737" risk="Undefined" locType="sr" hash="3241407" />
    <StdViol msg="Method 'validate' is missing '@param input' in Javadoc comment" ln="68" locFile="/com.parasoft:demo/src/main/java/examples/nbank/CreditCard.java" auth="mgorecka" rule="JAVADOC.PARAM" lnHash="-1155961700" pkg="examples.nbank" rule.header="Use the '@param' Javadoc tag for each parameter of methods" locStartPos="26" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="96c4509c-8324-378f-888d-ec9ca8da63ef" locEndPos="34" prio="Not Defined" locEndLn="68" goals="0," locStartln="68" sev="3" locRef="47" tool="jtest" lineHash="-1155961700" unbViolId="60910ddb-b4a1-38a5-b265-2162ae109d0e" risk="Undefined" locType="sr" hash="3241407" />
    <StdViol msg="&quot;if&quot; statement without a &quot;{ }&quot; block" ln="74" locFile="/com.parasoft:demo/src/main/java/examples/nbank/CreditCard.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="-1975883419" pkg="examples.nbank" rule.header="Provide a '{}' block for conditional statements" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0a1aa997-3d7d-3af8-b927-cafcc84a0dca" locEndPos="14" prio="Not Defined" locEndLn="74" goals="0," locStartln="74" sev="3" locRef="47" tool="jtest" lineHash="-1975883419" unbViolId="be352d38-4ba5-365f-aed2-477a421cfb0c" risk="Undefined" locType="sr" hash="3241407" />
    <StdViol msg="Parameter 'input' dereferenced before being checked for null" ln="74" locFile="/com.parasoft:demo/src/main/java/examples/nbank/CreditCard.java" auth="mgorecka" rule="DBC.IPAN" lnHash="-1975883419" pkg="examples.nbank" rule.header="Include a '@pre != null' tag for each parameter that is dereferenced before being checked for null" locStartPos="39" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="cddf426e-1a2e-3a55-9494-3bd06bfc631d" locEndPos="44" prio="Not Defined" locEndLn="74" goals="0," locStartln="74" sev="3" locRef="47" tool="jtest" lineHash="-1975883419" unbViolId="4825c2df-81ff-3529-a719-2889eb63229f" risk="Undefined" locType="sr" hash="3241407" />
    <StdViol msg="&quot;if&quot; statement without a &quot;{ }&quot; block" ln="78" locFile="/com.parasoft:demo/src/main/java/examples/nbank/CreditCard.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="-1028777697" pkg="examples.nbank" rule.header="Provide a '{}' block for conditional statements" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e7123b88-e206-38ee-9134-2bbf6d7b4d41" locEndPos="18" prio="Not Defined" locEndLn="78" goals="0," locStartln="78" sev="3" locRef="47" tool="jtest" lineHash="-1028777697" unbViolId="4099b614-785d-311b-9bac-15d95fe53aed" risk="Undefined" locType="sr" hash="3241407" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="89" locFile="/com.parasoft:demo/src/main/java/examples/nbank/CreditCard.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="-1740946050" pkg="examples.nbank" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e8892b5a-caff-33ca-83a9-935dce3b259b" locEndPos="61" prio="Not Defined" locEndLn="89" goals="0," locStartln="89" sev="3" locRef="47" tool="jtest" lineHash="-1740946050" unbViolId="5f6c9ad7-414f-3774-82f7-e1ed5ccc682c" risk="Undefined" locType="sr" hash="3241407" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="90" locFile="/com.parasoft:demo/src/main/java/examples/nbank/CreditCard.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="1329806731" pkg="examples.nbank" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="fe3a604f-04f2-380e-a901-cf0aeee167c4" locEndPos="60" prio="Not Defined" locEndLn="90" goals="0," locStartln="90" sev="3" locRef="47" tool="jtest" lineHash="1329806731" unbViolId="6e7dfcdd-0bab-3859-ac22-67d2d83a787f" risk="Undefined" locType="sr" hash="3241407" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="91" locFile="/com.parasoft:demo/src/main/java/examples/nbank/CreditCard.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="1586176677" pkg="examples.nbank" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f59c6f23-8208-3c6c-a3f1-e57798e3162d" locEndPos="99" prio="Not Defined" locEndLn="91" goals="0," locStartln="91" sev="3" locRef="47" tool="jtest" lineHash="1586176677" unbViolId="230c2570-9f6e-373c-b087-eaeaa151f94b" risk="Undefined" locType="sr" hash="3241407" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="92" locFile="/com.parasoft:demo/src/main/java/examples/nbank/CreditCard.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="-1687056554" pkg="examples.nbank" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="476bbdd1-8aa1-3b87-81a7-daaded597ecf" locEndPos="66" prio="Not Defined" locEndLn="92" goals="0," locStartln="92" sev="3" locRef="47" tool="jtest" lineHash="-1687056554" unbViolId="47fb664e-e121-375a-9e95-30e679a7931b" risk="Undefined" locType="sr" hash="3241407" />
    <StdViol msg="Method 'makePayment' is missing '@param account' in Javadoc comment" ln="103" locFile="/com.parasoft:demo/src/main/java/examples/nbank/CreditCard.java" auth="mgorecka" rule="JAVADOC.PARAM" lnHash="83486110" pkg="examples.nbank" rule.header="Use the '@param' Javadoc tag for each parameter of methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0c6e82d3-96da-359e-a48e-722f14c64069" locEndPos="27" prio="Not Defined" locEndLn="103" goals="0," locStartln="103" sev="3" locRef="47" tool="jtest" lineHash="83486110" unbViolId="8c206155-021a-3a98-8b16-a47fa186ba37" risk="Undefined" locType="sr" hash="3241407" />
    <StdViol msg="&quot;if&quot; statement without a &quot;{ }&quot; block" ln="104" locFile="/com.parasoft:demo/src/main/java/examples/nbank/CreditCard.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="1821395361" pkg="examples.nbank" rule.header="Provide a '{}' block for conditional statements" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5b8b192d-0d00-3804-b369-3111526394fa" locEndPos="10" prio="Not Defined" locEndLn="104" goals="0," locStartln="104" sev="3" locRef="47" tool="jtest" lineHash="1821395361" unbViolId="fd4f56bd-3b6c-3320-a5b7-a44c9719412c" risk="Undefined" locType="sr" hash="3241407" />
    <StdViol msg="&quot;!=&quot; is used when comparing 'String' Objects. 'equals()' should be used instead" ln="104" locFile="/com.parasoft:demo/src/main/java/examples/nbank/CreditCard.java" auth="mgorecka" rule="PB.CUB.UEIC" lnHash="1821395361" pkg="examples.nbank" rule.header="Do not use '==' or '!=' to compare objects" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6579cca7-5240-37bc-82bf-bfed1b30f7f6" locEndPos="42" prio="Not Defined" locEndLn="104" goals="0," locStartln="104" sev="2" locRef="47" tool="jtest" lineHash="1821395361" unbViolId="56edad0b-a06e-3d64-93a2-ab88280a35a6" risk="Undefined" locType="sr" hash="3241407" />
    <StdViol msg="The parameter '_zipcode' uses the same name as a field declared in an enclosing scope, which may cause confusion" ln="196" locFile="/com.parasoft:demo/src/main/java/examples/nbank/CreditCard.java" auth="mgorecka" rule="OOP.HIF" lnHash="407348690" pkg="examples.nbank" rule.header="Do not hide fields and local variables declared in enclosing scopes" locStartPos="35" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7de36194-c949-31f9-8367-94a987993d98" locEndPos="43" prio="Not Defined" locEndLn="196" goals="0," locStartln="196" sev="3" locRef="47" tool="jtest" lineHash="407348690" unbViolId="2fdcbfcb-0609-3b49-88d6-ee264ac12e59" risk="Undefined" locType="sr" hash="3241407" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="9" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.nbank" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1f59bd4f-a7ec-3065-a760-55e0c405b2a8" locEndPos="2" urgent="true" prio="Not Defined" locEndLn="9" goals="1," locStartln="9" sev="3" locRef="48" tool="jtest" lineHash="46511" unbViolId="6b2efd05-438d-3ee6-beb1-8c00f218a1c0" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="Missing Javadoc comment for method 'Customer()'" ln="22" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="JAVADOC.PJDM" lnHash="1064610858" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="11" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f346154b-6470-3135-a77b-dd62d1df3757" locEndPos="19" urgent="true" prio="Not Defined" locEndLn="22" goals="1," locStartln="22" sev="3" locRef="48" tool="jtest" lineHash="1064610858" unbViolId="ff536e8e-0b51-3e3e-bf32-330a5f39ce3c" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="&quot;if&quot; statement without a &quot;{ }&quot; block" ln="23" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="CODSTA.BP.BLK" lnHash="1185825189" pkg="examples.nbank" rule.header="Provide a '{}' block for conditional statements" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d71c71bc-2955-3b8b-b836-cb1eb4fd684a" locEndPos="10" urgent="true" prio="Not Defined" locEndLn="23" goals="1," locStartln="23" sev="3" locRef="48" tool="jtest" lineHash="1185825189" unbViolId="d4e0233d-8f43-3eb4-bf4d-ea38552efb6e" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="Logic in &quot;if&quot; conditional expression does not match the 'IllegalArgumentException' message" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="PB.RE.IIAE" lnHash="1102834197" pkg="examples.nbank" rule.header="Make sure the IllegalArgumentException message matches the code logic" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b6b8c529-6763-3af5-a257-376ebaaaed1b" locEndPos="90" urgent="true" prio="Not Defined" locEndLn="24" goals="1," locStartln="24" sev="4" locRef="48" tool="jtest" lineHash="1102834197" unbViolId="a04ca392-eef2-3b55-b1be-80150d632f4d" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="&quot;if&quot; statement without a &quot;{ }&quot; block" ln="25" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="CODSTA.BP.BLK" lnHash="-719839355" pkg="examples.nbank" rule.header="Provide a '{}' block for conditional statements" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ba65c911-14d0-3d98-a9ce-7b80bb228eb2" locEndPos="10" urgent="true" prio="Not Defined" locEndLn="25" goals="1," locStartln="25" sev="3" locRef="48" tool="jtest" lineHash="-719839355" unbViolId="9a7c042d-868c-3aa3-9db3-70bbc5b86839" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="Missing Javadoc comment for method 'toStrng()'" ln="47" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="JAVADOC.PJDM" lnHash="-1369147085" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="abddc73d-10d0-3131-979b-59d3abf4d8f6" locEndPos="25" urgent="true" prio="Not Defined" locEndLn="47" goals="1," locStartln="47" sev="3" locRef="48" tool="jtest" lineHash="-1369147085" unbViolId="b458df62-dc36-3798-92fb-36797d627f20" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="Possible typo overriding method 'java.lang.Object.toString()': 'toStrng()' should be 'toString()'" ln="47" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="PB.TYPO.IMO" lnHash="-1369147085" pkg="examples.nbank" rule.header="Ensure the overriding method name does not have a typo" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c6abac29-043f-3ed7-9883-54afc4af1cbb" locEndPos="25" urgent="true" prio="Not Defined" locEndLn="47" goals="1," locStartln="47" sev="3" locRef="48" tool="jtest" lineHash="-1369147085" unbViolId="c32b350f-42ed-3701-9ffa-398674f41278" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="Missing Javadoc comment for method 'equals()'" ln="52" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="JAVADOC.PJDM" lnHash="-21899588" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="61ea3d2f-5578-3016-af70-69aaf3c0c2e0" locEndPos="25" urgent="true" prio="Not Defined" locEndLn="52" goals="1," locStartln="52" sev="3" locRef="48" tool="jtest" lineHash="-21899588" unbViolId="73f146cf-a83e-3b2f-b35d-59d594e6aa75" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="Missing Javadoc comment for method 'hashCode()'" ln="65" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="JAVADOC.PJDM" lnHash="-111620833" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ca8e45da-e60a-33e1-afb6-e6deef6d11c1" locEndPos="23" urgent="true" prio="Not Defined" locEndLn="65" goals="1," locStartln="65" sev="3" locRef="48" tool="jtest" lineHash="-111620833" unbViolId="048eadb5-b8e6-3f40-af8c-08aab33e0753" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="Missing Javadoc comment for method 'loadCustomer()'" ln="69" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="JAVADOC.PJDM" lnHash="1859102885" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e38a8ba1-1e14-315c-a4c5-01209dd1cb3d" locEndPos="31" urgent="true" prio="Not Defined" locEndLn="69" goals="1," locStartln="69" sev="3" locRef="48" tool="jtest" lineHash="1859102885" unbViolId="cdd4e9a3-d872-3f8d-949b-f0a324f0c478" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="This call to 'getConnection()' may be dangerous because it uses a hard-coded password" ln="75" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="SECURITY.WSC.HCCS" lnHash="1774293749" pkg="examples.nbank" rule.header="Avoid passing hardcoded usernames/passwords/URLs to database connection methods" locStartPos="39" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="40389b8c-6409-3998-9067-9ff06d9d9a26" locEndPos="52" urgent="true" prio="Not Defined" locEndLn="75" goals="1," locStartln="75" sev="1" locRef="48" tool="jtest" lineHash="1774293749" unbViolId="6a242e24-a5f5-37b8-97d9-1bbc51bf1e52" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="Use DataSource to get the database connection" ln="75" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="JDBC.UDS" lnHash="1774293749" pkg="examples.nbank" rule.header="Use javax.sql.DataSource to get the database connection" locStartPos="39" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="17813773-cc48-305b-aa27-4b51c095860e" locEndPos="52" urgent="true" prio="Not Defined" locEndLn="75" goals="1," locStartln="75" sev="3" locRef="48" tool="jtest" lineHash="1774293749" unbViolId="733dd520-1587-3100-970a-9cd0094227c5" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="Make sure 'System.err.println' is not a leftover debug statement" ln="77" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="SECURITY.ESD.SIO" lnHash="-647429399" pkg="examples.nbank" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="877f07e5-96d0-3319-9855-147088ca77a7" locEndPos="55" urgent="true" prio="Not Defined" locEndLn="77" goals="1," locStartln="77" sev="3" locRef="48" tool="jtest" lineHash="-647429399" unbViolId="f281ce30-2703-3930-a9e2-4687dc82ef96" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="Make sure 'System.err.println' is not a leftover debug statement" ln="80" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="SECURITY.ESD.SIO" lnHash="768127156" pkg="examples.nbank" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="20b06fe2-ccbb-35f5-bf32-22560a1fb802" locEndPos="79" urgent="true" prio="Not Defined" locEndLn="80" goals="1," locStartln="80" sev="3" locRef="48" tool="jtest" lineHash="768127156" unbViolId="b68daa8a-3e39-33db-aba0-50f5727ffaae" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="80" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="SECURITY.ESD.PEO" lnHash="768127156" pkg="examples.nbank" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0a107666-f083-380e-860d-af6a7c724bd7" locEndPos="30" urgent="true" prio="Not Defined" locEndLn="80" goals="1," locStartln="80" sev="1" locRef="48" tool="jtest" lineHash="768127156" unbViolId="72021187-3099-3ca7-8da3-81a1ffeaf7a4" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="Variable 'statement' is not declared in this &quot;try&quot; block" ln="83" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="CODSTA.READ.DVCU" lnHash="1258828630" pkg="examples.nbank" rule.header="Declare variables as close as possible to where they are used" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4dc7010b-be0c-30e3-b88c-f2a65680ae1d" locEndPos="11" urgent="true" prio="Not Defined" locEndLn="83" goals="1," locStartln="83" sev="4" locRef="48" tool="jtest" lineHash="1258828630" unbViolId="ca4fb085-ca20-3a73-939a-1cb340449d73" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="Variable 'resultSet' is not declared in this &quot;try&quot; block" ln="83" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="CODSTA.READ.DVCU" lnHash="1258828630" pkg="examples.nbank" rule.header="Declare variables as close as possible to where they are used" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="90cc9c65-f73d-3514-a5c1-3eca55410d02" locEndPos="11" urgent="true" prio="Not Defined" locEndLn="83" goals="1," locStartln="83" sev="4" locRef="48" tool="jtest" lineHash="1258828630" unbViolId="3d1f655b-b6f0-3f1d-814c-14f2768a8262" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="Misuse &quot;PreparedStatement&quot;: missing '?' in query string" ln="84" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="JDBC.UPSC" lnHash="-1624193955" pkg="examples.nbank" rule.header="Use &quot;PreparedStatements&quot; correctly" locStartPos="52" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="cad5f9e8-ec3a-3ec7-b981-a51b421b10d8" locEndPos="93" urgent="true" prio="Not Defined" locEndLn="84" goals="1," locStartln="84" sev="1" locRef="48" tool="jtest" lineHash="-1624193955" unbViolId="21837fbf-993f-3bd7-aa3a-e751fd539aac" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="This String contains &quot;SELECT *&quot;, make sure it is not being used in a database query" ln="84" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="SECURITY.IBA.AUSS" lnHash="-1624193955" pkg="examples.nbank" rule.header="Avoid using &quot;SELECT *&quot; in SQL queries" locStartPos="52" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f1fd8740-fef2-3a53-a9e1-73466f96dcb4" locEndPos="86" urgent="true" prio="Not Defined" locEndLn="84" goals="1," locStartln="84" sev="1" locRef="48" tool="jtest" lineHash="-1624193955" unbViolId="701dec3b-6f49-3a82-a85d-4c2ce034ccbd" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="'0' is not a valid index value for this method call" ln="86" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="JDBC.BRSA" lnHash="612379775" pkg="examples.nbank" rule.header="Ensure index is valid in JDBC method invocation" locStartPos="40" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="26f423bb-ec1f-39c6-8bdd-b83fb1be4a57" locEndPos="41" urgent="true" prio="Not Defined" locEndLn="86" goals="1," locStartln="86" sev="1" locRef="48" tool="jtest" lineHash="612379775" unbViolId="7640aa58-db27-37cc-a5dc-30f6df9e11e5" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="Make sure 'System.err.println' is not a leftover debug statement" ln="91" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="SECURITY.ESD.SIO" lnHash="875386708" pkg="examples.nbank" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="dea7c7d3-96d8-3627-b0cf-dd4cc993e4b5" locEndPos="93" urgent="true" prio="Not Defined" locEndLn="91" goals="1," locStartln="91" sev="3" locRef="48" tool="jtest" lineHash="875386708" unbViolId="35e2217e-05bf-38ef-9226-2b4fc43f31f7" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="91" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="SECURITY.ESD.PEO" lnHash="875386708" pkg="examples.nbank" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="95bc7f27-20de-39e2-9813-0bcc32349454" locEndPos="30" urgent="true" prio="Not Defined" locEndLn="91" goals="1," locStartln="91" sev="1" locRef="48" tool="jtest" lineHash="875386708" unbViolId="85e89d26-0717-3028-a03d-b64aeea48fe4" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="'main()' method is present, possible leftover debugging code" ln="97" locFile="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" auth="Mark Wilson" rule="SECURITY.WSC.UMAIN" lnHash="-1228458120" pkg="examples.nbank" rule.header="Avoid 'main()' methods because they may allow unauthorized access to classes" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="f97554f4-f99b-3d63-a649-d9d9b3e3ae98" locEndPos="27" urgent="true" prio="Not Defined" locEndLn="97" goals="1," locStartln="97" sev="2" locRef="48" tool="jtest" lineHash="-1228458120" unbViolId="b54801d1-a2a5-3a19-8138-36a44a94eb16" risk="Undefined" locType="sr" hash="2046383933" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="3" locFile="/com.parasoft:demo/src/main/java/examples/nbank/DepositTransaction.java" auth="John" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.nbank" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f27d5e7a-7922-349d-9404-a2bcaf4b593a" locEndPos="2" urgent="true" prio="Not Defined" locEndLn="3" goals="1," locStartln="3" sev="3" locRef="49" tool="jtest" lineHash="46511" unbViolId="a34a40f1-9bd2-3109-9d00-f76e4f8db7ba" risk="Undefined" locType="sr" hash="-249228641" />
    <StdViol msg="Missing Javadoc comment for method 'DepositTransaction()'" ln="10" locFile="/com.parasoft:demo/src/main/java/examples/nbank/DepositTransaction.java" auth="John" rule="JAVADOC.PJDM" lnHash="1567225130" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="11" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2d8e8b4f-ee1c-341f-aaf6-b73a3dcbcb8a" locEndPos="29" urgent="true" prio="Not Defined" locEndLn="10" goals="1," locStartln="10" sev="3" locRef="49" tool="jtest" lineHash="1567225130" unbViolId="b73e0b43-2dd8-3624-8540-21890d56bada" risk="Undefined" locType="sr" hash="-249228641" />
    <StdViol msg="Missing Javadoc comment for method 'apply()'" ln="14" locFile="/com.parasoft:demo/src/main/java/examples/nbank/DepositTransaction.java" auth="John" rule="JAVADOC.PJDM" lnHash="889244851" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="cba306e5-1b7b-36aa-b7ce-b65c1cc46099" locEndPos="24" urgent="true" prio="Not Defined" locEndLn="14" goals="1," locStartln="14" sev="3" locRef="49" tool="jtest" lineHash="889244851" unbViolId="719e426b-0f4b-337a-9055-39ded8d83562" risk="Undefined" locType="sr" hash="-249228641" />
    <StdViol msg="The overriding method 'apply()' does not have an &quot;@Override&quot; annotation" ln="14" locFile="/com.parasoft:demo/src/main/java/examples/nbank/DepositTransaction.java" auth="John" rule="OOP.AOA" lnHash="889244851" pkg="examples.nbank" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ed62257c-62d5-355b-b08b-26099681d332" locEndPos="24" urgent="true" prio="Not Defined" locEndLn="14" goals="1," locStartln="14" sev="3" locRef="49" tool="jtest" lineHash="889244851" unbViolId="39fd5b79-44a0-36d0-a833-1dd1433d75f6" risk="Undefined" locType="sr" hash="-249228641" />
    <StdViol msg="account.getCustomer().getName().equals (&quot;John Hacker&quot;) is called, use &quot;John Hacker&quot;.equals (account.getCustomer().getName()) instead" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/nbank/DepositTransaction.java" auth="John" rule="PB.RE.ISEM" lnHash="-1988199012" pkg="examples.nbank" rule.header="Do not call 'String.equals(constant)' or 'String.equalsIgnoreCase(constant)'" locStartPos="51" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3e679108-b41c-3e2f-b620-513c2038578a" locEndPos="64" urgent="true" prio="Not Defined" locEndLn="15" goals="1," locStartln="15" sev="3" locRef="49" tool="jtest" lineHash="-1988199012" unbViolId="358d710d-f96a-3bbd-884f-2a47c45673c9" risk="Undefined" locType="sr" hash="-249228641" />
    <StdViol msg="&quot;import&quot; with star &quot;*&quot;, Single-type imports should be used instead" ln="3" locFile="/com.parasoft:demo/src/main/java/examples/nbank/ICreditAgency.java" locStartln="3" sev="3" auth="mgorecka" locRef="50" rule="CODSTA.BP.IMPTD" lnHash="1161190312" pkg="examples.nbank" rule.header="Avoid or enforce usage of '*' form of import statements" tool="jtest" lineHash="1161190312" unbViolId="42ea66ea-48ff-3b8b-a400-52fe377818fe" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="db8c57e3-04d9-34d9-8f19-3dffddf65919" locEndPos="17" locType="sr" hash="1948271967" locEndLn="3" goals="0," />
    <StdViol msg="Use 2 blank lines before type declaration" ln="5" locFile="/com.parasoft:demo/src/main/java/examples/nbank/ICreditAgency.java" locStartln="5" sev="3" auth="mgorecka" locRef="50" rule="FORMAT.BLCD" lnHash="1277931497" pkg="examples.nbank" rule.header="Enforce number of blank line(s) before type declarations" tool="jtest" lineHash="1277931497" unbViolId="8395ade3-9978-315b-844f-fe2ede3384f1" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5c9bbc58-f43f-3ff3-96f0-83fe96c33f2c" locEndPos="2" locType="sr" hash="1948271967" locEndLn="5" goals="0," />
    <StdViol msg="Missing Javadoc comment for 'ICreditAgency'" ln="5" locFile="/com.parasoft:demo/src/main/java/examples/nbank/ICreditAgency.java" locStartln="5" sev="3" auth="mgorecka" locRef="50" rule="JAVADOC.PJDC" lnHash="1277931497" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for types" tool="jtest" lineHash="1277931497" unbViolId="474a646a-d5a5-3410-9b2e-e2ca0c166e1d" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="fd85ae1f-2fde-38c0-abda-a020f166cb28" locEndPos="30" locType="sr" hash="1948271967" locEndLn="5" goals="0," />
    <StdViol msg="Use 1 blank line before every method declaration (or corresponding Javadoc)" ln="7" locFile="/com.parasoft:demo/src/main/java/examples/nbank/ICreditAgency.java" locStartln="7" sev="3" auth="mgorecka" locRef="50" rule="FORMAT.U2BL" lnHash="-928642896" pkg="examples.nbank" rule.header="Enforce number of blank line(s) between major sections" tool="jtest" lineHash="-928642896" unbViolId="1f2ab80c-027c-358a-baff-a716a325f2fd" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="77ba8976-bae5-311d-b67b-638847cc7069" locEndPos="55" locType="sr" hash="1948271967" locEndLn="7" goals="0," />
    <StdViol msg="Missing Javadoc comment for method 'report()'" ln="7" locFile="/com.parasoft:demo/src/main/java/examples/nbank/ICreditAgency.java" locStartln="7" sev="3" auth="mgorecka" locRef="50" rule="JAVADOC.PJDM" lnHash="-928642896" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for methods" tool="jtest" lineHash="-928642896" unbViolId="44b9bca6-1fb1-35fa-982f-800aa472a3d0" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8d455789-8119-3b92-8582-86a3c20f2298" locEndPos="18" locType="sr" hash="1948271967" locEndLn="7" goals="0," />
    <StdViol msg="Use 2 blank lines before type declaration" ln="3" locFile="/com.parasoft:demo/src/main/java/examples/nbank/ITransaction.java" auth="John" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.nbank" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1b62987f-8cdf-36ac-895e-0d96c525d66e" locEndPos="2" urgent="true" prio="Not Defined" locEndLn="3" goals="1," locStartln="3" sev="3" locRef="51" tool="jtest" lineHash="46511" unbViolId="dbc8b6d9-af80-31a3-ad67-9902a1923085" risk="Undefined" locType="sr" hash="1398902534" />
    <StdViol msg="Method 'fee' missing '@return' Javadoc tag" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/nbank/ITransaction.java" auth="John" rule="JAVADOC.MRDC" lnHash="-385353883" pkg="examples.nbank" rule.header="Use the '@return' Javadoc tag in method Javadoc comments" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="992c2204-4ded-3197-bf2b-a02c1dcb1626" locEndPos="11" urgent="true" prio="Not Defined" locEndLn="15" goals="1," locStartln="15" sev="3" locRef="51" tool="jtest" lineHash="-385353883" unbViolId="12f48435-d126-3629-b3b4-cfae49dcb625" risk="Undefined" locType="sr" hash="1398902534" />
    <StdViol msg="This '@param' tag does not contain a meaningful description of the parameter" ln="20" locFile="/com.parasoft:demo/src/main/java/examples/nbank/ITransaction.java" auth="John" rule="JAVADOC.MDJT" lnHash="-1856622544" pkg="examples.nbank" rule.header="Include a meaningful description in Javadoc tags" locStartPos="7" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="eb491a04-24db-3a64-be8c-bfcb5793a360" locEndPos="21" urgent="true" prio="Not Defined" locEndLn="20" goals="1," locStartln="20" sev="3" locRef="51" tool="jtest" lineHash="-1856622544" unbViolId="62547e8d-6313-3710-952b-e9b22208a935" risk="Undefined" locType="sr" hash="1398902534" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="9" locFile="/com.parasoft:demo/src/main/java/examples/nbank/LogAccountInfo.java" auth="Gina" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.nbank" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c0a3bd2b-8ba6-39e5-a5f4-8ae37297ea4c" locEndPos="2" urgent="true" prio="Not Defined" locEndLn="9" goals="1," locStartln="9" sev="3" locRef="52" tool="jtest" lineHash="46511" unbViolId="5911cac4-6a32-3f08-aba6-b94f6e0fcb76" risk="Undefined" locType="sr" hash="-179143843" />
    <StdViol msg="Missing Javadoc comment for method 'LogAccountInfo()'" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/nbank/LogAccountInfo.java" auth="Gina" rule="JAVADOC.PJDM" lnHash="1519593322" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="11" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e3312daf-721f-387c-add9-24e36b6a8373" locEndPos="25" urgent="true" prio="Not Defined" locEndLn="18" goals="1," locStartln="18" sev="3" locRef="52" tool="jtest" lineHash="1519593322" unbViolId="6fc4d668-4dae-3eee-ae90-889d63a7fb61" risk="Undefined" locType="sr" hash="-179143843" />
    <StdViol msg="Missing Javadoc comment for method 'log()'" ln="22" locFile="/com.parasoft:demo/src/main/java/examples/nbank/LogAccountInfo.java" auth="Gina" rule="JAVADOC.PJDM" lnHash="641673437" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1af85474-c00a-3e00-9f2d-0d03164129fa" locEndPos="22" urgent="true" prio="Not Defined" locEndLn="22" goals="1," locStartln="22" sev="3" locRef="52" tool="jtest" lineHash="641673437" unbViolId="71007182-6486-3d63-b387-2fa69ad2fabb" risk="Undefined" locType="sr" hash="-179143843" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="27" locFile="/com.parasoft:demo/src/main/java/examples/nbank/LogAccountInfo.java" auth="Gina" rule="FORMAT.BLCD" lnHash="-545570584" pkg="examples.nbank" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2c05715c-e74c-3cab-a42e-b6ba2f7b4b55" locEndPos="6" urgent="true" prio="Not Defined" locEndLn="27" goals="1," locStartln="27" sev="3" locRef="52" tool="jtest" lineHash="-545570584" unbViolId="1b4c5a7a-81bb-356e-8a83-afedca39030d" risk="Undefined" locType="sr" hash="-179143843" />
    <StdViol msg="This assignment may store the original parameter 'account' rather than a copy of the parameter into the field '_account'" ln="32" locFile="/com.parasoft:demo/src/main/java/examples/nbank/LogAccountInfo.java" auth="Gina" rule="SECURITY.EAB.SMO" lnHash="1069571747" pkg="examples.nbank" rule.header="Do not store user-given mutable objects directly into variables" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="42630598-23f8-3a34-9e7d-8a561d231cb5" locEndPos="30" urgent="true" prio="Not Defined" locEndLn="32" goals="1," locStartln="32" sev="3" locRef="52" tool="jtest" lineHash="1069571747" unbViolId="e7f4350d-eafe-3e02-9f42-98de84abb624" risk="Undefined" locType="sr" hash="-179143843" />
    <StdViol msg="The overriding method 'run()' does not have an &quot;@Override&quot; annotation" ln="36" locFile="/com.parasoft:demo/src/main/java/examples/nbank/LogAccountInfo.java" auth="Gina" rule="OOP.AOA" lnHash="2048025586" pkg="examples.nbank" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1950ae27-c04e-338e-a316-d5de728c0f2d" locEndPos="23" urgent="true" prio="Not Defined" locEndLn="36" goals="1," locStartln="36" sev="3" locRef="52" tool="jtest" lineHash="2048025586" unbViolId="9b90f44b-97ec-39a9-bd94-a2067f609c2a" risk="Undefined" locType="sr" hash="-179143843" />
    <StdViol msg="You may not want to use the type 'FileWriter' because it does not allow you to specify an encoding option" ln="40" locFile="/com.parasoft:demo/src/main/java/examples/nbank/LogAccountInfo.java" auth="Gina" rule="INTER.SEO" lnHash="-134000497" pkg="examples.nbank" rule.header="Avoid calling methods and constructors which do not allow you to specify a character encoding option" locStartPos="73" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="23deb3d0-a532-3e5e-a705-d8c0d8478f37" locEndPos="83" urgent="true" prio="Not Defined" locEndLn="40" goals="1," locStartln="40" sev="3" locRef="52" tool="jtest" lineHash="-134000497" unbViolId="89cd00f7-8fd6-3212-a0fd-454879791cda" risk="Undefined" locType="sr" hash="-179143843" />
    <StdViol msg="Single character ' ' using double quotes in string concatenation" ln="41" locFile="/com.parasoft:demo/src/main/java/examples/nbank/LogAccountInfo.java" auth="Gina" rule="OPT.STR" lnHash="2128842844" pkg="examples.nbank" rule.header="Use single quotes instead of double quotes for single character string concatenation" locStartPos="33" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7cf6e326-9faf-31bc-84f3-85c01c3292be" locEndPos="36" urgent="true" prio="Not Defined" locEndLn="41" goals="1," locStartln="41" sev="3" locRef="52" tool="jtest" lineHash="2128842844" unbViolId="6e6374de-0503-3d95-a87c-f0ebc4367eb2" risk="Undefined" locType="sr" hash="-179143843" />
    <StdViol msg="Make sure 'System.err.println' is not a leftover debug statement" ln="44" locFile="/com.parasoft:demo/src/main/java/examples/nbank/LogAccountInfo.java" auth="Gina" rule="SECURITY.ESD.SIO" lnHash="-1238508370" pkg="examples.nbank" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="af653e1b-6c34-362e-b78f-13272e3b394f" locEndPos="50" urgent="true" prio="Not Defined" locEndLn="44" goals="1," locStartln="44" sev="3" locRef="52" tool="jtest" lineHash="-1238508370" unbViolId="f62647cb-7aae-3243-bae5-08a925047e17" risk="Undefined" locType="sr" hash="-179143843" />
    <StdViol msg="Print method 'println()' is not allowed in a &quot;catch&quot; block" ln="44" locFile="/com.parasoft:demo/src/main/java/examples/nbank/LogAccountInfo.java" auth="Gina" rule="SECURITY.ESD.PEO" lnHash="-1238508370" pkg="examples.nbank" rule.header="Do not pass exception messages into output in order to prevent the application from leaking sensitive information" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="399ed225-87b8-3c3b-bf9b-537f56370ac4" locEndPos="34" urgent="true" prio="Not Defined" locEndLn="44" goals="1," locStartln="44" sev="1" locRef="52" tool="jtest" lineHash="-1238508370" unbViolId="440624d0-d6de-34f2-8e4a-3edd876c38c8" risk="Undefined" locType="sr" hash="-179143843" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="3" locFile="/com.parasoft:demo/src/main/java/examples/nbank/WithdrawalTransaction.java" auth="John" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.nbank" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="82cadfcc-b5bc-34c4-8249-b0035554867f" locEndPos="2" urgent="true" prio="Not Defined" locEndLn="3" goals="1," locStartln="3" sev="3" locRef="53" tool="jtest" lineHash="46511" unbViolId="10aed69b-6e4c-3d41-94d4-028d2a57ac02" risk="Undefined" locType="sr" hash="-1206559161" />
    <StdViol msg="Missing Javadoc comment for method 'WithdrawalTransaction()'" ln="12" locFile="/com.parasoft:demo/src/main/java/examples/nbank/WithdrawalTransaction.java" auth="John" rule="JAVADOC.PJDM" lnHash="-895559259" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="11" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="55791c59-e4b3-3b9c-b916-0c4ef2f978b5" locEndPos="32" urgent="true" prio="Not Defined" locEndLn="12" goals="1," locStartln="12" sev="3" locRef="53" tool="jtest" lineHash="-895559259" unbViolId="48277693-f18c-3019-b1bd-35a1c5c40a57" risk="Undefined" locType="sr" hash="-1206559161" />
    <FlowViol msg="Condition &quot;(amount &lt; 0) &amp;&amp; (amount > MAX_WITHDRAW)&quot; always evaluates to false" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/nbank/WithdrawalTransaction.java" ruleSAFMsg="Point where senseless condition is used" FirstElSrcRngEndPos="45" auth="John" FirstElSrcRngEndLn="12" rule="BD.PB.CC" FirstElSrcRngStartPos="11" lnHash="-1260090903" ruleSCSCMsg="Start of the path" pkg="examples.nbank" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/WithdrawalTransaction.java" rule.header="Avoid conditions that always evaluate to the same value" FirstElSrcRngStartln="12" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="1150029250" lang="java" violId="29d0fb80-4221-3ada-8ab9-dd00ccd84235" locEndPos="13" urgent="true" prio="Not Defined" locEndLn="14" goals="1," locStartln="13" sev="2" locRef="53" tool="jtest" lineHash="-1260090903" unbViolId="6c240523-cac9-3cd3-bd8d-2798762a1f0d" risk="Undefined" locType="sr" hash="-1206559161" causeLocRef="53">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-895559259" locType="sr" srcRnghash="-1206559161" locRef="53" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/WithdrawalTransaction.java" ln="12" srcRngStartPos="11" srcRngEndPos="45" srcRngStartln="12" srcRngEndLn="12" desc="WithdrawalTransaction(int amount)" ElType=".C" rngLn="12">
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="347821559" locType="sr" srcRnghash="-251506569" locRef="42" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/AbstractTransaction.java" ln="11" srcRngStartPos="13" srcRngEndPos="37" srcRngStartln="11" srcRngEndLn="11" desc="isTransactionAvailable()" ElType="." rngLn="11">
          <ElDescList>
            <ElDesc lineHash="1622313272" locType="sr" srcRnghash="-251506569" locRef="42" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/AbstractTransaction.java" ln="20" srcRngStartPos="16" srcRngEndPos="45" srcRngStartln="20" srcRngEndLn="20" desc="BankState.isMaintenanceMode()" ElType="." rngLn="20">
              <ElDescList>
                <ElDesc lineHash="-1804607908" locType="sr" srcRnghash="2120971007" locRef="45" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/BankState.java" ln="8" srcRngStartPos="8" srcRngEndPos="60" srcRngStartln="8" srcRngEndLn="8" desc="String value = System.getProperty(MAINTENANCE_MODE);" ElType="." rngLn="8" />
                <ElDesc lineHash="1408222922" locType="sr" srcRnghash="2120971007" locRef="45" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/BankState.java" ln="9" srcRngStartPos="8" srcRngEndPos="62" srcRngStartln="9" srcRngEndLn="9" desc="if ((value == null) || (value.trim().length() == 0)) {" ElType="." rngLn="9">
                  <Anns>
                    <Ann msg="Condition evaluation: (value == null) (assuming false)" kind="condEval" />
                    <Ann msg="Condition evaluation: (value.trim().length() == 0) (assuming false)" kind="condEval" />
                    <Ann msg="Condition evaluation: (value == null) || (value.trim().length() == 0) (false)" kind="condEval" />
                  </Anns>
                </ElDesc>
                <ElDesc lineHash="589285261" locType="sr" srcRnghash="2120971007" locRef="45" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/BankState.java" ln="12" srcRngStartPos="8" srcRngEndPos="38" srcRngStartln="12" srcRngEndLn="12" desc="return Boolean.valueOf(value);" ElType="." rngLn="12" />
              </ElDescList>
            </ElDesc>
            <ElDesc lineHash="1622313272" locType="sr" srcRnghash="-251506569" locRef="42" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/AbstractTransaction.java" ln="20" srcRngStartPos="8" srcRngEndPos="46" srcRngStartln="20" srcRngEndLn="20" desc="return !BankState.isMaintenanceMode();" ElType="." rngLn="20" />
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="347821559" locType="sr" srcRnghash="-251506569" locRef="42" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/AbstractTransaction.java" ln="11" srcRngStartPos="8" srcRngEndPos="13" srcRngStartln="11" srcRngEndLn="12" desc="if (!isTransactionAvailable())" ElType="." rngLn="11">
          <Anns>
            <Ann msg="Condition evaluation: !isTransactionAvailable().booleanValue() (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1260090903" locType="sr" srcRnghash="-1206559161" locRef="53" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/WithdrawalTransaction.java" ln="13" srcRngStartPos="8" srcRngEndPos="13" srcRngStartln="13" srcRngEndLn="14" desc="if ((amount &lt; 0) &amp;&amp; (amount > MAX_WITHDRAW))" ElType=".P" rngLn="13">
          <Anns>
            <Ann msg="Condition evaluation: (amount &lt; 0) (assuming false)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="&quot;if&quot; statement without a &quot;{ }&quot; block" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/nbank/WithdrawalTransaction.java" auth="John" rule="CODSTA.BP.BLK" lnHash="-1260090903" pkg="examples.nbank" rule.header="Provide a '{}' block for conditional statements" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2ca3af3e-1c66-3d1a-9c8c-53732fa860ec" locEndPos="10" urgent="true" prio="Not Defined" locEndLn="13" goals="1," locStartln="13" sev="3" locRef="53" tool="jtest" lineHash="-1260090903" unbViolId="665443cd-305a-3ee1-85e0-0ba313730a00" risk="Undefined" locType="sr" hash="-1206559161" />
    <FlowViol msg="Condition &quot;amount > 1000&quot; always evaluates to false" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/nbank/WithdrawalTransaction.java" ruleSAFMsg="Point where senseless condition is used" FirstElSrcRngEndPos="45" auth="John" FirstElSrcRngEndLn="12" rule="BD.PB.CC" FirstElSrcRngStartPos="11" lnHash="-1260090903" ruleSCSCMsg="Start of the path" pkg="examples.nbank" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/WithdrawalTransaction.java" rule.header="Avoid conditions that always evaluate to the same value" FirstElSrcRngStartln="12" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-528680295" lang="java" violId="11065b8a-ec6d-3a85-98e6-40c16951fdf9" locEndPos="51" urgent="true" prio="Not Defined" locEndLn="13" goals="1," locStartln="13" sev="2" locRef="53" tool="jtest" lineHash="-1260090903" unbViolId="3a53b2c3-3dcd-3f24-9957-827af6e8a4b3" risk="Undefined" locType="sr" hash="-1206559161" causeLocRef="53">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-895559259" locType="sr" srcRnghash="-1206559161" locRef="53" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/WithdrawalTransaction.java" ln="12" srcRngStartPos="11" srcRngEndPos="45" srcRngStartln="12" srcRngEndLn="12" desc="WithdrawalTransaction(int amount)" ElType=".C" rngLn="12">
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="347821559" locType="sr" srcRnghash="-251506569" locRef="42" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/AbstractTransaction.java" ln="11" srcRngStartPos="13" srcRngEndPos="37" srcRngStartln="11" srcRngEndLn="11" desc="isTransactionAvailable()" ElType="." rngLn="11">
          <ElDescList>
            <ElDesc lineHash="1622313272" locType="sr" srcRnghash="-251506569" locRef="42" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/AbstractTransaction.java" ln="20" srcRngStartPos="16" srcRngEndPos="45" srcRngStartln="20" srcRngEndLn="20" desc="BankState.isMaintenanceMode()" ElType="." rngLn="20">
              <ElDescList>
                <ElDesc lineHash="-1804607908" locType="sr" srcRnghash="2120971007" locRef="45" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/BankState.java" ln="8" srcRngStartPos="8" srcRngEndPos="60" srcRngStartln="8" srcRngEndLn="8" desc="String value = System.getProperty(MAINTENANCE_MODE);" ElType="." rngLn="8" />
                <ElDesc lineHash="1408222922" locType="sr" srcRnghash="2120971007" locRef="45" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/BankState.java" ln="9" srcRngStartPos="8" srcRngEndPos="62" srcRngStartln="9" srcRngEndLn="9" desc="if ((value == null) || (value.trim().length() == 0)) {" ElType="." rngLn="9">
                  <Anns>
                    <Ann msg="Condition evaluation: (value == null) (assuming false)" kind="condEval" />
                    <Ann msg="Condition evaluation: (value.trim().length() == 0) (assuming false)" kind="condEval" />
                    <Ann msg="Condition evaluation: (value == null) || (value.trim().length() == 0) (false)" kind="condEval" />
                  </Anns>
                </ElDesc>
                <ElDesc lineHash="589285261" locType="sr" srcRnghash="2120971007" locRef="45" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/BankState.java" ln="12" srcRngStartPos="8" srcRngEndPos="38" srcRngStartln="12" srcRngEndLn="12" desc="return Boolean.valueOf(value);" ElType="." rngLn="12" />
              </ElDescList>
            </ElDesc>
            <ElDesc lineHash="1622313272" locType="sr" srcRnghash="-251506569" locRef="42" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/AbstractTransaction.java" ln="20" srcRngStartPos="8" srcRngEndPos="46" srcRngStartln="20" srcRngEndLn="20" desc="return !BankState.isMaintenanceMode();" ElType="." rngLn="20" />
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="347821559" locType="sr" srcRnghash="-251506569" locRef="42" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/AbstractTransaction.java" ln="11" srcRngStartPos="8" srcRngEndPos="13" srcRngStartln="11" srcRngEndLn="12" desc="if (!isTransactionAvailable())" ElType="." rngLn="11">
          <Anns>
            <Ann msg="Condition evaluation: !isTransactionAvailable().booleanValue() (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1260090903" locType="sr" srcRnghash="-1206559161" locRef="53" srcRngFile="/com.parasoft:demo/src/main/java/examples/nbank/WithdrawalTransaction.java" ln="13" srcRngStartPos="12" srcRngEndPos="51" srcRngStartln="13" srcRngEndLn="13" desc="(amount &lt; 0) &amp;&amp; (amount > MAX_WITHDRAW)" ElType=".P" rngLn="13">
          <Anns>
            <Ann msg="Condition evaluation: (amount &lt; 0) (assuming true)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Missing Javadoc comment for method 'apply()'" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/nbank/WithdrawalTransaction.java" auth="John" rule="JAVADOC.PJDM" lnHash="889244851" pkg="examples.nbank" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6582ddab-9493-3082-8ab6-ab6e57b1c9e7" locEndPos="24" urgent="true" prio="Not Defined" locEndLn="18" goals="1," locStartln="18" sev="3" locRef="53" tool="jtest" lineHash="889244851" unbViolId="d7369ae1-535d-36e6-8e8d-60e6a5fc8b84" risk="Undefined" locType="sr" hash="-1206559161" />
    <StdViol msg="The overriding method 'apply()' does not have an &quot;@Override&quot; annotation" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/nbank/WithdrawalTransaction.java" auth="John" rule="OOP.AOA" lnHash="889244851" pkg="examples.nbank" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b5eafbb3-57a5-34fb-baa1-c5ef4b22067a" locEndPos="24" urgent="true" prio="Not Defined" locEndLn="18" goals="1," locStartln="18" sev="3" locRef="53" tool="jtest" lineHash="889244851" unbViolId="e56f402a-3cdd-3352-9d94-cd6c529eebb1" risk="Undefined" locType="sr" hash="-1206559161" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="3" locFile="/com.parasoft:demo/src/main/java/examples/queue/Queue.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="-503186195" pkg="examples.queue" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="76887971-a50c-33dc-8443-2652295845b6" locEndPos="2" prio="Not Defined" locEndLn="3" goals="0," locStartln="3" sev="3" locRef="54" tool="jtest" lineHash="-503186195" unbViolId="14bd79c3-fe5a-3c0b-8eaa-aaa4b3fc7ead" risk="Undefined" locType="sr" hash="-981357238" />
    <StdViol msg="Missing Javadoc comment for 'Queue'" ln="3" locFile="/com.parasoft:demo/src/main/java/examples/queue/Queue.java" auth="mgorecka" rule="JAVADOC.PJDC" lnHash="-503186195" pkg="examples.queue" rule.header="Provide Javadoc comments and descriptions for types" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4c51ef66-8c16-30ce-bb3c-40a1e374a30c" locEndPos="18" prio="Not Defined" locEndLn="3" goals="0," locStartln="3" sev="3" locRef="54" tool="jtest" lineHash="-503186195" unbViolId="ab1a3e6d-ac6e-3d70-a61b-098d3aa9527a" risk="Undefined" locType="sr" hash="-981357238" />
    <StdViol msg="Avoid having more than one type in each file" ln="3" locFile="/com.parasoft:demo/src/main/java/examples/queue/Queue.java" auth="mgorecka" rule="CODSTA.ORG.AMOC" lnHash="-503186195" pkg="examples.queue" rule.header="Do not have more than one type in each file" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="6f48920a-f567-39f1-bdd5-dd5c52f6825e" locEndPos="18" prio="Not Defined" locEndLn="3" goals="0," locStartln="3" sev="4" locRef="54" tool="jtest" lineHash="-503186195" unbViolId="aaf5a689-3ebb-330b-b662-479eb500f372" risk="Undefined" locType="sr" hash="-981357238" />
    <StdViol msg="Missing Javadoc comment for method 'Queue()'" ln="5" locFile="/com.parasoft:demo/src/main/java/examples/queue/Queue.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="2104542358" pkg="examples.queue" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="11" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="766ab535-8e9e-3e18-8799-39fc29fb9191" locEndPos="16" prio="Not Defined" locEndLn="5" goals="0," locStartln="5" sev="3" locRef="54" tool="jtest" lineHash="2104542358" unbViolId="830ff1a4-41e3-33bc-a1e0-9eba5fe1660e" risk="Undefined" locType="sr" hash="-981357238" />
    <StdViol msg="Missing Javadoc comment for method 'add()'" ln="10" locFile="/com.parasoft:demo/src/main/java/examples/queue/Queue.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-605611490" pkg="examples.queue" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7965c72e-ca6b-3664-9f08-bf40e60d91d2" locEndPos="19" prio="Not Defined" locEndLn="10" goals="0," locStartln="10" sev="3" locRef="54" tool="jtest" lineHash="-605611490" unbViolId="a5e1c330-66a3-3245-b0af-6815afdf600b" risk="Undefined" locType="sr" hash="-981357238" />
    <StdViol msg="Missing Javadoc comment for method 'remove()'" ln="21" locFile="/com.parasoft:demo/src/main/java/examples/queue/Queue.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-1834636040" pkg="examples.queue" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="df9ff8da-1701-3d30-9182-ad1f5e23ca34" locEndPos="24" prio="Not Defined" locEndLn="21" goals="0," locStartln="21" sev="3" locRef="54" tool="jtest" lineHash="-1834636040" unbViolId="2720fb03-8f00-39e5-a823-4646de423c74" risk="Undefined" locType="sr" hash="-981357238" />
    <StdViol msg="Comment contains Java code: // if (isEmpty ()) // throw ne..." ln="26" locFile="/com.parasoft:demo/src/main/java/examples/queue/Queue.java" auth="mgorecka" rule="UC.ACC" lnHash="2083201702" pkg="examples.queue" rule.header="Remove commented out Java code" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d5f7dd15-adbe-3aa4-a7f5-5c7984756ba3" locEndPos="44" prio="Not Defined" locEndLn="27" goals="0," locStartln="26" sev="3" locRef="54" tool="jtest" lineHash="2083201702" unbViolId="cdf3fd04-8d4f-306a-827f-734318a658d0" risk="Undefined" locType="sr" hash="-981357238" />
    <StdViol msg="Missing Javadoc comment for method 'isEmpty()'" ln="33" locFile="/com.parasoft:demo/src/main/java/examples/queue/Queue.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="151615920" pkg="examples.queue" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d1d7a9af-7274-3f8e-aa2e-9d767c3e9254" locEndPos="26" prio="Not Defined" locEndLn="33" goals="0," locStartln="33" sev="3" locRef="54" tool="jtest" lineHash="151615920" unbViolId="076f30c6-efeb-3a1b-afd1-accd1dce0cae" risk="Undefined" locType="sr" hash="-981357238" />
    <StdViol msg="Missing Javadoc comment for method 'removeAll()'" ln="37" locFile="/com.parasoft:demo/src/main/java/examples/queue/Queue.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="-968970588" pkg="examples.queue" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="37dfdb8f-c4ff-325f-84e0-d0900bdc1757" locEndPos="25" prio="Not Defined" locEndLn="37" goals="0," locStartln="37" sev="3" locRef="54" tool="jtest" lineHash="-968970588" unbViolId="db3b0fb4-a637-3a9a-959f-da4c39e51d88" risk="Undefined" locType="sr" hash="-981357238" />
    <StdViol msg="Missing Javadoc comment for method 'toString()'" ln="43" locFile="/com.parasoft:demo/src/main/java/examples/queue/Queue.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="622124256" pkg="examples.queue" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="02b92c6f-a759-3d98-a13a-ffc79bdfe56e" locEndPos="26" prio="Not Defined" locEndLn="43" goals="0," locStartln="43" sev="3" locRef="54" tool="jtest" lineHash="622124256" unbViolId="293f86e8-ffa4-3c21-b0a0-086c94a3138d" risk="Undefined" locType="sr" hash="-981357238" />
    <StdViol msg="&quot;if&quot; statement without a &quot;{ }&quot; block" ln="46" locFile="/com.parasoft:demo/src/main/java/examples/queue/Queue.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="-1001377924" pkg="examples.queue" rule.header="Provide a '{}' block for conditional statements" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ef064f10-d487-3866-a33c-ab1fba4abaa2" locEndPos="14" prio="Not Defined" locEndLn="46" goals="0," locStartln="46" sev="3" locRef="54" tool="jtest" lineHash="-1001377924" unbViolId="0aebdf62-efd5-3e51-bdfc-689e40f17800" risk="Undefined" locType="sr" hash="-981357238" />
    <StdViol msg="&quot;!=&quot; is used when comparing Objects. 'equals()' should be used instead" ln="46" locFile="/com.parasoft:demo/src/main/java/examples/queue/Queue.java" auth="mgorecka" rule="PB.CUB.UEIC" lnHash="-1001377924" pkg="examples.queue" rule.header="Do not use '==' or '!=' to compare objects" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="59846a13-c446-3fec-b2e7-1de91c76ffb1" locEndPos="30" prio="Not Defined" locEndLn="46" goals="0," locStartln="46" sev="2" locRef="54" tool="jtest" lineHash="-1001377924" unbViolId="0742609f-b135-323e-8a96-66fa815ac1c6" risk="Undefined" locType="sr" hash="-981357238" />
    <StdViol msg="Single character ',' using double quotes in string concatenation" ln="47" locFile="/com.parasoft:demo/src/main/java/examples/queue/Queue.java" auth="mgorecka" rule="OPT.STR" lnHash="-1163956310" pkg="examples.queue" rule.header="Use single quotes instead of double quotes for single character string concatenation" locStartPos="30" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5e2a8699-0ad7-3e98-af9e-5cd120865efc" locEndPos="33" prio="Not Defined" locEndLn="47" goals="0," locStartln="47" sev="3" locRef="54" tool="jtest" lineHash="-1163956310" unbViolId="9bc35bef-2ef8-3316-b955-4b2bd782f205" risk="Undefined" locType="sr" hash="-981357238" />
    <StdViol msg="Single character ']' using double quotes in string concatenation" ln="50" locFile="/com.parasoft:demo/src/main/java/examples/queue/Queue.java" auth="mgorecka" rule="OPT.STR" lnHash="-2082880039" pkg="examples.queue" rule.header="Use single quotes instead of double quotes for single character string concatenation" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5ce994c7-84ab-3994-a545-4ca8fed78db5" locEndPos="25" prio="Not Defined" locEndLn="50" goals="0," locStartln="50" sev="3" locRef="54" tool="jtest" lineHash="-2082880039" unbViolId="459860b7-5024-346f-8c8a-4b7378d9b871" risk="Undefined" locType="sr" hash="-981357238" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="58" locFile="/com.parasoft:demo/src/main/java/examples/queue/Queue.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="-1361581318" pkg="examples.queue" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e4e86197-0455-3935-89d5-a0882a4cacb4" locEndPos="6" prio="Not Defined" locEndLn="58" goals="0," locStartln="58" sev="3" locRef="54" tool="jtest" lineHash="-1361581318" unbViolId="6de31aea-7dd0-3f8a-8155-fd77a54f6f91" risk="Undefined" locType="sr" hash="-981357238" />
    <StdViol msg="Member class could be declared &quot;static&quot;: QueueItem" ln="58" locFile="/com.parasoft:demo/src/main/java/examples/queue/Queue.java" auth="mgorecka" rule="OPT.SI" lnHash="-1361581318" pkg="examples.queue" rule.header="Declare member classes &quot;static&quot; if possible" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="a378d0eb-ab78-33c8-bc54-c41c1364061b" locEndPos="27" prio="Not Defined" locEndLn="58" goals="0," locStartln="58" sev="3" locRef="54" tool="jtest" lineHash="-1361581318" unbViolId="2f58156c-eb7b-383c-b58b-51f8464d0baa" risk="Undefined" locType="sr" hash="-981357238" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="82" locFile="/com.parasoft:demo/src/main/java/examples/queue/Queue.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="-2073987818" pkg="examples.queue" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f89287ce-fdce-345a-8d1c-2a28cca6c273" locEndPos="2" prio="Not Defined" locEndLn="82" goals="0," locStartln="82" sev="3" locRef="54" tool="jtest" lineHash="-2073987818" unbViolId="bc511d8f-b4b5-3f45-a7d2-e9fa61b9abd4" risk="Undefined" locType="sr" hash="-981357238" />
    <StdViol msg="No serialVersionUID declared in class 'EmptyQueueException'" ln="82" locFile="/com.parasoft:demo/src/main/java/examples/queue/Queue.java" auth="mgorecka" rule="SERIAL.DUID" lnHash="-2073987818" pkg="examples.queue" rule.header="Create a 'serialVersionUID' for all 'Serializable' classes" locStartPos="6" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="cbada9e6-deab-31bd-ad7c-d289f403bdd7" locEndPos="25" prio="Not Defined" locEndLn="82" goals="0," locStartln="82" sev="3" locRef="54" tool="jtest" lineHash="-2073987818" unbViolId="158a947f-5fbe-337e-aa03-7243a9129287" risk="Undefined" locType="sr" hash="-981357238" />
    <StdViol msg="Avoid having more than one type in each file" ln="82" locFile="/com.parasoft:demo/src/main/java/examples/queue/Queue.java" auth="mgorecka" rule="CODSTA.ORG.AMOC" lnHash="-2073987818" pkg="examples.queue" rule.header="Do not have more than one type in each file" locStartPos="6" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="7c27e48a-e80e-357a-92d8-c466c58068e2" locEndPos="25" prio="Not Defined" locEndLn="82" goals="0," locStartln="82" sev="4" locRef="54" tool="jtest" lineHash="-2073987818" unbViolId="5e9eae6c-fd14-3f53-8ae0-282a027e2a01" risk="Undefined" locType="sr" hash="-981357238" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.security" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="235b1408-996c-3307-a6a7-59e256ae7675" locEndPos="2" prio="Not Defined" locEndLn="15" goals="0," locStartln="15" sev="3" locRef="55" tool="jtest" lineHash="46511" unbViolId="125357d1-3fc2-37fa-9b79-fa1b3da167a7" risk="Undefined" locType="sr" hash="-1145404863" />
    <StdViol msg="No serialVersionUID declared in class 'InputValidation'" ln="57" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" auth="mgorecka" rule="SERIAL.DUID" lnHash="1304357333" pkg="examples.security" rule.header="Create a 'serialVersionUID' for all 'Serializable' classes" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2bbbfde6-662e-3e22-8e4e-c20273ecf966" locEndPos="28" prio="Not Defined" locEndLn="57" goals="0," locStartln="57" sev="3" locRef="55" tool="jtest" lineHash="1304357333" unbViolId="f75711fb-10cf-3afc-b1d5-0b5fc2a11041" risk="Undefined" locType="sr" hash="-1145404863" />
    <StdViol msg="Servlet class 'InputValidation' contains JDBC code" ln="57" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" auth="mgorecka" rule="SERVLET.AJDBC" lnHash="1304357333" pkg="examples.security" rule.header="Do not use JDBC code in Servlet classes" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="49965a7f-4fb0-3ebb-a709-d2e4be6d7662" locEndPos="28" prio="Not Defined" locEndLn="57" goals="0," locStartln="57" sev="3" locRef="55" tool="jtest" lineHash="1304357333" unbViolId="be4caf4f-ceaf-3a05-bf6c-0e89daedafbf" risk="Undefined" locType="sr" hash="-1145404863" />
    <StdViol msg="The field '_connection' is used but is never assigned a non-&quot;null&quot; value" ln="59" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" auth="mgorecka" rule="PB.USC.FCBS" lnHash="-628236893" pkg="examples.security" rule.header="Avoid using &quot;private&quot; fields which are never given a meaningful value" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ba24bc03-ed4e-310a-a177-0131fbaa953e" locEndPos="34" prio="Not Defined" locEndLn="59" goals="0," locStartln="59" sev="2" locRef="55" tool="jtest" lineHash="-628236893" unbViolId="bb57c2ca-95d2-36dc-9c44-334f9116766e" risk="Undefined" locType="sr" hash="-1145404863" />
    <StdViol msg="The instance field '_connection' is defined in a Servlet class" ln="59" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" auth="mgorecka" rule="SERVLET.IF" lnHash="-628236893" pkg="examples.security" rule.header="Do not define instance fields in Servlet classes" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="4e1d581f-33ab-350b-b29a-20480a83d11a" locEndPos="34" prio="Not Defined" locEndLn="59" goals="0," locStartln="59" sev="1" locRef="55" tool="jtest" lineHash="-628236893" unbViolId="c5a7679d-009a-3177-a72e-3a001e7a5fcd" risk="Undefined" locType="sr" hash="-1145404863" />
    <StdViol msg="Variable 'output' may not have a close resource" ln="63" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" auth="mgorecka" rule="PB.CLOSE" lnHash="2012167559" pkg="examples.security" rule.header="Unrestricted lock resource" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ff397aaf-2ece-322a-b2d4-b8ac1ce97489" locEndPos="73" prio="Not Defined" locEndLn="63" goals="0," locStartln="63" sev="1" locRef="55" tool="jtest" lineHash="2012167559" unbViolId="b10e3578-be95-325a-823c-8e8eb63fd978" risk="Undefined" locType="sr" hash="-1145404863" />
    <StdViol msg="Consider using a &quot;Context&quot; Object instead of calling 'getParameter()'" ln="65" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" auth="mgorecka" rule="SERVLET.UCO" lnHash="-103292812" pkg="examples.security" rule.header="Use a Context Object to manage HTTP request parameters" locStartPos="34" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="e5e2e5b1-0e25-33c6-9ca1-c1272ea8d6b8" locEndPos="46" prio="Not Defined" locEndLn="65" goals="0," locStartln="65" sev="2" locRef="55" tool="jtest" lineHash="-103292812" unbViolId="ed00aa36-7d69-37b7-b7c2-3b80acf9e5c3" risk="Undefined" locType="sr" hash="-1145404863" />
    <StdViol msg="Consider using a &quot;Context&quot; Object instead of calling 'getParameter()'" ln="66" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" auth="mgorecka" rule="SERVLET.UCO" lnHash="1142493140" pkg="examples.security" rule.header="Use a Context Object to manage HTTP request parameters" locStartPos="34" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="804a6985-31b8-37a5-b2f2-86459ac22bd1" locEndPos="46" prio="Not Defined" locEndLn="66" goals="0," locStartln="66" sev="2" locRef="55" tool="jtest" lineHash="1142493140" unbViolId="d90b6f0d-922d-3c72-840b-0a4e34c1d3d6" risk="Undefined" locType="sr" hash="-1145404863" />
    <StdViol msg="Comment contains Java code: // DEFINITIVE FIX: replace the..." ln="67" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" auth="mgorecka" rule="UC.ACC" lnHash="1269068408" pkg="examples.security" rule.header="Remove commented out Java code" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e1413c11-bf17-3a83-b1da-4eb3601ce818" locEndPos="72" prio="Not Defined" locEndLn="69" goals="0," locStartln="67" sev="3" locRef="55" tool="jtest" lineHash="1269068408" unbViolId="eabf9fc2-01ac-314c-8602-cd3499dfa54a" risk="Undefined" locType="sr" hash="-1145404863" />
    <StdViol msg="Variable 'stmt' is not declared in this &quot;try&quot; block" ln="85" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" auth="mgorecka" rule="CODSTA.READ.DVCU" lnHash="1258828630" pkg="examples.security" rule.header="Declare variables as close as possible to where they are used" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="fd14d8f9-8792-3f7c-8350-75bc660207c6" locEndPos="11" prio="Not Defined" locEndLn="85" goals="0," locStartln="85" sev="4" locRef="55" tool="jtest" lineHash="1258828630" unbViolId="3c9f2a0c-802f-3d42-bda6-d6c1f6cdae37" risk="Undefined" locType="sr" hash="-1145404863" />
    <StdViol msg="Variable 'rs' is not declared in this &quot;try&quot; block" ln="85" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" auth="mgorecka" rule="CODSTA.READ.DVCU" lnHash="1258828630" pkg="examples.security" rule.header="Declare variables as close as possible to where they are used" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="376fbfbc-0334-37b2-b6c5-9ded45d52a14" locEndPos="11" prio="Not Defined" locEndLn="85" goals="0," locStartln="85" sev="4" locRef="55" tool="jtest" lineHash="1258828630" unbViolId="f0937474-ed4b-36d9-bceb-ae3567bb1de7" risk="Undefined" locType="sr" hash="-1145404863" />
    <StdViol msg="Comment contains Java code: // PARTIAL FIX: validate usern..." ln="86" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" auth="mgorecka" rule="UC.ACC" lnHash="1002452279" pkg="examples.security" rule.header="Remove commented out Java code" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="99af0e1f-e9a5-3ab3-a012-87e16cec1218" locEndPos="45" prio="Not Defined" locEndLn="88" goals="0," locStartln="86" sev="3" locRef="55" tool="jtest" lineHash="1002452279" unbViolId="f2cecb2e-7a52-3c8c-b945-dfce857afe6e" risk="Undefined" locType="sr" hash="-1145404863" />
    <StdViol msg="This String contains &quot;SELECT *&quot;, make sure it is not being used in a database query" ln="89" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" auth="mgorecka" rule="SECURITY.IBA.AUSS" lnHash="-168135453" pkg="examples.security" rule.header="Avoid using &quot;SELECT *&quot; in SQL queries" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="bc9df30e-be0a-35a2-913f-e4f4adc39d6b" locEndPos="65" prio="Not Defined" locEndLn="89" goals="0," locStartln="89" sev="1" locRef="55" tool="jtest" lineHash="-168135453" unbViolId="5853ecdd-8783-3cd7-82c2-9b132112a896" risk="Undefined" locType="sr" hash="-1145404863" />
    <StdViol msg="Single character ''' using double quotes in string concatenation" ln="89" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" auth="mgorecka" rule="OPT.STR" lnHash="-168135453" pkg="examples.security" rule.header="Use single quotes instead of double quotes for single character string concatenation" locStartPos="111" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1cd5ab89-ec25-3d22-a679-5364e05e3579" locEndPos="114" prio="Not Defined" locEndLn="89" goals="0," locStartln="89" sev="3" locRef="55" tool="jtest" lineHash="-168135453" unbViolId="d6150122-df06-3b97-bd67-5e0cd361e917" risk="Undefined" locType="sr" hash="-1145404863" />
    <StdViol msg="Consider using 'prepareCall()' or 'prepareStatement()' to prevent SQL injection vulnerabilities" ln="90" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" auth="mgorecka" rule="SECURITY.IBA.UPS" lnHash="-1686616749" pkg="examples.security" rule.header="Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'" locStartPos="31" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="00b96dab-4d06-3cbe-b181-d0b4d9afb9ea" locEndPos="46" prio="Not Defined" locEndLn="90" goals="0," locStartln="90" sev="1" locRef="55" tool="jtest" lineHash="-1686616749" unbViolId="d3c757db-9a92-381d-8cc7-3d44df3b0b94" risk="Undefined" locType="sr" hash="-1145404863" />
    <FlowViol msg="Injection of data received from servlet request (&quot;query&quot;) to SQL query" ln="91" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="59" auth="mgorecka" FirstElSrcRngEndLn="66" rule="BD.SECURITY.TDSQL" FirstElSrcRngStartPos="8" lnHash="849041673" ruleSCSCMsg="Tainting point" pkg="examples.security" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" rule.header="Protect against SQL injection" FirstElSrcRngStartln="66" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="1889737938" lang="java" violId="8bde09bd-24a5-316c-9898-76e7797b4858" locEndPos="41" urgent="true" prio="Not Defined" locEndLn="91" goals="1," locStartln="91" sev="1" locRef="55" tool="jtest" lineHash="849041673" unbViolId="a65a0a3a-2a95-33ac-a2b5-fd899a3cdf53" risk="Undefined" locType="sr" hash="-1145404863" causeLocRef="55">
      <Props>
        <Prop key="Tracked variables" val="Tainted data" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="2012167559" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="63" srcRngStartPos="8" srcRngEndPos="73" srcRngStartln="63" srcRngEndLn="63" desc="PrintStream output = new PrintStream(response.getOutputStream());" ElType="." rngLn="63" />
        <ElDesc lineHash="-103292812" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="65" srcRngStartPos="8" srcRngEndPos="59" srcRngStartln="65" srcRngEndLn="65" desc="String username = request.getParameter(&quot;username&quot;);" ElType="." rngLn="65" />
        <ElDesc lineHash="1142493140" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="66" srcRngStartPos="8" srcRngEndPos="59" srcRngStartln="66" srcRngEndLn="66" desc="String password = request.getParameter(&quot;password&quot;);" ElType=".C" rngLn="66">
          <Props>
            <Prop key="Tracked variables" val="password" />
          </Props>
          <Anns>
            <Ann msg="Tainting point" kind="cause" />
            <Ann msg="Tainted data: password" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1722882907" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="70" srcRngStartPos="13" srcRngEndPos="42" srcRngStartln="70" srcRngEndLn="70" desc="authorize(username, password)" ElType="!" rngLn="70">
          <ElDescList>
            <ElDesc lineHash="-271783734" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="83" srcRngStartPos="8" srcRngEndPos="30" srcRngStartln="83" srcRngEndLn="83" desc="Statement stmt = null;" ElType="." rngLn="83">
              <Props>
                <Prop key="Tracked variables" val="password" />
              </Props>
              <Anns>
                <Ann msg="Tainted data: password" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="920994605" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="84" srcRngStartPos="8" srcRngEndPos="28" srcRngStartln="84" srcRngEndLn="84" desc="ResultSet rs = null;" ElType="." rngLn="84" />
            <ElDesc lineHash="-168135453" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="89" srcRngStartPos="12" srcRngEndPos="115" srcRngStartln="89" srcRngEndLn="89" desc="String query = &quot;SELECT * FROM users WHERE username='&quot; + username + &quot;' AND password='&quot; + password + &quot;'&quot;;" ElType="!" rngLn="89" />
            <ElDesc lineHash="-1686616749" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="90" srcRngStartPos="12" srcRngEndPos="48" srcRngStartln="90" srcRngEndLn="90" desc="stmt = _connection.createStatement()" ElType="." rngLn="90">
              <Props>
                <Prop key="Tracked variables" val="query" />
              </Props>
              <Anns>
                <Ann msg="Tainted data: query" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="849041673" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="91" srcRngStartPos="12" srcRngEndPos="41" srcRngStartln="91" srcRngEndLn="91" desc="rs = stmt.executeQuery(query)" ElType=".P" rngLn="91">
              <Props>
                <Prop key="Tracked variables" val="query" />
              </Props>
              <Anns>
                <Ann msg="Tainted data: query" kind="var" />
                <Ann msg="Call to a dangerous method" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Injection of data received from servlet request (&quot;query&quot;) to SQL query" ln="91" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ruleSAFMsg="Call to a dangerous method" FirstElSrcRngEndPos="59" auth="mgorecka" FirstElSrcRngEndLn="65" rule="BD.SECURITY.TDSQL" FirstElSrcRngStartPos="8" lnHash="849041673" ruleSCSCMsg="Tainting point" pkg="examples.security" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" rule.header="Protect against SQL injection" FirstElSrcRngStartln="65" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="683852329" lang="java" violId="2a57e8e7-fcc8-320b-993c-47857232394b" locEndPos="41" urgent="true" prio="Not Defined" locEndLn="91" goals="1," locStartln="91" sev="1" locRef="55" tool="jtest" lineHash="849041673" unbViolId="a82c28f6-9e97-32ab-9224-63ed3ba29f9a" risk="Undefined" locType="sr" hash="-1145404863" causeLocRef="55">
      <Props>
        <Prop key="Tracked variables" val="Tainted data" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="2012167559" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="63" srcRngStartPos="8" srcRngEndPos="73" srcRngStartln="63" srcRngEndLn="63" desc="PrintStream output = new PrintStream(response.getOutputStream());" ElType="." rngLn="63" />
        <ElDesc lineHash="-103292812" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="65" srcRngStartPos="8" srcRngEndPos="59" srcRngStartln="65" srcRngEndLn="65" desc="String username = request.getParameter(&quot;username&quot;);" ElType=".C" rngLn="65">
          <Props>
            <Prop key="Tracked variables" val="username" />
          </Props>
          <Anns>
            <Ann msg="Tainting point" kind="cause" />
            <Ann msg="Tainted data: username" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1142493140" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="66" srcRngStartPos="8" srcRngEndPos="59" srcRngStartln="66" srcRngEndLn="66" desc="String password = request.getParameter(&quot;password&quot;);" ElType="." rngLn="66" />
        <ElDesc lineHash="1722882907" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="70" srcRngStartPos="13" srcRngEndPos="42" srcRngStartln="70" srcRngEndLn="70" desc="authorize(username, password)" ElType="!" rngLn="70">
          <ElDescList>
            <ElDesc lineHash="-271783734" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="83" srcRngStartPos="8" srcRngEndPos="30" srcRngStartln="83" srcRngEndLn="83" desc="Statement stmt = null;" ElType="." rngLn="83">
              <Props>
                <Prop key="Tracked variables" val="username" />
              </Props>
              <Anns>
                <Ann msg="Tainted data: username" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="920994605" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="84" srcRngStartPos="8" srcRngEndPos="28" srcRngStartln="84" srcRngEndLn="84" desc="ResultSet rs = null;" ElType="." rngLn="84" />
            <ElDesc lineHash="-168135453" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="89" srcRngStartPos="12" srcRngEndPos="115" srcRngStartln="89" srcRngEndLn="89" desc="String query = &quot;SELECT * FROM users WHERE username='&quot; + username + &quot;' AND password='&quot; + password + &quot;'&quot;;" ElType="!" rngLn="89" />
            <ElDesc lineHash="-1686616749" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="90" srcRngStartPos="12" srcRngEndPos="48" srcRngStartln="90" srcRngEndLn="90" desc="stmt = _connection.createStatement()" ElType="." rngLn="90">
              <Props>
                <Prop key="Tracked variables" val="query" />
              </Props>
              <Anns>
                <Ann msg="Tainted data: query" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="849041673" locType="sr" srcRnghash="-1145404863" locRef="55" srcRngFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" ln="91" srcRngStartPos="12" srcRngEndPos="41" srcRngStartln="91" srcRngEndLn="91" desc="rs = stmt.executeQuery(query)" ElType=".P" rngLn="91">
              <Props>
                <Prop key="Tracked variables" val="query" />
              </Props>
              <Anns>
                <Ann msg="Tainted data: query" kind="var" />
                <Ann msg="Call to a dangerous method" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="&quot;catch&quot; statement directly catches the general exception type 'Throwable'" ln="98" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" auth="mgorecka" rule="CODSTA.EPC.NCE" lnHash="-975238224" pkg="examples.security" rule.header="Do not catch exception types which are too general or are unchecked exceptions" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6351341e-5f15-30fc-b788-c8f1231b82f6" locEndPos="26" prio="Not Defined" locEndLn="98" goals="0," locStartln="98" sev="3" locRef="55" tool="jtest" lineHash="-975238224" unbViolId="ac3b783d-7034-3225-b313-67f0b0a52599" risk="Undefined" locType="sr" hash="-1145404863" />
    <StdViol msg="Method 'validate' is missing '@param username_or_password' in Javadoc comment" ln="111" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" auth="mgorecka" rule="JAVADOC.PARAM" lnHash="1958805084" pkg="examples.security" rule.header="Use the '@param' Javadoc tag for each parameter of methods" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6924bcc6-3b4b-33f2-be33-7557eb2b072e" locEndPos="26" prio="Not Defined" locEndLn="111" goals="0," locStartln="111" sev="3" locRef="55" tool="jtest" lineHash="1958805084" unbViolId="e5d844de-4bcc-3104-b0b0-d8855c5b8ee2" risk="Undefined" locType="sr" hash="-1145404863" />
    <StdViol msg="Parameter 'username_or_password' dereferenced before being checked for null" ln="112" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" auth="mgorecka" rule="DBC.IPAN" lnHash="-707170846" pkg="examples.security" rule.header="Include a '@pre != null' tag for each parameter that is dereferenced before being checked for null" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b5877c16-4577-3d56-ad72-e6de988b290f" locEndPos="32" prio="Not Defined" locEndLn="112" goals="0," locStartln="112" sev="3" locRef="55" tool="jtest" lineHash="-707170846" unbViolId="46fb7fa1-afdb-374c-9bce-194c1b54666e" risk="Undefined" locType="sr" hash="-1145404863" />
    <StdViol msg="Consider using 'prepareCall()' or 'prepareStatement()' to prevent SQL injection vulnerabilities" ln="120" locFile="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" auth="mgorecka" rule="SECURITY.IBA.UPS" lnHash="-2050969790" pkg="examples.security" rule.header="Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'" locStartPos="41" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="9c08ee7d-ad82-313d-a838-3dc41f3df472" locEndPos="56" prio="Not Defined" locEndLn="120" goals="0," locStartln="120" sev="1" locRef="55" tool="jtest" lineHash="-2050969790" unbViolId="4e40f8c4-30d8-3d4c-975e-8031642485e4" risk="Undefined" locType="sr" hash="-1145404863" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="-397706933" pkg="examples.servlets" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9dd6ee71-7134-3b5d-b137-98265d19f355" locEndPos="2" prio="Not Defined" locEndLn="15" goals="0," locStartln="15" sev="3" locRef="56" tool="jtest" lineHash="-397706933" unbViolId="c2a523d8-5290-3988-92f6-feb181f983ab" risk="Undefined" locType="sr" hash="-1999350871" />
    <StdViol msg="Missing Javadoc comment for 'ExampleServlet'" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" auth="mgorecka" rule="JAVADOC.PJDC" lnHash="-397706933" pkg="examples.servlets" rule.header="Provide Javadoc comments and descriptions for types" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d312c9ec-6cea-3263-97dd-463a25200de1" locEndPos="27" prio="Not Defined" locEndLn="15" goals="0," locStartln="15" sev="3" locRef="56" tool="jtest" lineHash="-397706933" unbViolId="1679950e-9acd-34ce-b9bc-7c999f8191c6" risk="Undefined" locType="sr" hash="-1999350871" />
    <StdViol msg="No serialVersionUID declared in class 'ExampleServlet'" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" auth="mgorecka" rule="SERIAL.DUID" lnHash="-397706933" pkg="examples.servlets" rule.header="Create a 'serialVersionUID' for all 'Serializable' classes" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b3bc74df-ce32-3017-b5bd-3bff22bdcd32" locEndPos="27" prio="Not Defined" locEndLn="15" goals="0," locStartln="15" sev="3" locRef="56" tool="jtest" lineHash="-397706933" unbViolId="7983f1d9-a89f-3199-bbb3-e3f0c8b3c7ce" risk="Undefined" locType="sr" hash="-1999350871" />
    <StdViol msg="Missing Javadoc comment for method 'doGet()'" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="230363476" pkg="examples.servlets" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="fc551485-36e0-36dc-abd6-8f4e97fc79bf" locEndPos="21" prio="Not Defined" locEndLn="18" goals="0," locStartln="18" sev="3" locRef="56" tool="jtest" lineHash="230363476" unbViolId="df389e42-138c-3426-9de6-a2b336eb6553" risk="Undefined" locType="sr" hash="-1999350871" />
    <StdViol msg="&quot;if&quot; statement without a &quot;{ }&quot; block" ln="20" locFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="-117295469" pkg="examples.servlets" rule.header="Provide a '{}' block for conditional statements" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f80e80f7-b444-3909-8036-4dc33584ff75" locEndPos="10" prio="Not Defined" locEndLn="20" goals="0," locStartln="20" sev="3" locRef="56" tool="jtest" lineHash="-117295469" unbViolId="5d16b124-a470-3fd3-b6c6-a50079b2a439" risk="Undefined" locType="sr" hash="-1999350871" />
    <StdViol msg="Consider using a &quot;Context&quot; Object instead of calling 'getParameter()'" ln="20" locFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" auth="mgorecka" rule="SERVLET.UCO" lnHash="-117295469" pkg="examples.servlets" rule.header="Use a Context Object to manage HTTP request parameters" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="bf4e8229-2beb-3958-baa1-5cf029c49588" locEndPos="32" prio="Not Defined" locEndLn="20" goals="0," locStartln="20" sev="2" locRef="56" tool="jtest" lineHash="-117295469" unbViolId="0a8f412d-ed52-3a81-b802-5327f08ceab1" risk="Undefined" locType="sr" hash="-1999350871" />
    <StdViol msg="request.getParameter(&quot;name&quot;).equals (&quot;John&quot;) is called, use &quot;John&quot;.equals (request.getParameter(&quot;name&quot;)) instead" ln="20" locFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" auth="mgorecka" rule="PB.RE.ISEM" lnHash="-117295469" pkg="examples.servlets" rule.header="Do not call 'String.equals(constant)' or 'String.equalsIgnoreCase(constant)'" locStartPos="48" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2288c8bc-e8a5-3a56-b412-e3a13b54f7ac" locEndPos="54" prio="Not Defined" locEndLn="20" goals="0," locStartln="20" sev="3" locRef="56" tool="jtest" lineHash="-117295469" unbViolId="1e7d4e0b-091f-313e-9099-35877fed0ee5" risk="Undefined" locType="sr" hash="-1999350871" />
    <StdViol msg="&quot;else&quot; statement without a &quot;{ }&quot; block" ln="22" locFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="1979817273" pkg="examples.servlets" rule.header="Provide a '{}' block for conditional statements" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="27bf814a-69dc-369c-85a1-50107222e3e9" locEndPos="12" prio="Not Defined" locEndLn="22" goals="0," locStartln="22" sev="3" locRef="56" tool="jtest" lineHash="1979817273" unbViolId="e2da5d91-8f7c-3a5b-bbcd-73358dce652f" risk="Undefined" locType="sr" hash="-1999350871" />
    <StdViol msg="Missing Javadoc comment for method 'tryThis()'" ln="26" locFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" auth="mgorecka" rule="JAVADOC.PJDM" lnHash="203116546" pkg="examples.servlets" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f7b63847-a831-3d48-b7e2-18995524186f" locEndPos="23" prio="Not Defined" locEndLn="26" goals="0," locStartln="26" sev="3" locRef="56" tool="jtest" lineHash="203116546" unbViolId="0a669be6-3a8a-30b8-aa95-b5079cd3d8e4" risk="Undefined" locType="sr" hash="-1999350871" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="29" locFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="1005479687" pkg="examples.servlets" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="58631963-ec0d-37bc-83e4-3352807b6c06" locEndPos="34" prio="Not Defined" locEndLn="29" goals="0," locStartln="29" sev="3" locRef="56" tool="jtest" lineHash="1005479687" unbViolId="7cdd0816-47c6-3dd4-af06-5d4d25171f80" risk="Undefined" locType="sr" hash="-1999350871" />
    <StdViol msg="Variable 'pr' is never used" ln="32" locFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" auth="mgorecka" rule="UC.AURV" lnHash="1530337033" pkg="examples.servlets" rule.header="Avoid local variables that are never read" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7a0e1659-40f0-3291-9397-0f1041a2ba76" locEndPos="21" prio="Not Defined" locEndLn="32" goals="0," locStartln="32" sev="3" locRef="56" tool="jtest" lineHash="1530337033" unbViolId="49cfc1cf-e36b-3a9d-8d79-73a0f7f90e31" risk="Undefined" locType="sr" hash="-1999350871" />
    <FlowViol msg="Condition &quot;n > 0&quot; always evaluates to true" ln="33" locFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" ruleSAFMsg="Point where senseless condition is used" FirstElSrcRngEndPos="43" auth="mgorecka" FirstElSrcRngEndLn="26" rule="BD.PB.CC" FirstElSrcRngStartPos="16" lnHash="692340273" ruleSCSCMsg="Start of the path" pkg="examples.servlets" FirstElSrcRngFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" rule.header="Avoid conditions that always evaluate to the same value" FirstElSrcRngStartln="26" locStartPos="15" analyzer="com.parasoft.jtest.flowanalyzer" id="-2033553978" lang="java" violId="85f36328-2d71-33ad-8a61-eff000ebbf62" locEndPos="27" urgent="true" prio="Not Defined" locEndLn="33" goals="1," locStartln="33" sev="2" locRef="56" tool="jtest" lineHash="692340273" unbViolId="fc612e57-fb52-3f7c-a5f5-7089a97e2605" risk="Undefined" locType="sr" hash="-1999350871" causeLocRef="56">
      <Props />
      <ElDescList>
        <ElDesc lineHash="203116546" locType="sr" srcRnghash="-1999350871" locRef="56" srcRngFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" ln="26" srcRngStartPos="16" srcRngEndPos="43" srcRngStartln="26" srcRngEndLn="26" desc="tryThis(ServletContext sc)" ElType=".C" rngLn="26">
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="971443945" locType="sr" srcRnghash="-1999350871" locRef="56" srcRngFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" ln="27" srcRngStartPos="8" srcRngEndPos="31" srcRngStartln="27" srcRngEndLn="27" desc="String hello = &quot;hello&quot;;" ElType="." rngLn="27" />
        <ElDesc lineHash="997799750" locType="sr" srcRnghash="-1999350871" locRef="56" srcRngFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" ln="28" srcRngStartPos="8" srcRngEndPos="53" srcRngStartln="28" srcRngEndLn="28" desc="String result = sc.getInitParameter(&quot;hello&quot;);" ElType="." rngLn="28" />
        <ElDesc lineHash="1005479687" locType="sr" srcRnghash="-1999350871" locRef="56" srcRngFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" ln="29" srcRngStartPos="8" srcRngEndPos="35" srcRngStartln="29" srcRngEndLn="29" desc="System.out.println(result);" ElType="." rngLn="29" />
        <ElDesc lineHash="-881802199" locType="sr" srcRnghash="-1999350871" locRef="56" srcRngFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" ln="30" srcRngStartPos="8" srcRngEndPos="32" srcRngStartln="30" srcRngEndLn="30" desc="int n = result.length();" ElType="!" rngLn="30" />
        <ElDesc lineHash="-261099875" locType="sr" srcRnghash="-1999350871" locRef="56" srcRngFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" ln="31" srcRngStartPos="8" srcRngEndPos="21" srcRngStartln="31" srcRngEndLn="31" desc="if (n == 0) {" ElType="." rngLn="31">
          <Anns>
            <Ann msg="Condition evaluation: (n == 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="692340273" locType="sr" srcRnghash="-1999350871" locRef="56" srcRngFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" ln="33" srcRngStartPos="15" srcRngEndPos="27" srcRngStartln="33" srcRngEndLn="33" desc="if (n > 0) {" ElType=".P" rngLn="33">
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Variable 'pr' is never used" ln="34" locFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" auth="mgorecka" rule="UC.AURV" lnHash="1012570095" pkg="examples.servlets" rule.header="Avoid local variables that are never read" locStartPos="19" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c54e58d2-cad5-3504-9ed8-7a42276677f1" locEndPos="21" prio="Not Defined" locEndLn="34" goals="0," locStartln="34" sev="3" locRef="56" tool="jtest" lineHash="1012570095" unbViolId="2f5add23-4b4e-301b-8f8b-ba639446c098" risk="Undefined" locType="sr" hash="-1999350871" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="39" locFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="427568246" pkg="examples.servlets" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5baab8ee-299a-32cb-9267-8bb8fd7fbdbe" locEndPos="44" prio="Not Defined" locEndLn="39" goals="0," locStartln="39" sev="3" locRef="56" tool="jtest" lineHash="427568246" unbViolId="aa2936c1-3c05-3d19-b4e4-ad1f8a59d5f8" risk="Undefined" locType="sr" hash="-1999350871" />
    <StdViol msg="Unnecessary call to &quot;toString()&quot;" ln="39" locFile="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" auth="mgorecka" rule="CODSTA.READ.AUTS" lnHash="427568246" pkg="examples.servlets" rule.header="Avoid unnecessary calls to 'toString()'" locStartPos="33" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6d264537-d3d5-3639-9125-aaf90f9ffdd9" locEndPos="41" prio="Not Defined" locEndLn="39" goals="0," locStartln="39" sev="3" locRef="56" tool="jtest" lineHash="427568246" unbViolId="701a23b5-8c06-313a-a0f3-f1cdd6d39f3a" risk="Undefined" locType="sr" hash="-1999350871" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="8" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/AbstractStackMachine.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.stackmachine" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1de8f244-6e8d-31d5-a8af-005c5930c2ac" locEndPos="2" prio="Not Defined" locEndLn="8" goals="0," locStartln="8" sev="3" locRef="57" tool="jtest" lineHash="46511" unbViolId="d9c6e3c9-85b9-3628-91a0-8c0d8e8c044d" risk="Undefined" locType="sr" hash="1553680728" />
    <StdViol msg="No serialVersionUID declared in class 'AbstractStackMachine'" ln="11" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/AbstractStackMachine.java" auth="mgorecka" rule="SERIAL.DUID" lnHash="595651901" pkg="examples.stackmachine" rule.header="Create a 'serialVersionUID' for all 'Serializable' classes" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="951b40ec-1bfc-3e28-8515-f8a612a32b44" locEndPos="42" prio="Not Defined" locEndLn="11" goals="0," locStartln="11" sev="3" locRef="57" tool="jtest" lineHash="595651901" unbViolId="ac79a846-3388-3971-b086-ba29578f1069" risk="Undefined" locType="sr" hash="1553680728" />
    <StdViol msg="The abstract class 'AbstractStackMachine' should not extend the concrete type 'DefaultListModel'" ln="11" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/AbstractStackMachine.java" auth="mgorecka" rule="OOP.ACECC" lnHash="595651901" pkg="examples.stackmachine" rule.header="Do not extend concrete classes in &quot;abstract&quot; classes" locStartPos="22" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="f947115a-ea45-3920-bf5e-b258697dd588" locEndPos="42" prio="Not Defined" locEndLn="11" goals="0," locStartln="11" sev="3" locRef="57" tool="jtest" lineHash="595651901" unbViolId="30dba282-2d37-3aeb-acaa-c6bb7f9470d1" risk="Undefined" locType="sr" hash="1553680728" />
    <StdViol msg="Method 'popInt' missing '@return' Javadoc tag" ln="114" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/AbstractStackMachine.java" auth="mgorecka" rule="JAVADOC.MRDC" lnHash="-1879718657" pkg="examples.stackmachine" rule.header="Use the '@return' Javadoc tag in method Javadoc comments" locStartPos="27" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e4b04bac-f053-325d-a7d0-0558faeabed2" locEndPos="33" prio="Not Defined" locEndLn="114" goals="0," locStartln="114" sev="3" locRef="57" tool="jtest" lineHash="-1879718657" unbViolId="fffce55e-1735-347f-9748-92b4a6d73204" risk="Undefined" locType="sr" hash="1553680728" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="10" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.stackmachine" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ba94d253-00cc-31e3-b1f4-9fe9bb804255" locEndPos="2" prio="Not Defined" locEndLn="10" goals="0," locStartln="10" sev="3" locRef="58" tool="jtest" lineHash="46511" unbViolId="61e05ac7-8f08-39e7-be4a-dddbe768c2cd" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="1300419954" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="dfa829f8-a3ae-35b9-81bd-aba45380363b" locEndPos="56" prio="Not Defined" locEndLn="18" goals="0," locStartln="18" sev="3" locRef="58" tool="jtest" lineHash="1300419954" unbViolId="b15f679c-ac57-37eb-9323-074f570b48f8" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="19" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="883210702" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6cbc67fa-2b91-3c98-bd17-8dd9b30479a5" locEndPos="37" prio="Not Defined" locEndLn="19" goals="0," locStartln="19" sev="3" locRef="58" tool="jtest" lineHash="883210702" unbViolId="803b6fb7-b25f-3e7e-99aa-8c46a2ccfbf0" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="20" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="1594507265" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4af4fd09-f3a9-337e-b6ae-856bcd1d37d4" locEndPos="42" prio="Not Defined" locEndLn="20" goals="0," locStartln="20" sev="3" locRef="58" tool="jtest" lineHash="1594507265" unbViolId="acbb225d-9b0b-3c5a-aaa0-ca887e25727f" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="21" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="965634877" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5a478459-c7d6-3b72-bb37-2d9e4d1e8dba" locEndPos="42" prio="Not Defined" locEndLn="21" goals="0," locStartln="21" sev="3" locRef="58" tool="jtest" lineHash="965634877" unbViolId="979cbecd-832c-3551-a736-68cb000a1dca" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="22" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="1178584314" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e5ba2386-fa24-37e7-bd67-a1eac0bbe4ca" locEndPos="40" prio="Not Defined" locEndLn="22" goals="0," locStartln="22" sev="3" locRef="58" tool="jtest" lineHash="1178584314" unbViolId="e64c5433-3cfa-38ba-bd17-3d05794a0591" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="23" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="1321380252" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="23500f4e-7232-39eb-bcc8-ee295ade65f2" locEndPos="37" prio="Not Defined" locEndLn="23" goals="0," locStartln="23" sev="3" locRef="58" tool="jtest" lineHash="1321380252" unbViolId="e3e09e17-974c-38df-b674-ea502e970af7" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="24" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="570670995" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="722fc1ec-bc75-33cf-bb98-030b3d5c4efd" locEndPos="38" prio="Not Defined" locEndLn="24" goals="0," locStartln="24" sev="3" locRef="58" tool="jtest" lineHash="570670995" unbViolId="01789bfe-e110-381d-9242-50175643c034" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="25" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="1084251376" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2d44c52c-b1f4-3f07-8aa8-b696e2ab18e2" locEndPos="48" prio="Not Defined" locEndLn="25" goals="0," locStartln="25" sev="3" locRef="58" tool="jtest" lineHash="1084251376" unbViolId="3a270544-78f9-3235-9f5c-48e331197fce" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.print' is not a leftover debug statement" ln="43" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="585159166" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="58963349-04a8-303e-87ab-38ce934fec56" locEndPos="31" prio="Not Defined" locEndLn="43" goals="0," locStartln="43" sev="3" locRef="58" tool="jtest" lineHash="585159166" unbViolId="eae9f9e2-d177-31df-bc5c-6dd8b82996d6" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Variable 'buf' may not have a close resource" ln="44" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="mgorecka" rule="PB.CLOSE" lnHash="-1516514038" pkg="examples.stackmachine" rule.header="Unrestricted lock resource" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="185f524d-ea21-364b-b66a-fcd20a8e05ef" locEndPos="82" prio="Not Defined" locEndLn="44" goals="0," locStartln="44" sev="1" locRef="58" tool="jtest" lineHash="-1516514038" unbViolId="fb4c4c97-2eb8-364b-a30e-bc690f3ce4ad" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="You may not want to use this constructor for 'InputStreamReader' because it does not allow you to specify an encoding option" ln="44" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="mgorecka" rule="INTER.SEO" lnHash="-1516514038" pkg="examples.stackmachine" rule.header="Avoid calling methods and constructors which do not allow you to specify a character encoding option" locStartPos="52" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="056ea3fb-783e-3075-a3bd-dcf8c285398e" locEndPos="69" prio="Not Defined" locEndLn="44" goals="0," locStartln="44" sev="3" locRef="58" tool="jtest" lineHash="-1516514038" unbViolId="5705212f-63fb-355f-b64d-fc690b78d12c" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Variable 'value' is never used" ln="79" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="mgorecka" rule="UC.AURV" lnHash="100329092" pkg="examples.stackmachine" rule.header="Avoid local variables that are never read" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="44891f2c-4f17-3df0-a52a-6b888debdfcd" locEndPos="25" prio="Not Defined" locEndLn="79" goals="0," locStartln="79" sev="3" locRef="58" tool="jtest" lineHash="100329092" unbViolId="666c75e7-96ae-39b2-ad6d-92182c37beb7" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="82" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="-67372973" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f804bb7e-3141-303a-aea2-8eed7831125c" locEndPos="72" prio="Not Defined" locEndLn="82" goals="0," locStartln="82" sev="3" locRef="58" tool="jtest" lineHash="-67372973" unbViolId="9075a5ce-d7f8-33fa-a4e2-1fb7a4c5b27d" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="'main()' method is present, possible leftover debugging code" ln="94" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="mgorecka" rule="SECURITY.WSC.UMAIN" lnHash="-1228458120" pkg="examples.stackmachine" rule.header="Avoid 'main()' methods because they may allow unauthorized access to classes" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="6b8ccbcc-ea80-31de-8fa0-d5a119d2a7fc" locEndPos="27" prio="Not Defined" locEndLn="94" goals="0," locStartln="94" sev="2" locRef="58" tool="jtest" lineHash="-1228458120" unbViolId="6b9b1fb2-29db-30cf-9328-07b6e1e85684" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.err.println' is not a leftover debug statement" ln="113" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="1278069743" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7aafa763-3cab-3c3b-af7f-06de228818d1" locEndPos="59" prio="Not Defined" locEndLn="113" goals="0," locStartln="113" sev="3" locRef="58" tool="jtest" lineHash="1278069743" unbViolId="4450d2fb-1701-3717-937b-c82618d9cc25" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.err.println' is not a leftover debug statement" ln="119" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="-1987515317" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="daaa9cfb-8084-3cc6-a412-43068db0a3cd" locEndPos="70" prio="Not Defined" locEndLn="119" goals="0," locStartln="119" sev="3" locRef="58" tool="jtest" lineHash="-1987515317" unbViolId="19578633-4356-35f2-8973-bbc58483607f" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="124" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="-2144858711" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b7c02fba-551e-3981-ade9-4d538030ccf6" locEndPos="78" prio="Not Defined" locEndLn="124" goals="0," locStartln="124" sev="3" locRef="58" tool="jtest" lineHash="-2144858711" unbViolId="fc79ac31-e1a6-309a-8bc3-e83aece39cc0" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="128" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="869819890" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8f1e9f48-fea6-36ef-98b7-e481c721170d" locEndPos="63" prio="Not Defined" locEndLn="128" goals="0," locStartln="128" sev="3" locRef="58" tool="jtest" lineHash="869819890" unbViolId="7c34f77d-adb5-3b7b-8f34-2aa83f4465cb" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="130" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="-208574787" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="12" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="154102fd-b17f-3a81-861a-a40bf7466fbe" locEndPos="42" prio="Not Defined" locEndLn="130" goals="0," locStartln="130" sev="3" locRef="58" tool="jtest" lineHash="-208574787" unbViolId="cf02591f-1697-364a-aa53-5e3e47c1a59b" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="132" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="1645795027" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f6f82889-5acf-3c7a-bfab-0f36e1bab87b" locEndPos="58" prio="Not Defined" locEndLn="132" goals="0," locStartln="132" sev="3" locRef="58" tool="jtest" lineHash="1645795027" unbViolId="2e292ca5-d110-33fe-bad7-9ba966cc5824" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="137" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="-1068539286" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="dd97df82-d6d0-397d-804a-cfaa430c319c" locEndPos="30" prio="Not Defined" locEndLn="137" goals="0," locStartln="137" sev="3" locRef="58" tool="jtest" lineHash="-1068539286" unbViolId="7c3cf0ef-ead4-3819-8f67-3b81c90e7142" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="138" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="1300419954" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1349e903-32a6-3536-9191-d36851fa7d8c" locEndPos="56" prio="Not Defined" locEndLn="138" goals="0," locStartln="138" sev="3" locRef="58" tool="jtest" lineHash="1300419954" unbViolId="d675016a-3c53-3363-bbb8-fbca88eb0a11" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="139" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="-1068539286" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="954cd2f2-eff6-33f5-93cf-3dcb97efef09" locEndPos="30" prio="Not Defined" locEndLn="139" goals="0," locStartln="139" sev="3" locRef="58" tool="jtest" lineHash="-1068539286" unbViolId="1efe2261-3ff4-362f-ac34-90a88df7e035" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="140" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="509958792" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="23f76729-5abc-3c69-a97b-062123fff59d" locEndPos="69" prio="Not Defined" locEndLn="140" goals="0," locStartln="140" sev="3" locRef="58" tool="jtest" lineHash="509958792" unbViolId="1f6c3a21-8921-35c9-9c6a-10b017a4b5d4" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="141" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="-1068539286" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5248ae0f-4371-3315-a978-dfabd1ab457b" locEndPos="30" prio="Not Defined" locEndLn="141" goals="0," locStartln="141" sev="3" locRef="58" tool="jtest" lineHash="-1068539286" unbViolId="01e6afe7-7dff-33a7-ad32-3016dfe79567" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="142" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="-1434727757" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="bcfb6636-d244-3087-b0f6-ca64077b1dbf" locEndPos="85" prio="Not Defined" locEndLn="142" goals="0," locStartln="142" sev="3" locRef="58" tool="jtest" lineHash="-1434727757" unbViolId="5282719e-c2d1-34c3-8093-b6ea7bb89eef" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="143" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="-872152814" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8ede9465-2614-3bc4-ac78-71770f67995c" locEndPos="134" prio="Not Defined" locEndLn="143" goals="0," locStartln="143" sev="3" locRef="58" tool="jtest" lineHash="-872152814" unbViolId="71d6d04f-b456-303c-b621-a80de7e16708" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Make sure 'System.out.println' is not a leftover debug statement" ln="144" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" auth="mgorecka" rule="SECURITY.ESD.SIO" lnHash="1078431004" pkg="examples.stackmachine" rule.header="Avoid calling print methods of 'System.err' or 'System.out'" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d6322251-73b8-340c-a27b-2612b4d80f49" locEndPos="113" prio="Not Defined" locEndLn="144" goals="0," locStartln="144" sev="3" locRef="58" tool="jtest" lineHash="1078431004" unbViolId="01be3b8e-fa84-39fa-a27e-ea14908dc48a" risk="Undefined" locType="sr" hash="-1581767335" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="12" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CustomListRenderer.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.stackmachine" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4b2c761d-0fae-3de5-b627-b777dc1ffca4" locEndPos="2" prio="Not Defined" locEndLn="12" goals="0," locStartln="12" sev="3" locRef="59" tool="jtest" lineHash="46511" unbViolId="c099dae7-016b-3800-aa9d-837d9c8ac22b" risk="Undefined" locType="sr" hash="1782082961" />
    <StdViol msg="No serialVersionUID declared in class 'CustomListRenderer'" ln="15" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CustomListRenderer.java" auth="mgorecka" rule="SERIAL.DUID" lnHash="-218264151" pkg="examples.stackmachine" rule.header="Create a 'serialVersionUID' for all 'Serializable' classes" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a506932c-03ee-32cd-867d-4b3a54e77c0a" locEndPos="31" prio="Not Defined" locEndLn="15" goals="0," locStartln="15" sev="3" locRef="59" tool="jtest" lineHash="-218264151" unbViolId="dfc75eb2-cfd5-30bc-9a04-996f4576121b" risk="Undefined" locType="sr" hash="1782082961" />
    <StdViol msg="Parameter 'g' dereferenced before being checked for null" ln="27" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/CustomListRenderer.java" auth="mgorecka" rule="DBC.IPAN" lnHash="1862204224" pkg="examples.stackmachine" rule.header="Include a '@pre != null' tag for each parameter that is dereferenced before being checked for null" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="46788e32-2aa4-3508-9b28-2971cdf12832" locEndPos="9" prio="Not Defined" locEndLn="27" goals="0," locStartln="27" sev="3" locRef="59" tool="jtest" lineHash="1862204224" unbViolId="edacbf6f-89be-3f6b-968a-06c07bc5547f" risk="Undefined" locType="sr" hash="1782082961" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="6" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/FifoStackMachine.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="1918198624" pkg="examples.stackmachine" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7b28e36b-cc6e-3771-b909-5300c9acac3a" locEndPos="2" prio="Not Defined" locEndLn="6" goals="0," locStartln="6" sev="3" locRef="60" tool="jtest" lineHash="1918198624" unbViolId="cc220535-ab76-39d2-afd9-9e423d886db6" risk="Undefined" locType="sr" hash="-726989549" />
    <StdViol msg="No serialVersionUID declared in class 'FifoStackMachine'" ln="7" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/FifoStackMachine.java" auth="mgorecka" rule="SERIAL.DUID" lnHash="1947627385" pkg="examples.stackmachine" rule.header="Create a 'serialVersionUID' for all 'Serializable' classes" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9133d1f9-4785-313b-9c28-9ff532dc34bd" locEndPos="29" prio="Not Defined" locEndLn="7" goals="0," locStartln="7" sev="3" locRef="60" tool="jtest" lineHash="1947627385" unbViolId="d814c46e-124f-387f-9155-3920c6a5d2d5" risk="Undefined" locType="sr" hash="-726989549" />
    <StdViol msg="The overriding method 'push()' does not have an &quot;@Override&quot; annotation" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/FifoStackMachine.java" auth="mgorecka" rule="OOP.AOA" lnHash="2035010633" pkg="examples.stackmachine" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c4509b94-23a2-306b-a0fe-ceb1f56ba57a" locEndPos="20" prio="Not Defined" locEndLn="13" goals="0," locStartln="13" sev="3" locRef="60" tool="jtest" lineHash="2035010633" unbViolId="bd35079c-e9a2-3686-b73c-d4e9f828d58d" risk="Undefined" locType="sr" hash="-726989549" />
    <StdViol msg="The overriding method 'pop()' does not have an &quot;@Override&quot; annotation" ln="20" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/FifoStackMachine.java" auth="mgorecka" rule="OOP.AOA" lnHash="-1700982600" pkg="examples.stackmachine" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ea269901-2dce-36ed-8b92-4c3d8c929e7e" locEndPos="19" prio="Not Defined" locEndLn="20" goals="0," locStartln="20" sev="3" locRef="60" tool="jtest" lineHash="-1700982600" unbViolId="aea8e0fd-5833-310d-9593-290227e28fb6" risk="Undefined" locType="sr" hash="-726989549" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="6" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/LifoStackMachine.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="1701038950" pkg="examples.stackmachine" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="0bc77c08-7280-32ba-9323-fd98b97c3f59" locEndPos="2" prio="Not Defined" locEndLn="6" goals="0," locStartln="6" sev="3" locRef="61" tool="jtest" lineHash="1701038950" unbViolId="e0428940-f4a1-369c-a5a3-fe57d1d1d2f1" risk="Undefined" locType="sr" hash="-1559173645" />
    <StdViol msg="No serialVersionUID declared in class 'LifoStackMachine'" ln="7" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/LifoStackMachine.java" auth="mgorecka" rule="SERIAL.DUID" lnHash="888362239" pkg="examples.stackmachine" rule.header="Create a 'serialVersionUID' for all 'Serializable' classes" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c8f4f029-78c2-3e2c-89ba-784aa9099dd5" locEndPos="29" prio="Not Defined" locEndLn="7" goals="0," locStartln="7" sev="3" locRef="61" tool="jtest" lineHash="888362239" unbViolId="1fa663ee-dc06-3d93-a26f-a9a3cb95b82e" risk="Undefined" locType="sr" hash="-1559173645" />
    <StdViol msg="The overriding method 'push()' does not have an &quot;@Override&quot; annotation" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/LifoStackMachine.java" auth="mgorecka" rule="OOP.AOA" lnHash="2035010633" pkg="examples.stackmachine" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="dc2b090e-c4be-3e9b-845f-6b8f8b744993" locEndPos="20" prio="Not Defined" locEndLn="13" goals="0," locStartln="13" sev="3" locRef="61" tool="jtest" lineHash="2035010633" unbViolId="12e474ed-2883-37f6-bf11-d4a729f0ef3d" risk="Undefined" locType="sr" hash="-1559173645" />
    <StdViol msg="The overriding method 'pop()' does not have an &quot;@Override&quot; annotation" ln="20" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/LifoStackMachine.java" auth="mgorecka" rule="OOP.AOA" lnHash="-1700982600" pkg="examples.stackmachine" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="27748ddf-30f6-316b-a9eb-e28babff6c3a" locEndPos="19" prio="Not Defined" locEndLn="20" goals="0," locStartln="20" sev="3" locRef="61" tool="jtest" lineHash="-1700982600" unbViolId="72d3bde4-1699-3ef0-a24b-ab9e5ee27b77" risk="Undefined" locType="sr" hash="-1559173645" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="30" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="FORMAT.BLCD" lnHash="46511" pkg="examples.stackmachine" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e3be378e-b425-37fb-aec1-1a8aeebb707d" locEndPos="2" urgent="true" prio="Not Defined" locEndLn="30" goals="1," locStartln="30" sev="3" locRef="62" tool="jtest" lineHash="46511" unbViolId="9f888a40-5e1c-3801-8314-0fde5593d22a" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="No serialVersionUID declared in class 'RunnableStackMachine'" ln="33" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="SERIAL.DUID" lnHash="2017809093" pkg="examples.stackmachine" rule.header="Create a 'serialVersionUID' for all 'Serializable' classes" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7847fc7a-c5dd-3b5c-bf3e-4095c4b7f3d0" locEndPos="33" prio="Not Defined" locEndLn="33" goals="0," locStartln="33" sev="3" locRef="62" tool="jtest" lineHash="2017809093" unbViolId="6e033ace-6b62-3135-a521-a8f07aec1455" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Missing Javadoc comment for method 'windowActivated()'" ln="66" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="JAVADOC.PJDM" lnHash="1407605969" pkg="examples.stackmachine" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6db290b2-cf8d-3ee1-8b19-6352e83a8f38" locEndPos="31" urgent="true" prio="Not Defined" locEndLn="66" goals="1," locStartln="66" sev="3" locRef="62" tool="jtest" lineHash="1407605969" unbViolId="6738f58d-06ba-340b-b64c-2f8b6b7c72ba" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="The overriding method 'windowActivated()' does not have an &quot;@Override&quot; annotation" ln="66" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="OOP.AOA" lnHash="1407605969" pkg="examples.stackmachine" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e0c3dc30-04db-32a3-958e-e06e250f5d1d" locEndPos="31" urgent="true" prio="Not Defined" locEndLn="66" goals="1," locStartln="66" sev="3" locRef="62" tool="jtest" lineHash="1407605969" unbViolId="c4bb3a22-5161-3237-b21e-117b7c2eca11" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Missing Javadoc comment for method 'windowClosed()'" ln="69" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="JAVADOC.PJDM" lnHash="1310797676" pkg="examples.stackmachine" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a24d2d84-c2be-3a01-84ee-0ceceb6bd741" locEndPos="28" urgent="true" prio="Not Defined" locEndLn="69" goals="1," locStartln="69" sev="3" locRef="62" tool="jtest" lineHash="1310797676" unbViolId="c510a9f3-5b38-3d81-af09-fde17c64f5f1" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="The overriding method 'windowClosed()' does not have an &quot;@Override&quot; annotation" ln="69" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="OOP.AOA" lnHash="1310797676" pkg="examples.stackmachine" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="38410ec5-5c82-3af2-8e37-33ff8b2c7d8b" locEndPos="28" urgent="true" prio="Not Defined" locEndLn="69" goals="1," locStartln="69" sev="3" locRef="62" tool="jtest" lineHash="1310797676" unbViolId="4ae6ff51-2588-373b-93d1-ab239e5cd4a8" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Missing Javadoc comment for method 'windowClosing()'" ln="72" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="JAVADOC.PJDM" lnHash="945378221" pkg="examples.stackmachine" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3d215066-6f3a-3a19-9cd4-0983795f67f5" locEndPos="29" urgent="true" prio="Not Defined" locEndLn="72" goals="1," locStartln="72" sev="3" locRef="62" tool="jtest" lineHash="945378221" unbViolId="44af97eb-4240-3ebb-ae44-7be9abb98b4a" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="The overriding method 'windowClosing()' does not have an &quot;@Override&quot; annotation" ln="72" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="OOP.AOA" lnHash="945378221" pkg="examples.stackmachine" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="184a3b4a-c7c4-3a5e-baba-f2cd31d58f69" locEndPos="29" urgent="true" prio="Not Defined" locEndLn="72" goals="1," locStartln="72" sev="3" locRef="62" tool="jtest" lineHash="945378221" unbViolId="fb685182-9a69-3a47-a542-fc726f8ce268" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="'System.exit()' called" ln="73" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="CODSTA.BP.EXIT" lnHash="-1715007721" pkg="examples.stackmachine" rule.header="Do not call methods which terminates Java Virtual Machine" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="820abe83-81cc-38c1-b3da-e799733f0349" locEndPos="22" urgent="true" prio="Not Defined" locEndLn="73" goals="1," locStartln="73" sev="3" locRef="62" tool="jtest" lineHash="-1715007721" unbViolId="bb0c6a55-7004-3422-b4fd-0ee9d57260ec" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Missing Javadoc comment for method 'windowDeactivated()'" ln="76" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="JAVADOC.PJDM" lnHash="646333650" pkg="examples.stackmachine" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="bba35ce0-769a-3cf0-9ae0-d8e3e50f346f" locEndPos="33" urgent="true" prio="Not Defined" locEndLn="76" goals="1," locStartln="76" sev="3" locRef="62" tool="jtest" lineHash="646333650" unbViolId="b7cb9925-2439-3c8b-a75d-5b6a133f6822" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="The overriding method 'windowDeactivated()' does not have an &quot;@Override&quot; annotation" ln="76" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="OOP.AOA" lnHash="646333650" pkg="examples.stackmachine" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="07e96242-85a4-3245-836e-de8b55500212" locEndPos="33" urgent="true" prio="Not Defined" locEndLn="76" goals="1," locStartln="76" sev="3" locRef="62" tool="jtest" lineHash="646333650" unbViolId="a1f0ffd1-fb21-33c8-bd28-b644a33513d2" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Missing Javadoc comment for method 'windowDeiconified()'" ln="79" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="JAVADOC.PJDM" lnHash="847195409" pkg="examples.stackmachine" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="76bc0146-aad8-3e1e-869b-ad5d8b05231d" locEndPos="33" urgent="true" prio="Not Defined" locEndLn="79" goals="1," locStartln="79" sev="3" locRef="62" tool="jtest" lineHash="847195409" unbViolId="df2297a8-9e4e-3ff8-8682-06448605b588" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="The overriding method 'windowDeiconified()' does not have an &quot;@Override&quot; annotation" ln="79" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="OOP.AOA" lnHash="847195409" pkg="examples.stackmachine" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8ff384c5-869b-33d5-b68a-0075b15efacb" locEndPos="33" urgent="true" prio="Not Defined" locEndLn="79" goals="1," locStartln="79" sev="3" locRef="62" tool="jtest" lineHash="847195409" unbViolId="cc40d271-cec1-3e6b-94a0-c76db6463d11" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Missing Javadoc comment for method 'windowIconified()'" ln="82" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="JAVADOC.PJDM" lnHash="1608467728" pkg="examples.stackmachine" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="91e54b36-9741-3253-a8e1-5bb1c55ab11a" locEndPos="31" urgent="true" prio="Not Defined" locEndLn="82" goals="1," locStartln="82" sev="3" locRef="62" tool="jtest" lineHash="1608467728" unbViolId="bd2e7f07-eef5-3090-98eb-a5695b934153" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="The overriding method 'windowIconified()' does not have an &quot;@Override&quot; annotation" ln="82" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="OOP.AOA" lnHash="1608467728" pkg="examples.stackmachine" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e0ac1454-c8be-33d6-92bc-d59302391884" locEndPos="31" urgent="true" prio="Not Defined" locEndLn="82" goals="1," locStartln="82" sev="3" locRef="62" tool="jtest" lineHash="1608467728" unbViolId="c7bff107-fd2c-3972-b770-43afe3a21157" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Missing Javadoc comment for method 'windowOpened()'" ln="85" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="JAVADOC.PJDM" lnHash="-563576305" pkg="examples.stackmachine" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f9a7a00d-dff3-35df-9a19-ec4728648770" locEndPos="28" urgent="true" prio="Not Defined" locEndLn="85" goals="1," locStartln="85" sev="3" locRef="62" tool="jtest" lineHash="-563576305" unbViolId="bcf9b37f-8e1a-3587-945e-150837e79bfe" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="The overriding method 'windowOpened()' does not have an &quot;@Override&quot; annotation" ln="85" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="OOP.AOA" lnHash="-563576305" pkg="examples.stackmachine" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e7b0368d-b3a5-3e77-ad9f-3b8640d768b8" locEndPos="28" urgent="true" prio="Not Defined" locEndLn="85" goals="1," locStartln="85" sev="3" locRef="62" tool="jtest" lineHash="-563576305" unbViolId="2ebddf3e-da1e-3713-bd7a-241195611de0" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Missing Javadoc comment for method 'componentHidden()'" ln="88" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="JAVADOC.PJDM" lnHash="1485814764" pkg="examples.stackmachine" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5a469cb1-dcb0-3ae2-9dd7-7eda2c169df3" locEndPos="31" urgent="true" prio="Not Defined" locEndLn="88" goals="1," locStartln="88" sev="3" locRef="62" tool="jtest" lineHash="1485814764" unbViolId="0c1e5bed-46d7-3420-9acb-dde5d01a7c50" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="The overriding method 'componentHidden()' does not have an &quot;@Override&quot; annotation" ln="88" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="OOP.AOA" lnHash="1485814764" pkg="examples.stackmachine" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a8d30105-e34b-380a-ab3c-62d1d6fe433f" locEndPos="31" urgent="true" prio="Not Defined" locEndLn="88" goals="1," locStartln="88" sev="3" locRef="62" tool="jtest" lineHash="1485814764" unbViolId="c0ac85eb-7c7b-3c2e-ba4c-a0965966893d" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Missing Javadoc comment for method 'componentMoved()'" ln="91" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="JAVADOC.PJDM" lnHash="-1659411163" pkg="examples.stackmachine" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="35af2f57-b3c8-3b5c-8d47-56c258429762" locEndPos="30" urgent="true" prio="Not Defined" locEndLn="91" goals="1," locStartln="91" sev="3" locRef="62" tool="jtest" lineHash="-1659411163" unbViolId="e6bfab9b-76aa-3811-b1ea-9969584925fc" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="The overriding method 'componentMoved()' does not have an &quot;@Override&quot; annotation" ln="91" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="OOP.AOA" lnHash="-1659411163" pkg="examples.stackmachine" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="bef54503-cacb-3b0f-8cfd-f61af847dd95" locEndPos="30" urgent="true" prio="Not Defined" locEndLn="91" goals="1," locStartln="91" sev="3" locRef="62" tool="jtest" lineHash="-1659411163" unbViolId="5de315ab-3d92-3b38-abde-522fb2552ab8" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Missing Javadoc comment for method 'componentResized()'" ln="94" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="JAVADOC.PJDM" lnHash="1750116898" pkg="examples.stackmachine" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="fcd2b85c-2d90-30d3-9818-9057926e7a1d" locEndPos="32" urgent="true" prio="Not Defined" locEndLn="94" goals="1," locStartln="94" sev="3" locRef="62" tool="jtest" lineHash="1750116898" unbViolId="125662cd-427c-3ae0-96e0-e27e7dade96d" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="The overriding method 'componentResized()' does not have an &quot;@Override&quot; annotation" ln="94" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="OOP.AOA" lnHash="1750116898" pkg="examples.stackmachine" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2afb00eb-2e30-38ff-97a2-92f4a339890b" locEndPos="32" urgent="true" prio="Not Defined" locEndLn="94" goals="1," locStartln="94" sev="3" locRef="62" tool="jtest" lineHash="1750116898" unbViolId="847bb1bc-c9fc-35c5-9375-ef0540b2ff7c" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Missing Javadoc comment for method 'componentShown()'" ln="98" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="JAVADOC.PJDM" lnHash="-1103900541" pkg="examples.stackmachine" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="683db239-137f-302a-ac4a-cd5cf2189b7a" locEndPos="30" urgent="true" prio="Not Defined" locEndLn="98" goals="1," locStartln="98" sev="3" locRef="62" tool="jtest" lineHash="-1103900541" unbViolId="fed3ab2d-c19d-3c66-8edf-baa9dcb702a8" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="The overriding method 'componentShown()' does not have an &quot;@Override&quot; annotation" ln="98" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="OOP.AOA" lnHash="-1103900541" pkg="examples.stackmachine" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="29fe3640-e57f-3a6e-8e2d-6224734ca7a1" locEndPos="30" urgent="true" prio="Not Defined" locEndLn="98" goals="1," locStartln="98" sev="3" locRef="62" tool="jtest" lineHash="-1103900541" unbViolId="ef238f34-69c9-3b4c-a9a7-76a21b95f237" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="253" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="FORMAT.BLCD" lnHash="2022911636" pkg="examples.stackmachine" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="221b813e-b125-3fbb-a9b5-1184a9694271" locEndPos="6" urgent="true" prio="Not Defined" locEndLn="253" goals="1," locStartln="253" sev="3" locRef="62" tool="jtest" lineHash="2022911636" unbViolId="ce1b89a9-6469-3f5b-9308-f964937620ec" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="No serialVersionUID declared in class 'PushTextField'" ln="253" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="SERIAL.DUID" lnHash="2022911636" pkg="examples.stackmachine" rule.header="Create a 'serialVersionUID' for all 'Serializable' classes" locStartPos="10" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="076e67b2-9e3f-30d8-bbb8-a7e4e23150c2" locEndPos="23" prio="Not Defined" locEndLn="253" goals="0," locStartln="253" sev="3" locRef="62" tool="jtest" lineHash="2022911636" unbViolId="5dc75808-1414-310b-8333-a2b7d2fa540b" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Missing Javadoc comment for method 'actionPerformed()'" ln="260" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="JAVADOC.PJDM" lnHash="1513392761" pkg="examples.stackmachine" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3623b1e4-366b-3b90-b4b9-98cca597a257" locEndPos="35" urgent="true" prio="Not Defined" locEndLn="260" goals="1," locStartln="260" sev="3" locRef="62" tool="jtest" lineHash="1513392761" unbViolId="b607ea59-818c-3eaf-ad91-a6e70fee48ab" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="The overriding method 'actionPerformed()' does not have an &quot;@Override&quot; annotation" ln="260" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="OOP.AOA" lnHash="1513392761" pkg="examples.stackmachine" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="382d9fcc-1341-3ca6-b408-86451d20412b" locEndPos="35" urgent="true" prio="Not Defined" locEndLn="260" goals="1," locStartln="260" sev="3" locRef="62" tool="jtest" lineHash="1513392761" unbViolId="f2207a75-12a6-3a46-8da6-8a4e7f22d57a" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="266" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="FORMAT.BLCD" lnHash="1918967680" pkg="examples.stackmachine" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="36aa393a-143e-3064-8b4b-1b73a461fd0e" locEndPos="6" urgent="true" prio="Not Defined" locEndLn="266" goals="1," locStartln="266" sev="3" locRef="62" tool="jtest" lineHash="1918967680" unbViolId="14464d35-df06-3958-ad6e-b64aaf279d5f" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="No serialVersionUID declared in class 'LifoRadioButton'" ln="266" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="SERIAL.DUID" lnHash="1918967680" pkg="examples.stackmachine" rule.header="Create a 'serialVersionUID' for all 'Serializable' classes" locStartPos="10" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c1c1588c-3a3b-3aae-919b-1b65e1c1f2f1" locEndPos="25" prio="Not Defined" locEndLn="266" goals="0," locStartln="266" sev="3" locRef="62" tool="jtest" lineHash="1918967680" unbViolId="925346fe-648a-3c85-925f-563e2f6a2f22" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Missing Javadoc comment for method 'actionPerformed()'" ln="275" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="JAVADOC.PJDM" lnHash="1513392761" pkg="examples.stackmachine" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="94c7271e-529f-378e-b4e8-f03fa517ce19" locEndPos="35" urgent="true" prio="Not Defined" locEndLn="275" goals="1," locStartln="275" sev="3" locRef="62" tool="jtest" lineHash="1513392761" unbViolId="c8d18cef-1215-3938-a53f-43110c341ed6" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="The overriding method 'actionPerformed()' does not have an &quot;@Override&quot; annotation" ln="275" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="OOP.AOA" lnHash="1513392761" pkg="examples.stackmachine" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b4c2bee4-e3de-3a5e-b6c7-15134196e692" locEndPos="35" urgent="true" prio="Not Defined" locEndLn="275" goals="1," locStartln="275" sev="3" locRef="62" tool="jtest" lineHash="1513392761" unbViolId="61986fe9-2407-3282-8830-4c0aabf94ffd" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="282" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="FORMAT.BLCD" lnHash="2082146374" pkg="examples.stackmachine" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d6dcbb6e-2c3d-327f-8269-7ba7a787f8fe" locEndPos="6" urgent="true" prio="Not Defined" locEndLn="282" goals="1," locStartln="282" sev="3" locRef="62" tool="jtest" lineHash="2082146374" unbViolId="9202aefd-717c-3811-a683-6f5496890ae7" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="No serialVersionUID declared in class 'FifoRadioButton'" ln="282" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="SERIAL.DUID" lnHash="2082146374" pkg="examples.stackmachine" rule.header="Create a 'serialVersionUID' for all 'Serializable' classes" locStartPos="10" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="bf32553c-4fdc-35f5-bf81-f49b5f59e736" locEndPos="25" prio="Not Defined" locEndLn="282" goals="0," locStartln="282" sev="3" locRef="62" tool="jtest" lineHash="2082146374" unbViolId="746ef0a5-8c78-3cb7-b406-8b4187f7091b" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Missing Javadoc comment for method 'actionPerformed()'" ln="290" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="JAVADOC.PJDM" lnHash="1513392761" pkg="examples.stackmachine" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="48419c2c-db50-3d46-be26-9df71ece38c8" locEndPos="35" urgent="true" prio="Not Defined" locEndLn="290" goals="1," locStartln="290" sev="3" locRef="62" tool="jtest" lineHash="1513392761" unbViolId="37cdcdd5-d051-33de-98b8-80f006a5a15d" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="The overriding method 'actionPerformed()' does not have an &quot;@Override&quot; annotation" ln="290" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="OOP.AOA" lnHash="1513392761" pkg="examples.stackmachine" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4f1ecaf0-7e10-3dee-b5c9-dc015b7d0ac4" locEndPos="35" prio="Not Defined" locEndLn="290" goals="0," locStartln="290" sev="3" locRef="62" tool="jtest" lineHash="1513392761" unbViolId="8c1d53d6-b3b2-3988-ad3d-a7bbed036fbd" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="297" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="FORMAT.BLCD" lnHash="2109853231" pkg="examples.stackmachine" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="65f8933d-e7db-39d9-a801-c1eed10c544f" locEndPos="6" urgent="true" prio="Not Defined" locEndLn="297" goals="1," locStartln="297" sev="3" locRef="62" tool="jtest" lineHash="2109853231" unbViolId="488dbd0b-9e81-370a-9c5e-62029371e84e" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="No serialVersionUID declared in class 'PushButton'" ln="297" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="SERIAL.DUID" lnHash="2109853231" pkg="examples.stackmachine" rule.header="Create a 'serialVersionUID' for all 'Serializable' classes" locStartPos="10" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6116c412-bcc2-3b84-b540-0de09bc05a9e" locEndPos="20" prio="Not Defined" locEndLn="297" goals="0," locStartln="297" sev="3" locRef="62" tool="jtest" lineHash="2109853231" unbViolId="c752d900-968f-3381-8af9-94114804cc79" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Missing Javadoc comment for method 'actionPerformed()'" ln="304" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="JAVADOC.PJDM" lnHash="1513392761" pkg="examples.stackmachine" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b6d01d5e-84e2-3663-a80c-5893082020ce" locEndPos="35" urgent="true" prio="Not Defined" locEndLn="304" goals="1," locStartln="304" sev="3" locRef="62" tool="jtest" lineHash="1513392761" unbViolId="13ff12fe-6ff3-3362-bec7-798aa15484e4" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="The overriding method 'actionPerformed()' does not have an &quot;@Override&quot; annotation" ln="304" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="OOP.AOA" lnHash="1513392761" pkg="examples.stackmachine" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5e153aa8-63ea-3dca-8080-6c8c62635b14" locEndPos="35" prio="Not Defined" locEndLn="304" goals="0," locStartln="304" sev="3" locRef="62" tool="jtest" lineHash="1513392761" unbViolId="49c21a8b-00b3-3e8b-85aa-aef418598cbc" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="309" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="FORMAT.BLCD" lnHash="1692219798" pkg="examples.stackmachine" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="fd756f4a-cf6e-3543-9481-24acba0d2684" locEndPos="6" urgent="true" prio="Not Defined" locEndLn="309" goals="1," locStartln="309" sev="3" locRef="62" tool="jtest" lineHash="1692219798" unbViolId="0fba8e9e-d12d-3b7a-ad0e-ef4eda2b504f" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="No serialVersionUID declared in class 'PopButton'" ln="309" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="SERIAL.DUID" lnHash="1692219798" pkg="examples.stackmachine" rule.header="Create a 'serialVersionUID' for all 'Serializable' classes" locStartPos="10" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="66e7247b-fd80-3782-9c38-4cc378417575" locEndPos="19" prio="Not Defined" locEndLn="309" goals="0," locStartln="309" sev="3" locRef="62" tool="jtest" lineHash="1692219798" unbViolId="b1563c22-4b06-36bd-aec8-cec9fabf4722" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Missing Javadoc comment for method 'actionPerformed()'" ln="316" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="JAVADOC.PJDM" lnHash="1513392761" pkg="examples.stackmachine" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b3d81636-fcd7-38a9-b7d8-1a37b50e8dfb" locEndPos="35" urgent="true" prio="Not Defined" locEndLn="316" goals="1," locStartln="316" sev="3" locRef="62" tool="jtest" lineHash="1513392761" unbViolId="bb88d2c7-0cc9-3334-b9cf-5dcee88cac12" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="The overriding method 'actionPerformed()' does not have an &quot;@Override&quot; annotation" ln="316" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="OOP.AOA" lnHash="1513392761" pkg="examples.stackmachine" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c6ad01e0-29ef-3940-aee7-c469300fca36" locEndPos="35" prio="Not Defined" locEndLn="316" goals="0," locStartln="316" sev="3" locRef="62" tool="jtest" lineHash="1513392761" unbViolId="9b51ac35-40f1-3c53-82a4-bab76f135923" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="321" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="FORMAT.BLCD" lnHash="870786022" pkg="examples.stackmachine" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4343a8c4-a98d-30ec-84c6-cacb8d5677ae" locEndPos="6" urgent="true" prio="Not Defined" locEndLn="321" goals="1," locStartln="321" sev="3" locRef="62" tool="jtest" lineHash="870786022" unbViolId="73c8a2d5-57d3-3e61-894d-efbc8b47bd49" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="No serialVersionUID declared in class 'AddButton'" ln="321" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="SERIAL.DUID" lnHash="870786022" pkg="examples.stackmachine" rule.header="Create a 'serialVersionUID' for all 'Serializable' classes" locStartPos="10" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="4f07c7ac-3f1b-3d60-beb0-84cadfeaa2dc" locEndPos="19" prio="Not Defined" locEndLn="321" goals="0," locStartln="321" sev="3" locRef="62" tool="jtest" lineHash="870786022" unbViolId="8784194c-df35-3096-ae83-9b466b47c007" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Missing Javadoc comment for method 'actionPerformed()'" ln="328" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="JAVADOC.PJDM" lnHash="1513392761" pkg="examples.stackmachine" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e5b12063-cc79-31fe-8882-1e7e4b2eb1f7" locEndPos="35" urgent="true" prio="Not Defined" locEndLn="328" goals="1," locStartln="328" sev="3" locRef="62" tool="jtest" lineHash="1513392761" unbViolId="8dff6c50-ae3f-324e-a1c6-948c44caf6e4" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="The overriding method 'actionPerformed()' does not have an &quot;@Override&quot; annotation" ln="328" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="OOP.AOA" lnHash="1513392761" pkg="examples.stackmachine" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ce28c6b4-6a87-37f8-b030-9e12e23d6bd4" locEndPos="35" prio="Not Defined" locEndLn="328" goals="0," locStartln="328" sev="3" locRef="62" tool="jtest" lineHash="1513392761" unbViolId="cf121ce1-f3d6-388d-a03b-19184a4fe13a" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="333" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="FORMAT.BLCD" lnHash="1996756649" pkg="examples.stackmachine" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="cc435c83-91c1-366a-ae6b-b626c58e981a" locEndPos="6" urgent="true" prio="Not Defined" locEndLn="333" goals="1," locStartln="333" sev="3" locRef="62" tool="jtest" lineHash="1996756649" unbViolId="6139e8a3-89e0-3379-86ed-8e5c3dd35c62" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="No serialVersionUID declared in class 'SubtractButton'" ln="333" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="SERIAL.DUID" lnHash="1996756649" pkg="examples.stackmachine" rule.header="Create a 'serialVersionUID' for all 'Serializable' classes" locStartPos="10" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="cef893c2-5454-390d-9566-2615d2a3f086" locEndPos="24" prio="Not Defined" locEndLn="333" goals="0," locStartln="333" sev="3" locRef="62" tool="jtest" lineHash="1996756649" unbViolId="17e16d80-4e6c-3a64-b75e-1559f0e0c787" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Missing Javadoc comment for method 'actionPerformed()'" ln="340" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="JAVADOC.PJDM" lnHash="1513392761" pkg="examples.stackmachine" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="8923da6f-fb41-332d-8fd2-699e3bf65efa" locEndPos="35" urgent="true" prio="Not Defined" locEndLn="340" goals="1," locStartln="340" sev="3" locRef="62" tool="jtest" lineHash="1513392761" unbViolId="3a0d199a-57a7-3905-b77b-74e021173ef5" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="The overriding method 'actionPerformed()' does not have an &quot;@Override&quot; annotation" ln="340" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="OOP.AOA" lnHash="1513392761" pkg="examples.stackmachine" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2cbfcee2-452d-333f-b74e-bef6057e5c5b" locEndPos="35" prio="Not Defined" locEndLn="340" goals="0," locStartln="340" sev="3" locRef="62" tool="jtest" lineHash="1513392761" unbViolId="5ffddc9a-2d7c-387a-aac7-2170664d7906" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="345" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="FORMAT.BLCD" lnHash="1385739705" pkg="examples.stackmachine" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ff19bfd1-6028-3d22-8f52-53c657311d45" locEndPos="6" urgent="true" prio="Not Defined" locEndLn="345" goals="1," locStartln="345" sev="3" locRef="62" tool="jtest" lineHash="1385739705" unbViolId="d53a0c53-afe5-319a-aab4-2f69e80ca9db" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="No serialVersionUID declared in class 'MultiplyButton'" ln="345" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="SERIAL.DUID" lnHash="1385739705" pkg="examples.stackmachine" rule.header="Create a 'serialVersionUID' for all 'Serializable' classes" locStartPos="10" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5701d503-0d2d-3d52-bf9b-a109f307efc1" locEndPos="24" prio="Not Defined" locEndLn="345" goals="0," locStartln="345" sev="3" locRef="62" tool="jtest" lineHash="1385739705" unbViolId="af58d30c-652a-3b06-88c1-f242dff8cf1c" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Missing Javadoc comment for method 'actionPerformed()'" ln="352" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="JAVADOC.PJDM" lnHash="1513392761" pkg="examples.stackmachine" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3d214949-6e0a-3c47-81e3-febd1bac4ab0" locEndPos="35" urgent="true" prio="Not Defined" locEndLn="352" goals="1," locStartln="352" sev="3" locRef="62" tool="jtest" lineHash="1513392761" unbViolId="e80666b7-b0a4-3c71-a996-1f0cc6b097e2" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="The overriding method 'actionPerformed()' does not have an &quot;@Override&quot; annotation" ln="352" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="OOP.AOA" lnHash="1513392761" pkg="examples.stackmachine" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="84f74c9c-13fb-3d50-890c-fa5c130fae08" locEndPos="35" prio="Not Defined" locEndLn="352" goals="0," locStartln="352" sev="3" locRef="62" tool="jtest" lineHash="1513392761" unbViolId="80e4cf38-2cdd-34c0-ae15-60089c1f7ea0" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="357" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="FORMAT.BLCD" lnHash="-1964135346" pkg="examples.stackmachine" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e31781c9-12a7-3692-a022-0355bd5b9a04" locEndPos="6" urgent="true" prio="Not Defined" locEndLn="357" goals="1," locStartln="357" sev="3" locRef="62" tool="jtest" lineHash="-1964135346" unbViolId="41ae5d46-900e-371d-8549-e1ea7d2152d0" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="No serialVersionUID declared in class 'DivideButton'" ln="357" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="SERIAL.DUID" lnHash="-1964135346" pkg="examples.stackmachine" rule.header="Create a 'serialVersionUID' for all 'Serializable' classes" locStartPos="10" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="d0f525a0-059c-37f4-862f-5c34fd58631f" locEndPos="22" prio="Not Defined" locEndLn="357" goals="0," locStartln="357" sev="3" locRef="62" tool="jtest" lineHash="-1964135346" unbViolId="d491ebac-937b-3c5a-87ce-d7660c2e921b" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Missing Javadoc comment for method 'actionPerformed()'" ln="364" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="JAVADOC.PJDM" lnHash="1513392761" pkg="examples.stackmachine" rule.header="Provide Javadoc comments and descriptions for methods" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7019df66-5f8a-3557-ae3b-bba05b2acd18" locEndPos="35" urgent="true" prio="Not Defined" locEndLn="364" goals="1," locStartln="364" sev="3" locRef="62" tool="jtest" lineHash="1513392761" unbViolId="e86685ad-3e5c-3e44-a1b9-eeb381439d1e" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="The overriding method 'actionPerformed()' does not have an &quot;@Override&quot; annotation" ln="364" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="OOP.AOA" lnHash="1513392761" pkg="examples.stackmachine" rule.header="Add the &quot;@Override&quot; annotation to overriding methods" locStartPos="20" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="659d1f98-8b16-3c7b-abb7-b2a06fdc6d48" locEndPos="35" prio="Not Defined" locEndLn="364" goals="0," locStartln="364" sev="3" locRef="62" tool="jtest" lineHash="1513392761" unbViolId="b61c0d18-7b14-3851-9169-b88a4f815db4" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="369" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="FORMAT.BLCD" lnHash="-247836427" pkg="examples.stackmachine" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="4" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="3dedbcd0-327c-3431-a2b6-3d7e19ee765e" locEndPos="6" urgent="true" prio="Not Defined" locEndLn="369" goals="1," locStartln="369" sev="3" locRef="62" tool="jtest" lineHash="-247836427" unbViolId="47e5081b-9876-36a5-bcaf-5cdf0e2aefd2" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="No serialVersionUID declared in class 'ImageButton'" ln="369" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="SERIAL.DUID" lnHash="-247836427" pkg="examples.stackmachine" rule.header="Create a 'serialVersionUID' for all 'Serializable' classes" locStartPos="10" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5dd213c9-e0d7-39ad-9b64-429b968ab28c" locEndPos="21" prio="Not Defined" locEndLn="369" goals="0," locStartln="369" sev="3" locRef="62" tool="jtest" lineHash="-247836427" unbViolId="e340810b-5497-3940-8b42-0de660082134" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Instance field is declared &quot;public&quot;: _stackSizeLabel" ln="382" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="OOP.AF" lnHash="-727155344" pkg="examples.stackmachine" rule.header="Avoid &quot;public&quot;/&quot;protected&quot;/package-private fields" locStartPos="18" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9923bc55-e217-30b8-b0d5-0b7d5accf35b" locEndPos="33" urgent="true" prio="Not Defined" locEndLn="382" goals="1," locStartln="382" sev="3" locRef="62" tool="jtest" lineHash="-727155344" unbViolId="c26530d3-1fc7-3e23-8dd8-abb697e6c087" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Instance field is declared &quot;public&quot;: _stackList" ln="384" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="OOP.AF" lnHash="-2014942493" pkg="examples.stackmachine" rule.header="Avoid &quot;public&quot;/&quot;protected&quot;/package-private fields" locStartPos="21" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="2aebfff4-3471-3650-9be4-2825dd65cd18" locEndPos="31" urgent="true" prio="Not Defined" locEndLn="384" goals="1," locStartln="384" sev="3" locRef="62" tool="jtest" lineHash="-2014942493" unbViolId="44b6427e-86c4-34d2-b9f0-f58d5cfbc6e9" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Instance field is declared &quot;public&quot;: _pushTextField" ln="386" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="OOP.AF" lnHash="703995651" pkg="examples.stackmachine" rule.header="Avoid &quot;public&quot;/&quot;protected&quot;/package-private fields" locStartPos="25" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="96738a05-42d9-3899-8463-ec97ab59bd60" locEndPos="39" urgent="true" prio="Not Defined" locEndLn="386" goals="1," locStartln="386" sev="3" locRef="62" tool="jtest" lineHash="703995651" unbViolId="ad2d9217-c882-31fe-95be-8fe16f601604" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Instance field is declared &quot;public&quot;: _scrollPane" ln="388" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="OOP.AF" lnHash="294686175" pkg="examples.stackmachine" rule.header="Avoid &quot;public&quot;/&quot;protected&quot;/package-private fields" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="25851ba7-a705-38f1-9453-52ad09c492de" locEndPos="34" urgent="true" prio="Not Defined" locEndLn="388" goals="1," locStartln="388" sev="3" locRef="62" tool="jtest" lineHash="294686175" unbViolId="35cd9f7d-8cc5-3961-b273-b539f03ef619" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Use 1 blank line before every method declaration (or corresponding Javadoc)" ln="391" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="FORMAT.U2BL" lnHash="-1228458120" pkg="examples.stackmachine" rule.header="Enforce number of blank line(s) between major sections" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="cdd29644-b61e-3089-bd36-2089fb8dcd9f" locEndPos="44" urgent="true" prio="Not Defined" locEndLn="391" goals="1," locStartln="391" sev="3" locRef="62" tool="jtest" lineHash="-1228458120" unbViolId="0a5a8c9b-f8ab-3435-915a-e0ec0c81fe01" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="'main()' method is present, possible leftover debugging code" ln="391" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" auth="staff" rule="SECURITY.WSC.UMAIN" lnHash="-1228458120" pkg="examples.stackmachine" rule.header="Avoid 'main()' methods because they may allow unauthorized access to classes" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="0b177890-9b14-3c42-a691-59e99d36ede0" locEndPos="27" prio="Not Defined" locEndLn="391" goals="0," locStartln="391" sev="2" locRef="62" tool="jtest" lineHash="-1228458120" unbViolId="bd9c1fd8-ddc5-31ed-b619-64813ff1353f" risk="Undefined" locType="sr" hash="-339219917" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="8" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/StackInterface.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="1898922986" pkg="examples.stackmachine" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="c26a94dd-e4f5-3819-99a2-00b8373c73ce" locEndPos="2" prio="Not Defined" locEndLn="8" goals="0," locStartln="8" sev="3" locRef="63" tool="jtest" lineHash="1898922986" unbViolId="cd6322e1-7b22-3e14-afa8-8ae6d0ae48b7" risk="Undefined" locType="sr" hash="963698942" />
    <StdViol msg="Missing Javadoc comment for 'StackInterface'" ln="8" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/StackInterface.java" auth="mgorecka" rule="JAVADOC.PJDC" lnHash="1898922986" pkg="examples.stackmachine" rule.header="Provide Javadoc comments and descriptions for types" locStartPos="17" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9ccba957-e00d-3cd0-b346-5dd9866e9891" locEndPos="31" prio="Not Defined" locEndLn="8" goals="0," locStartln="8" sev="3" locRef="63" tool="jtest" lineHash="1898922986" unbViolId="852b7d80-22d1-390c-9f97-5a9ee4d1167e" risk="Undefined" locType="sr" hash="963698942" />
    <StdViol msg="Unnecessary &quot;public&quot; in method declaration: push()" ln="18" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/StackInterface.java" auth="mgorecka" rule="UC.AAI" lnHash="1866760845" pkg="examples.stackmachine" rule.header="Avoid unnecessary modifiers in an &quot;interface&quot;" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="788e5da4-b33c-3c50-a7ca-48dead02d00f" locEndPos="20" prio="Not Defined" locEndLn="18" goals="0," locStartln="18" sev="3" locRef="63" tool="jtest" lineHash="1866760845" unbViolId="5ee38a40-f034-34c4-a4e8-43eeaf79db06" risk="Undefined" locType="sr" hash="963698942" />
    <StdViol msg="Unnecessary &quot;public&quot; in method declaration: pop()" ln="25" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/StackInterface.java" auth="mgorecka" rule="UC.AAI" lnHash="1469150270" pkg="examples.stackmachine" rule.header="Avoid unnecessary modifiers in an &quot;interface&quot;" locStartPos="16" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5724f37e-5fea-36a8-b638-6d43098478ef" locEndPos="19" prio="Not Defined" locEndLn="25" goals="0," locStartln="25" sev="3" locRef="63" tool="jtest" lineHash="1469150270" unbViolId="49ddb27e-f5e4-3ffb-8e73-c58e459a6bea" risk="Undefined" locType="sr" hash="963698942" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/StackList.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="1126289027" pkg="examples.stackmachine" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="51181134-3fd1-38b9-9350-516431c9a697" locEndPos="2" prio="Not Defined" locEndLn="13" goals="0," locStartln="13" sev="3" locRef="64" tool="jtest" lineHash="1126289027" unbViolId="3078a915-08cc-3769-a150-1b2aa838fe94" risk="Undefined" locType="sr" hash="-1082942404" />
    <StdViol msg="Missing Javadoc comment for 'StackList'" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/StackList.java" auth="mgorecka" rule="JAVADOC.PJDC" lnHash="1126289027" pkg="examples.stackmachine" rule.header="Provide Javadoc comments and descriptions for types" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a2b74516-7d91-3fa0-840d-9bd64d036e96" locEndPos="22" prio="Not Defined" locEndLn="13" goals="0," locStartln="13" sev="3" locRef="64" tool="jtest" lineHash="1126289027" unbViolId="b7e3886f-7ffa-35f6-9d3c-a36effadbe8a" risk="Undefined" locType="sr" hash="-1082942404" />
    <StdViol msg="No serialVersionUID declared in class 'StackList'" ln="13" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/StackList.java" auth="mgorecka" rule="SERIAL.DUID" lnHash="1126289027" pkg="examples.stackmachine" rule.header="Create a 'serialVersionUID' for all 'Serializable' classes" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="ec0c85c5-b41d-3f6d-b26c-bd126e7a81a5" locEndPos="22" prio="Not Defined" locEndLn="13" goals="0," locStartln="13" sev="3" locRef="64" tool="jtest" lineHash="1126289027" unbViolId="0ce8afa1-db6a-39a1-a19a-039be8b53563" risk="Undefined" locType="sr" hash="-1082942404" />
    <StdViol msg="The parameter 'machineGUI' uses the same name as a field declared in an enclosing scope, which may cause confusion" ln="17" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/StackList.java" auth="mgorecka" rule="OOP.HIF" lnHash="-945336594" pkg="examples.stackmachine" rule.header="Do not hide fields and local variables declared in enclosing scopes" locStartPos="35" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="b59d1c4d-80ad-3640-ba4b-f734a96b5c16" locEndPos="45" prio="Not Defined" locEndLn="17" goals="0," locStartln="17" sev="3" locRef="64" tool="jtest" lineHash="-945336594" unbViolId="e75c77ac-8db3-3821-8df3-92ec9fa545a2" risk="Undefined" locType="sr" hash="-1082942404" />
    <StdViol msg="Avoid using unnecessary &quot;this&quot; expressions" ln="37" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/StackList.java" auth="mgorecka" rule="CODSTA.READ.UATS" lnHash="-1399224086" pkg="examples.stackmachine" rule.header="Avoid or enforce the use of &quot;this&quot; and &quot;super&quot; expressions" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="9c1d62c3-6c1f-3c39-a459-7b7553977b88" locEndPos="12" prio="Not Defined" locEndLn="37" goals="0," locStartln="37" sev="3" locRef="64" tool="jtest" lineHash="-1399224086" unbViolId="fea28e04-e26e-3356-9eb6-bf2c06dc1a02" risk="Undefined" locType="sr" hash="-1082942404" />
    <StdViol msg="Avoid using unnecessary &quot;this&quot; expressions" ln="77" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/StackList.java" auth="mgorecka" rule="CODSTA.READ.UATS" lnHash="1849349839" pkg="examples.stackmachine" rule.header="Avoid or enforce the use of &quot;this&quot; and &quot;super&quot; expressions" locStartPos="29" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="f3d52203-215a-3ed3-a17b-8b1ccfe5c3f5" locEndPos="33" prio="Not Defined" locEndLn="77" goals="0," locStartln="77" sev="3" locRef="64" tool="jtest" lineHash="1849349839" unbViolId="e3184b69-2729-3cdd-8623-b87727b65ee1" risk="Undefined" locType="sr" hash="-1082942404" />
    <StdViol msg="&quot;if&quot; statement without a &quot;{ }&quot; block" ln="80" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/StackList.java" auth="mgorecka" rule="CODSTA.BP.BLK" lnHash="-1596112042" pkg="examples.stackmachine" rule.header="Provide a '{}' block for conditional statements" locStartPos="8" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="1b18d7a4-2d2b-38ca-b037-7425b5f86215" locEndPos="10" prio="Not Defined" locEndLn="80" goals="0," locStartln="80" sev="3" locRef="64" tool="jtest" lineHash="-1596112042" unbViolId="42cf5537-3e95-3b83-9e50-4fc6d0b2f12d" risk="Undefined" locType="sr" hash="-1082942404" />
    <StdViol msg="Avoid using unnecessary &quot;this&quot; expressions" ln="85" locFile="/com.parasoft:demo/src/main/java/examples/stackmachine/StackList.java" auth="mgorecka" rule="CODSTA.READ.UATS" lnHash="508591120" pkg="examples.stackmachine" rule.header="Avoid or enforce the use of &quot;this&quot; and &quot;super&quot; expressions" locStartPos="36" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="a14a3266-47f8-34c6-8826-34cef28a32bc" locEndPos="40" prio="Not Defined" locEndLn="85" goals="0," locStartln="85" sev="3" locRef="64" tool="jtest" lineHash="508591120" unbViolId="251bcb6c-b814-3bd0-916c-2802f2382660" risk="Undefined" locType="sr" hash="-1082942404" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="4" locFile="/com.parasoft:demo/src/main/java/examples/suppress/AllFileSuppress.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="-1631767826" pkg="examples.suppress" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7427a4ad-f152-3f1d-9066-132b3ff7e634" locEndPos="2" prio="Not Defined" locEndLn="4" goals="0," locStartln="4" sev="3" locRef="65" tool="jtest" lineHash="-1631767826" unbViolId="bca406b1-a877-3c4f-af27-15b321ae84e2" risk="Undefined" locType="sr" hash="-2129128806" />
    <StdViol msg="Missing Javadoc comment for 'AllFileSuppress'" ln="4" locFile="/com.parasoft:demo/src/main/java/examples/suppress/AllFileSuppress.java" auth="mgorecka" rule="JAVADOC.PJDC" lnHash="-1631767826" pkg="examples.suppress" rule.header="Provide Javadoc comments and descriptions for types" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6ec43546-7278-3eda-9db7-c772a5de6c56" locEndPos="28" prio="Not Defined" locEndLn="4" goals="0," locStartln="4" sev="3" locRef="65" tool="jtest" lineHash="-1631767826" unbViolId="3b1a166d-7572-360a-a643-2ece4a38b9d3" risk="Undefined" locType="sr" hash="-2129128806" />
    <StdViol msg="'main()' method is present, possible leftover debugging code" ln="6" locFile="/com.parasoft:demo/src/main/java/examples/suppress/AllFileSuppress.java" auth="mgorecka" rule="SECURITY.WSC.UMAIN" lnHash="-1228458120" pkg="examples.suppress" rule.header="Avoid 'main()' methods because they may allow unauthorized access to classes" locStartPos="23" analyzer="com.parasoft.jtest.standards.checkers.rulewizard" lang="java" violId="5391622c-62d6-387a-bbd8-33322b8d964a" locEndPos="27" prio="Not Defined" locEndLn="6" goals="0," locStartln="6" sev="2" locRef="65" tool="jtest" lineHash="-1228458120" unbViolId="ab0c52c4-1efa-37ea-bf21-c8c107bdf17c" risk="Undefined" locType="sr" hash="-2129128806" />
    <StdViol msg="Use 2 blank lines before type declaration" ln="3" locFile="/com.parasoft:demo/src/main/java/examples/suppress/Example.java" auth="mgorecka" rule="FORMAT.BLCD" lnHash="-849193274" pkg="examples.suppress" rule.header="Enforce number of blank line(s) before type declarations" locStartPos="0" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="cfee5764-287e-37f1-af8c-406e4f9d0f09" locEndPos="2" prio="Not Defined" locEndLn="3" goals="0," locStartln="3" sev="3" locRef="66" tool="jtest" lineHash="-849193274" unbViolId="cc958a28-3fa3-3c6e-b465-f5faa9c197c7" risk="Undefined" locType="sr" hash="2004133938" />
    <StdViol msg="Missing Javadoc comment for 'Example'" ln="3" locFile="/com.parasoft:demo/src/main/java/examples/suppress/Example.java" auth="mgorecka" rule="JAVADOC.PJDC" lnHash="-849193274" pkg="examples.suppress" rule.header="Provide Javadoc comments and descriptions for types" locStartPos="13" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="6bbbf6a7-0f84-3753-947a-535977f3990c" locEndPos="20" prio="Not Defined" locEndLn="3" goals="0," locStartln="3" sev="3" locRef="66" tool="jtest" lineHash="-849193274" unbViolId="fe6fe0b4-c5d9-36e0-a798-829db7a86478" risk="Undefined" locType="sr" hash="2004133938" />
    <StdViol msg="Instance field is declared &quot;public&quot;: _field1" ln="5" locFile="/com.parasoft:demo/src/main/java/examples/suppress/Example.java" auth="mgorecka" rule="OOP.AF" lnHash="861979853" pkg="examples.suppress" rule.header="Avoid &quot;public&quot;/&quot;protected&quot;/package-private fields" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="5b01107f-1186-38de-87fd-a5032dbd1a6c" locEndPos="22" prio="Not Defined" locEndLn="5" goals="0," locStartln="5" sev="3" locRef="66" tool="jtest" lineHash="861979853" unbViolId="7c59f5ed-48df-3b9c-9ec4-e48512237842" risk="Undefined" locType="sr" hash="2004133938" />
    <StdViol msg="Instance field is declared &quot;public&quot;: _field2" ln="7" locFile="/com.parasoft:demo/src/main/java/examples/suppress/Example.java" auth="mgorecka" rule="OOP.AF" lnHash="861979884" pkg="examples.suppress" rule.header="Avoid &quot;public&quot;/&quot;protected&quot;/package-private fields" locStartPos="15" supp="true" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="e90924f7-4ae8-315b-a348-f1a731fa0d97" locEndPos="22" prio="Not Defined" locEndLn="7" goals="0," suppRef="1" locStartln="7" sev="3" locRef="66" tool="jtest" lineHash="861979884" unbViolId="28865b09-f593-315e-a928-d427de7ff9f3" risk="Undefined" locType="sr" hash="2004133938" />
    <StdViol msg="Instance field is declared &quot;public&quot;: _field3" ln="9" locFile="/com.parasoft:demo/src/main/java/examples/suppress/Example.java" auth="mgorecka" rule="OOP.AF" lnHash="861979915" pkg="examples.suppress" rule.header="Avoid &quot;public&quot;/&quot;protected&quot;/package-private fields" locStartPos="15" analyzer="com.parasoft.jtest.standards.checkers.java" lang="java" violId="7ca5f0fa-ed5c-3243-9068-e9ec01f89a5f" locEndPos="22" prio="Not Defined" locEndLn="9" goals="0," locStartln="9" sev="3" locRef="66" tool="jtest" lineHash="861979915" unbViolId="9f1eb721-c9f4-3c6e-bd72-b54fa2f7281c" risk="Undefined" locType="sr" hash="2004133938" />
  </StdViols>

      <TestedFilesDetails>
         <Total name="Total (Suppressed)" supp="1" total="808">
            <Project id="com.parasoft:demo" name="com.parasoft:demo" supp="1" total="808">
               <Res name="src" supp="1" total="808">
                  <Res name="main" supp="1" total="808">
                     <Res name="java" supp="1" total="808">
                        <Res name="examples" supp="1" total="808">
                           <Res name="eval" supp="0" total="7">
                              <Res loc="/com.parasoft:demo/src/main/java/examples/eval/Simple.java" locRef="1" locType="sr" name="Simple.java" supp="0" total="7" />
                           </Res>
                           <Res name="flowanalysis" supp="0" total="330">
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" locRef="2" locType="sr" name="AlwaysCloseGSS.java" supp="0" total="16" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" locRef="3" locType="sr" name="AlwaysCloseImages.java" supp="0" total="11" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseLogging.java" locRef="4" locType="sr" name="AlwaysCloseLogging.java" supp="0" total="4" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" locRef="5" locType="sr" name="AlwaysCloseNIOChannels.java" supp="0" total="18" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" locRef="6" locType="sr" name="AlwaysCloseRAFs.java" supp="0" total="17" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" locRef="7" locType="sr" name="AlwaysCloseSockets.java" supp="0" total="13" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" locRef="8" locType="sr" name="AlwaysCloseXMLEncDec.java" supp="0" total="24" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/DereferenceBeforeNullCheck.java" locRef="9" locType="sr" name="DereferenceBeforeNullCheck.java" supp="0" total="4" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/DivisionByZero.java" locRef="10" locType="sr" name="DivisionByZero.java" supp="0" total="19" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/FilesInjection.java" locRef="11" locType="sr" name="FilesInjection.java" supp="0" total="8" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" locRef="12" locType="sr" name="IncorrectIteratorUsage.java" supp="0" total="15" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" locRef="13" locType="sr" name="InefficientCollectionRemoval.java" supp="0" total="10" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" locRef="14" locType="sr" name="InefficientMapRemoval.java" supp="0" total="14" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" locRef="15" locType="sr" name="InefficientMapUsage.java" supp="0" total="11" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/SQLInjection.java" locRef="16" locType="sr" name="SQLInjection.java" supp="0" total="18" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/SystemInjection.java" locRef="17" locType="sr" name="SystemInjection.java" supp="0" total="12" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/UnreachableCode.java" locRef="18" locType="sr" name="UnreachableCode.java" supp="0" total="15" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" locRef="19" locType="sr" name="UseBeforeInConstructorInitialization.java" supp="0" total="10" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" locRef="20" locType="sr" name="UseBeforeInitialization.java" supp="0" total="14" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/WebApplication.java" locRef="21" locType="sr" name="WebApplication.java" supp="0" total="13" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/XMLInjection.java" locRef="22" locType="sr" name="XMLInjection.java" supp="0" total="12" />
                              <Res name="np" supp="0" total="52">
                                 <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" locRef="23" locType="sr" name="DatabaseObject.java" supp="0" total="14" />
                                 <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" locRef="24" locType="sr" name="ExtendedNullPointer.java" supp="0" total="13" />
                                 <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MessageFormatter.java" locRef="25" locType="sr" name="MessageFormatter.java" supp="0" total="8" />
                                 <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/MyDictionary.java" locRef="26" locType="sr" name="MyDictionary.java" supp="0" total="5" />
                                 <Res loc="/com.parasoft:demo/src/main/java/examples/flowanalysis/np/NullPointer.java" locRef="27" locType="sr" name="NullPointer.java" supp="0" total="12" />
                              </Res>
                           </Res>
                           <Res name="junit" supp="0" total="123">
                              <Res loc="/com.parasoft:demo/src/main/java/examples/junit/ChoosingConstructor.java" locRef="28" locType="sr" name="ChoosingConstructor.java" supp="0" total="11" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/junit/CustomMoney.java" locRef="29" locType="sr" name="CustomMoney.java" supp="0" total="3" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/junit/IMoney.java" locRef="30" locType="sr" name="IMoney.java" supp="0" total="22" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/junit/IntegerComparator.java" locRef="31" locType="sr" name="IntegerComparator.java" supp="0" total="2" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/junit/Money.java" locRef="32" locType="sr" name="Money.java" supp="0" total="33" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/junit/MoneyBag.java" locRef="33" locType="sr" name="MoneyBag.java" supp="0" total="42" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/junit/NaiveStringBuilder.java" locRef="34" locType="sr" name="NaiveStringBuilder.java" supp="0" total="2" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/junit/SimpleObjectHandler.java" locRef="35" locType="sr" name="SimpleObjectHandler.java" supp="0" total="8" />
                           </Res>
                           <Res name="metrics" supp="0" total="9">
                              <Res loc="/com.parasoft:demo/src/main/java/examples/metrics/MetricsExample.java" locRef="36" locType="sr" name="MetricsExample.java" supp="0" total="9" />
                           </Res>
                           <Res name="mock" supp="0" total="30">
                              <Res loc="/com.parasoft:demo/src/main/java/examples/mock/CharacterReader.java" locRef="37" locType="sr" name="CharacterReader.java" supp="0" total="7" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/mock/ConstructorExample.java" locRef="38" locType="sr" name="ConstructorExample.java" supp="0" total="3" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/mock/FileExample.java" locRef="39" locType="sr" name="FileExample.java" supp="0" total="4" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/mock/Interpreter.java" locRef="40" locType="sr" name="Interpreter.java" supp="0" total="11" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/mock/MultiSourceCharacterReader.java" locRef="41" locType="sr" name="MultiSourceCharacterReader.java" supp="0" total="5" />
                           </Res>
                           <Res name="nbank" supp="0" total="122">
                              <Res loc="/com.parasoft:demo/src/main/java/examples/nbank/AbstractTransaction.java" locRef="42" locType="sr" name="AbstractTransaction.java" supp="0" total="5" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/nbank/Account.java" locRef="43" locType="sr" name="Account.java" supp="0" total="19" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/nbank/Bank.java" locRef="44" locType="sr" name="Bank.java" supp="0" total="14" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/nbank/BankState.java" locRef="45" locType="sr" name="BankState.java" supp="0" total="5" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/nbank/ConnectionException.java" locRef="46" locType="sr" name="ConnectionException.java" supp="0" total="4" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/nbank/CreditCard.java" locRef="47" locType="sr" name="CreditCard.java" supp="0" total="22" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/nbank/Customer.java" locRef="48" locType="sr" name="Customer.java" supp="0" total="23" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/nbank/DepositTransaction.java" locRef="49" locType="sr" name="DepositTransaction.java" supp="0" total="5" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/nbank/ICreditAgency.java" locRef="50" locType="sr" name="ICreditAgency.java" supp="0" total="5" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/nbank/ITransaction.java" locRef="51" locType="sr" name="ITransaction.java" supp="0" total="3" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/nbank/LogAccountInfo.java" locRef="52" locType="sr" name="LogAccountInfo.java" supp="0" total="10" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/nbank/WithdrawalTransaction.java" locRef="53" locType="sr" name="WithdrawalTransaction.java" supp="0" total="7" />
                           </Res>
                           <Res name="queue" supp="0" total="19">
                              <Res loc="/com.parasoft:demo/src/main/java/examples/queue/Queue.java" locRef="54" locType="sr" name="Queue.java" supp="0" total="19" />
                           </Res>
                           <Res name="security" supp="0" total="21">
                              <Res loc="/com.parasoft:demo/src/main/java/examples/security/InputValidation.java" locRef="55" locType="sr" name="InputValidation.java" supp="0" total="21" />
                           </Res>
                           <Res name="servlets" supp="0" total="15">
                              <Res loc="/com.parasoft:demo/src/main/java/examples/servlets/ExampleServlet.java" locRef="56" locType="sr" name="ExampleServlet.java" supp="0" total="15" />
                           </Res>
                           <Res name="stackmachine" supp="0" total="125">
                              <Res loc="/com.parasoft:demo/src/main/java/examples/stackmachine/AbstractStackMachine.java" locRef="57" locType="sr" name="AbstractStackMachine.java" supp="0" total="4" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" locRef="58" locType="sr" name="CommandLineStackMachine.java" supp="0" total="29" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/stackmachine/CustomListRenderer.java" locRef="59" locType="sr" name="CustomListRenderer.java" supp="0" total="3" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/stackmachine/FifoStackMachine.java" locRef="60" locType="sr" name="FifoStackMachine.java" supp="0" total="4" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/stackmachine/LifoStackMachine.java" locRef="61" locType="sr" name="LifoStackMachine.java" supp="0" total="4" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" locRef="62" locType="sr" name="RunnableStackMachine.java" supp="0" total="69" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/stackmachine/StackInterface.java" locRef="63" locType="sr" name="StackInterface.java" supp="0" total="4" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/stackmachine/StackList.java" locRef="64" locType="sr" name="StackList.java" supp="0" total="8" />
                           </Res>
                           <Res name="suppress" supp="1" total="7">
                              <Res loc="/com.parasoft:demo/src/main/java/examples/suppress/AllFileSuppress.java" locRef="65" locType="sr" name="AllFileSuppress.java" supp="0" total="3" />
                              <Res loc="/com.parasoft:demo/src/main/java/examples/suppress/Example.java" locRef="66" locType="sr" name="Example.java" supp="1" total="4" />
                           </Res>
                        </Res>
                     </Res>
                  </Res>
               </Res>
               <Res name="META-INF" supp="0" total="0">
                  <Res loc="/com.parasoft:demo/META-INF/MANIFEST.MF" locRef="67" locType="sr" name="MANIFEST.MF" supp="0" total="0" />
               </Res>
            </Project>
         </Total>
      </TestedFilesDetails>
   </CodingStandards>
   <Statistics>
      
   </Statistics>
</ResultsSession>
