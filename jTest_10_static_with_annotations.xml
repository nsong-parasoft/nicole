<?xml version='1.0' encoding='UTF-8'?>
<ResultsSession buildId="2019-04-25" climode="true" execEnv="win32_x86_64" hasViols="true" id="1554467787289" lang="en_US" machine="CHINCHILLA" prjModule="demo" project="" tag="${scontrol_branch}-win32_x86_64" time="2019-04-25T14:11:50+02:00" toolDispName="Jtest" toolId="jtest" toolName="DTP Engine for Java" toolVer="10.4.2.20190306" user="kmarczyk">
   <TestConfig machine="CHINCHILLA" name="Flow Analysis Standard" pseudoUrl="builtin://Flow Analysis Standard" user="kmarczyk" />
   <Authors>
      <Author id="dev1" name="kmarczyk" />
      <Author id="dev2" name="John" />
      <Author id="dev3" name="Mark Wilson" />
      <Author id="dev4" name="Developer007" />
   </Authors>
   <Analyzers>
      <Analyzer id="com.parasoft.jtest.flowanalyzer" name="Parasoft Java Flow Analyzer" ver="10.4.2.20190308B1425" />
   </Analyzers>
   <VersionInfos>
      <StorageInfo ownerId="" resultId="ISetupResult" ver="1" ver10x="1" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IMetricsViolation" ver="2" ver10x="1" />
      <StorageInfo ownerId="" resultId="IExecutionViolation" ver="1" ver10x="1" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IDupCodeViolation" ver="2" ver10x="1" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IFlowAnalysisViolation" ver="2" ver10x="1" />
      <StorageInfo ownerId="" resultId="IFunctionalViolation" ver="1" ver10x="1" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="ICodingStandardsViolation" ver="2" ver10x="1" />
      <StorageInfo ownerId="" resultId="IUnitTestViolation" ver="1" ver10x="1" />
   </VersionInfos>
   <Goals tsks="58">
      
   </Goals>
   <Scope>
      <Repositories />
      <Locations>
         <Loc hash="-2121569923" locRef="1" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/eval/Simple.java" totLns="68" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/eval/Simple.java" />
         <Loc hash="1860787879" locRef="2" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" />
         <Loc hash="1088242968" locRef="3" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/flowanalysis/AlwaysCloseImages.java" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" />
         <Loc hash="-89489575" locRef="4" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/flowanalysis/AlwaysCloseLogging.java" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/flowanalysis/AlwaysCloseLogging.java" />
         <Loc hash="1710944294" locRef="5" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" />
         <Loc hash="-1842798386" locRef="6" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" />
         <Loc hash="-69784133" locRef="7" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" />
         <Loc hash="-1630627415" locRef="8" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" />
         <Loc hash="726838777" locRef="9" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/flowanalysis/DereferenceBeforeNullCheck.java" totLns="55" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/flowanalysis/DereferenceBeforeNullCheck.java" />
         <Loc hash="-1891737324" locRef="10" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/flowanalysis/DivisionByZero.java" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/flowanalysis/DivisionByZero.java" />
         <Loc hash="686946442" locRef="11" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/flowanalysis/FilesInjection.java" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/flowanalysis/FilesInjection.java" />
         <Loc hash="438092426" locRef="12" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" />
         <Loc hash="1816383512" locRef="13" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" />
         <Loc hash="-417185865" locRef="14" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/flowanalysis/InefficientMapRemoval.java" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" />
         <Loc hash="-359565455" locRef="15" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/flowanalysis/InefficientMapUsage.java" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/flowanalysis/InefficientMapUsage.java" />
         <Loc hash="1862789318" locRef="16" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/flowanalysis/SQLInjection.java" totLns="58" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/flowanalysis/SQLInjection.java" />
         <Loc hash="-152258803" locRef="17" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/flowanalysis/SystemInjection.java" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/flowanalysis/SystemInjection.java" />
         <Loc hash="1709312165" locRef="18" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/flowanalysis/UnreachableCode.java" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/flowanalysis/UnreachableCode.java" />
         <Loc hash="-635152949" locRef="19" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" />
         <Loc hash="2110246917" locRef="20" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/flowanalysis/UseBeforeInitialization.java" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" />
         <Loc hash="565976681" locRef="21" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/flowanalysis/WebApplication.java" totLns="51" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/flowanalysis/WebApplication.java" />
         <Loc hash="-367659159" locRef="22" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/flowanalysis/XMLInjection.java" totLns="39" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/flowanalysis/XMLInjection.java" />
         <Loc hash="635578452" locRef="23" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/flowanalysis/np/DatabaseObject.java" totLns="63" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/flowanalysis/np/DatabaseObject.java" />
         <Loc hash="1118499003" locRef="24" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" totLns="57" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" />
         <Loc hash="796982299" locRef="25" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/flowanalysis/np/MessageFormatter.java" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/flowanalysis/np/MessageFormatter.java" />
         <Loc hash="1067996598" locRef="26" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/flowanalysis/np/MyDictionary.java" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/flowanalysis/np/MyDictionary.java" />
         <Loc hash="-51902665" locRef="27" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/flowanalysis/np/NullPointer.java" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/flowanalysis/np/NullPointer.java" />
         <Loc hash="13842231" locRef="28" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/junit/ChoosingConstructor.java" totLns="59" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/junit/ChoosingConstructor.java" />
         <Loc hash="1460192582" locRef="29" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/junit/CustomMoney.java" totLns="15" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/junit/CustomMoney.java" />
         <Loc hash="-47973091" locRef="30" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/junit/IMoney.java" totLns="52" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/junit/IMoney.java" />
         <Loc hash="1622384320" locRef="31" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/junit/IntegerComparator.java" totLns="15" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/junit/IntegerComparator.java" />
         <Loc hash="-1765121077" locRef="32" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/junit/Money.java" totLns="91" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/junit/Money.java" />
         <Loc hash="-113332437" locRef="33" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/junit/MoneyBag.java" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/junit/MoneyBag.java" />
         <Loc hash="1434598914" locRef="34" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/junit/NaiveStringBuilder.java" totLns="26" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/junit/NaiveStringBuilder.java" />
         <Loc hash="1554031451" locRef="35" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/junit/SimpleObjectHandler.java" totLns="39" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/junit/SimpleObjectHandler.java" />
         <Loc hash="-1994237948" locRef="36" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/metrics/MetricsExample.java" totLns="52" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/metrics/MetricsExample.java" />
         <Loc hash="-252272571" locRef="37" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/mock/CharacterReader.java" totLns="31" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/mock/CharacterReader.java" />
         <Loc hash="-458905718" locRef="38" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/mock/ConstructorExample.java" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/mock/ConstructorExample.java" />
         <Loc hash="-454695497" locRef="39" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/mock/FileExample.java" totLns="24" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/mock/FileExample.java" />
         <Loc hash="-141343473" locRef="40" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/mock/Interpreter.java" totLns="28" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/mock/Interpreter.java" />
         <Loc hash="-762775565" locRef="41" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/mock/MultiSourceCharacterReader.java" totLns="34" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/mock/MultiSourceCharacterReader.java" />
         <Loc hash="-251506569" locRef="42" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/nbank/AbstractTransaction.java" totLns="22" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/nbank/AbstractTransaction.java" />
         <Loc hash="-1300196067" locRef="43" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/nbank/Account.java" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/nbank/Account.java" />
         <Loc hash="-1683403269" locRef="44" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/nbank/Bank.java" totLns="82" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/nbank/Bank.java" />
         <Loc hash="2120971007" locRef="45" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/nbank/BankState.java" totLns="22" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/nbank/BankState.java" />
         <Loc hash="-368683629" locRef="46" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/nbank/ConnectionException.java" totLns="8" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/nbank/ConnectionException.java" />
         <Loc hash="3241407" locRef="47" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/nbank/CreditCard.java" totLns="199" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/nbank/CreditCard.java" />
         <Loc hash="2046383933" locRef="48" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/nbank/Customer.java" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/nbank/Customer.java" />
         <Loc hash="-249228641" locRef="49" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/nbank/DepositTransaction.java" totLns="24" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/nbank/DepositTransaction.java" />
         <Loc hash="1398902534" locRef="50" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/nbank/ITransaction.java" totLns="25" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/nbank/ITransaction.java" />
         <Loc hash="-179143843" locRef="51" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/nbank/LogAccountInfo.java" totLns="48" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/nbank/LogAccountInfo.java" />
         <Loc hash="-1206559161" locRef="52" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/nbank/WithdrawalTransaction.java" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/nbank/WithdrawalTransaction.java" />
         <Loc hash="-981357238" locRef="53" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/queue/Queue.java" totLns="83" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/queue/Queue.java" />
         <Loc hash="-1145404863" locRef="54" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/security/InputValidation.java" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/security/InputValidation.java" />
         <Loc hash="-1999350871" locRef="55" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/servlets/ExampleServlet.java" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/servlets/ExampleServlet.java" />
         <Loc hash="1553680728" locRef="56" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/stackmachine/AbstractStackMachine.java" totLns="123" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/stackmachine/AbstractStackMachine.java" />
         <Loc hash="-1581767335" locRef="57" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/stackmachine/CommandLineStackMachine.java" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/stackmachine/CommandLineStackMachine.java" />
         <Loc hash="1782082961" locRef="58" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/stackmachine/CustomListRenderer.java" totLns="30" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/stackmachine/CustomListRenderer.java" />
         <Loc hash="-726989549" locRef="59" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/stackmachine/FifoStackMachine.java" totLns="39" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/stackmachine/FifoStackMachine.java" />
         <Loc hash="-1559173645" locRef="60" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/stackmachine/LifoStackMachine.java" totLns="39" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/stackmachine/LifoStackMachine.java" />
         <Loc hash="-339219917" locRef="61" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/stackmachine/RunnableStackMachine.java" totLns="396" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/stackmachine/RunnableStackMachine.java" />
         <Loc hash="963698942" locRef="62" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/stackmachine/StackInterface.java" totLns="26" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/stackmachine/StackInterface.java" />
         <Loc hash="-1082942404" locRef="63" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/stackmachine/StackList.java" totLns="100" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/stackmachine/StackList.java" />
         <Loc hash="-2129128806" locRef="64" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/suppress/AllFileSuppress.java" totLns="13" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/suppress/AllFileSuppress.java" />
         <Loc hash="2004133938" locRef="65" projId="demo" projPath="/demo" project="demo" resProjPath="src/main/java/examples/suppress/Example.java" totLns="10" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/main/java/examples/suppress/Example.java" />
         <Loc hash="623770480" locRef="66" projId="demo" projPath="/demo" project="demo" resProjPath="src/test/java/examples/junit/MoneyBagParameterizedTest.java" totLns="75" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/test/java/examples/junit/MoneyBagParameterizedTest.java" />
         <Loc hash="-1290590071" locRef="67" projId="demo" projPath="/demo" project="demo" resProjPath="src/test/java/examples/junit/MoneyTest.java" totLns="260" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/test/java/examples/junit/MoneyTest.java" />
         <Loc hash="-1095385538" locRef="68" projId="demo" projPath="/demo" project="demo" resProjPath="src/test/java/examples/junit/NaiveStringBuilderParameterizedTest.java" totLns="52" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/test/java/examples/junit/NaiveStringBuilderParameterizedTest.java" />
         <Loc hash="-1619358957" locRef="69" projId="demo" projPath="/demo" project="demo" resProjPath="src/test/java/examples/mock/ConstructorExampleTest.java" totLns="41" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/test/java/examples/mock/ConstructorExampleTest.java" />
         <Loc hash="-644754988" locRef="70" projId="demo" projPath="/demo" project="demo" resProjPath="src/test/java/examples/mock/FileExampleTest.java" totLns="45" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/test/java/examples/mock/FileExampleTest.java" />
         <Loc hash="2124704454" locRef="71" projId="demo" projPath="/demo" project="demo" resProjPath="src/test/java/examples/mock/InterpreterTest.java" totLns="50" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/test/java/examples/mock/InterpreterTest.java" />
         <Loc hash="-78929844" locRef="72" projId="demo" projPath="/demo" project="demo" resProjPath="src/test/java/examples/servlets/ExampleServletTest.java" totLns="111" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/src/test/java/examples/servlets/ExampleServletTest.java" />
         <Loc hash="176853002" locRef="73" projId="demo" projPath="/demo" project="demo" resProjPath="META-INF/MANIFEST.MF" totLns="4" uri="file://CHINCHILLA/C:/cygwin64/home/kmarczyk/workspaces/parasoftFindingsPlugin/jtest-examples/META-INF/MANIFEST.MF" />
      </Locations>
   </Scope>
   
  <SetupProblems>
    <Problem msg="The &quot;Security Rules&quot; feature is not licensed. The reported results may be incomplete. The following rules that are specified in your test configuration were not executed:" sev="1" totErrs="1" type="LicensingSetupProblem">
      <ErrorList>
        <Error val="BD.SECURITY.BUFEXP, BD.SECURITY.CANPATH, BD.SECURITY.FPEXC, BD.SECURITY.PRIVIL, BD.SECURITY.REMTMP, BD.SECURITY.SENS, BD.SECURITY.SIGCLASS, BD.SECURITY.SSSD, BD.SECURITY.TDCMD, BD.SECURITY.TDDIG, BD.SECURITY.TDENV, BD.SECURITY.TDFILES, BD.SECURITY.TDFNAMES, BD.SECURITY.TDINPUT, BD.SECURITY.TDJXPATH, BD.SECURITY.TDLDAP, BD.SECURITY.TDLIB, BD.SECURITY.TDLOG, BD.SECURITY.TDNET, BD.SECURITY.TDRESP, BD.SECURITY.TDRFL, BD.SECURITY.TDSQL, BD.SECURITY.TDXML, BD.SECURITY.TDXPATH, BD.SECURITY.TDXSS, BD.SECURITY.XMLVAL" />
      </ErrorList>
    </Problem>
  </SetupProblems>

   <CodingStandards ownerId="com.parasoft.xtest.checkers.api.standards" time="0:00:04">
      <Projects>
         <Project bdCheckedFiles="0" bdTotalFiles="0" checkedFiles="73" checkedLns="4337" id="demo" name="demo" qfixErrs="0" suppErrs="0" totErrs="64" totFiles="73" totLns="4337" />
      </Projects>
      
      
      <Rules>
         <CategoriesList>
            <Category authTot="0;0;0;0;" authUrg="0;0;0;0;" desc="Flow Analysis" name="BD" rules="68" total="0">
               <Category authTot="0;0;0;0;" authUrg="0;0;0;0;" desc="API" name="BD.API" rules="3" total="0" />
               <Category authTot="22;1;3;1;" authUrg="20;1;3;1;" desc="Possible Bugs" name="BD.PB" rules="22" total="27" />
               <Category authTot="12;0;3;0;" authUrg="10;0;3;0;" desc="Resources" name="BD.RES" rules="2" total="15" />
               <Category authTot="5;0;0;0;" authUrg="5;0;0;0;" desc="Optimization" name="BD.OPT" rules="3" total="5" />
               <Category authTot="0;0;0;0;" authUrg="0;0;0;0;" desc="Threads &amp; Synchronization" name="BD.TRS" rules="6" total="0" />
               <Category authTot="4;0;0;0;" authUrg="4;0;0;0;" desc="Collections" name="BD.CO" rules="1" total="4" />
               <Category authTot="13;0;0;0;" authUrg="11;0;0;0;" desc="Exceptions" name="BD.EXCEPT" rules="1" total="13" />
            </Category>
         </CategoriesList>
         <RulesList>
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;0;0;" authUrg="0;0;0;0;" cat="BD.API" desc="Make sure implementation of Object.equals(Object) properly handles null values" id="BD.API.EQNULL" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;0;0;" authUrg="0;0;0;0;" cat="BD.API" desc="Make sure implementation of Object.equals(Object) is reflexive" id="BD.API.EQREFL" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;0;0;" authUrg="0;0;0;0;" cat="BD.API" desc="Do not rely on the write() method to output integers outside the range 0 to 255" id="BD.API.ARGWRITE" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="4;0;0;0;" authUrg="4;0;0;0;" cat="BD.CO" desc="Do not modify collection while iterating over it" id="BD.CO.ITMOD" sev="1" total="4" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="13;0;0;0;" authUrg="11;0;0;0;" cat="BD.EXCEPT" desc="Avoid NullPointerException" id="BD.EXCEPT.NP" sev="1" total="13" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="3;0;0;0;" authUrg="3;0;0;0;" cat="BD.OPT" desc="Avoid inefficient removal of Collection elements" id="BD.OPT.INEFCOL" sev="3" total="3" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="1;0;0;0;" authUrg="1;0;0;0;" cat="BD.OPT" desc="Avoid inefficient iteration over Map entries" id="BD.OPT.INEFMAP" sev="3" total="1" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="1;0;0;0;" authUrg="1;0;0;0;" cat="BD.OPT" desc="Avoid inefficient removal of Map entries" id="BD.OPT.INEFMAPRM" sev="3" total="1" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;0;0;" authUrg="0;0;0;0;" cat="BD.PB" desc="Avoid unvalidated input in array indexes" id="BD.PB.ARRAYINP" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="2;0;0;0;" authUrg="1;0;0;0;" cat="BD.PB" desc="Avoid use before explicit initialization" id="BD.PB.NOTEXPLINIT" sev="1" total="2" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="1;0;0;0;" authUrg="0;0;0;0;" cat="BD.PB" desc="Avoid use of fields before initialization in constructors and static initializers" id="BD.PB.NOTINITCTOR" sev="1" total="1" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;0;0;" authUrg="0;0;0;0;" cat="BD.PB" desc="Avoid overwriting method parameters before each use" id="BD.PB.POVR" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="1;0;0;0;" authUrg="1;0;0;0;" cat="BD.PB" desc="Do not append null value to strings" id="BD.PB.STRNULL" sev="1" total="1" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="1;0;0;0;" authUrg="1;0;0;0;" cat="BD.PB" desc="Avoid division by zero" id="BD.PB.ZERO" sev="1" total="1" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;0;0;" authUrg="0;0;0;0;" cat="BD.PB" desc="Avoid accessing arrays out of bounds" id="BD.PB.ARRAY" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;0;0;" authUrg="0;0;0;0;" cat="BD.PB" desc="Avoid incorrect shift operations" id="BD.PB.BADSHIFT" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="5;1;2;0;" authUrg="5;1;2;0;" cat="BD.PB" desc="Avoid conditions that always evaluate to the same value" id="BD.PB.CC" sev="2" total="8" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;1;0;" authUrg="0;0;1;0;" cat="BD.PB" desc="Always catch exceptions" id="BD.PB.EXCEPT" sev="2" total="1" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;0;0;" authUrg="0;0;0;0;" cat="BD.PB" desc="Method getPermission() is supposed to be invoked when user-defined class loaders are applied" id="BD.PB.GETPERM" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;0;0;" authUrg="0;0;0;0;" cat="BD.PB" desc="Do not create multiple buffered wrappers on a single byte or character stream" id="BD.PB.MULBUF" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;0;0;" authUrg="0;0;0;0;" cat="BD.PB" desc="Do not invoke overridable methods from the readObject() method" id="BD.PB.VREADOBJ" sev="2" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;0;0;" authUrg="0;0;0;0;" cat="BD.PB" desc="Do not check for null after dereferencing" id="BD.PB.DEREF" sev="3" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;0;1;" authUrg="0;0;0;1;" cat="BD.PB" desc="Prevent external processes from blocking on input and output streams" id="BD.PB.PBIOS" sev="3" total="1" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="1;0;0;0;" authUrg="1;0;0;0;" cat="BD.PB" desc="Avoid switch with unreachable branches" id="BD.PB.SWITCH" sev="3" total="1" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="11;0;0;0;" authUrg="11;0;0;0;" cat="BD.PB" desc="Avoid unused values" id="BD.PB.VOVR" sev="3" total="11" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;0;0;" authUrg="0;0;0;0;" cat="BD.RES" desc="Do not use resources that have been freed" id="BD.RES.FREE" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="12;0;3;0;" authUrg="10;0;3;0;" cat="BD.RES" desc="Ensure resources are deallocated" id="BD.RES.LEAKS" sev="1" total="15" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;0;0;" authUrg="0;0;0;0;" cat="BD.TRS" desc="Variable should be used in context of single critical section" id="BD.TRS.DIFCS" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;0;0;" authUrg="0;0;0;0;" cat="BD.TRS" desc="Avoid double locking" id="BD.TRS.DLOCK" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;0;0;" authUrg="0;0;0;0;" cat="BD.TRS" desc="Do not abandon unreleased locks" id="BD.TRS.LOCK" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;0;0;" authUrg="0;0;0;0;" cat="BD.TRS" desc="Do not acquire locks in different order" id="BD.TRS.ORDER" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;0;0;" authUrg="0;0;0;0;" cat="BD.TRS" desc="Do not use blocking methods while holding a lock" id="BD.TRS.TSHL" sev="1" total="0" />
            <Rule analyzer="com.parasoft.jtest.flowanalyzer" authTot="0;0;0;0;" authUrg="0;0;0;0;" cat="BD.TRS" desc="Do not use an instance lock to protect shared static data" id="BD.TRS.INSTLOCK" sev="2" total="0" />
         </RulesList>
         <SeverityList>
            <Severity authTot="34;0;3;0;" authUrg="28;0;3;0;" id="1" total="37" />
            <Severity authTot="5;1;3;0;" authUrg="5;1;3;0;" id="2" total="9" />
            <Severity authTot="17;0;0;1;" authUrg="17;0;0;1;" id="3" total="18" />
         </SeverityList>
      </Rules>
      
  <Supps />

      
  <StdViols>
    <FlowViol msg="Security context not disposed: context" ln="14" locFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" ruleSAFMsg="Point where the allocated resource is lost" FirstElSrcRngEndPos="80" auth="kmarczyk" FirstElSrcRngEndLn="10" rule="BD.RES.LEAKS" FirstElSrcRngStartPos="12" lnHash="2103670358" ruleSCSCMsg="Point where the resource is allocated" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" rule.header="Ensure resources are deallocated" FirstElSrcRngStartln="10" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="-113896619" lang="java" locEndPos="9" urgent="true" locEndLn="14" goals="1," locStartln="14" sev="1" locRef="2" tool="jtest" lineHash="2103670358" locType="sr" hash="1860787879" causeLocRef="2">
      <Props>
        <Prop key="Tracked variables" val="Allocated resource variable" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="263012191" locType="sr" srcRnghash="1860787879" locRef="2" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" srcRngEndLn="10" ln="10" srcRngEndPos="80" srcRngStartln="10" srcRngStartPos="12" desc="GSSContext context = GSSManager.getInstance().createContext(tokens);" ElType=".C" rngLn="10">
          <Props>
            <Prop key="Tracked variables" val="context" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is allocated" kind="cause" />
            <Ann msg="Allocated resource variable: context" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1084133542" locType="sr" srcRnghash="1860787879" locRef="2" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" srcRngEndLn="11" ln="11" srcRngEndPos="45" srcRngStartln="11" srcRngStartPos="12" desc="byte[] inputBuff = new byte[256];" ElType="." rngLn="11" />
        <ElDesc lineHash="-852100649" locType="sr" srcRnghash="1860787879" locRef="2" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" srcRngEndLn="12" ln="12" srcRngEndPos="54" srcRngStartln="12" srcRngStartPos="12" desc="context.initSecContext(inputBuff, 0, 256);" ElType="!E" rngLn="12" thrownTypes="GSSException" throwingMethod="GSSContext.initSecContext">
          <Anns>
            <Ann msg="GSSContext.initSecContext() throws GSSException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2103670358" locType="sr" srcRnghash="1860787879" locRef="2" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" srcRngEndLn="14" ln="14" srcRngEndPos="9" srcRngStartln="14" srcRngStartPos="8" desc="}" ElType=".P" rngLn="14">
          <Props>
            <Prop key="Tracked variables" val="context" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: context" kind="var" />
            <Ann msg="Point where the allocated resource is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;context&quot; may possibly be null" ln="30" locFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="34" auth="kmarczyk" FirstElSrcRngEndLn="20" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="-1273380230" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="20" locStartPos="16" analyzer="com.parasoft.jtest.flowanalyzer" id="-941851846" lang="java" locEndPos="34" urgent="true" locEndLn="30" goals="1," locStartln="30" sev="1" locRef="2" tool="jtest" lineHash="-1273380230" locType="sr" hash="1860787879" causeLocRef="2">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-1434008792" locType="sr" srcRnghash="1860787879" locRef="2" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" srcRngEndLn="20" ln="20" srcRngEndPos="34" srcRngStartln="20" srcRngStartPos="8" desc="GSSContext context = null;" ElType=".C" rngLn="20">
          <Props>
            <Prop key="Tracked variables" val="context" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: context" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1900478135" locType="sr" srcRnghash="1860787879" locRef="2" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" srcRngEndLn="22" ln="22" srcRngEndPos="68" srcRngStartln="22" srcRngStartPos="12" desc="context = GSSManager.getInstance().createContext(tokens)" ElType="!E" rngLn="22" thrownTypes="GSSException" throwingMethod="GSSManager.createContext">
          <Anns>
            <Ann msg="GSSManager.createContext() throws GSSException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2103670358" locType="sr" srcRnghash="1860787879" locRef="2" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" srcRngEndLn="26" ln="26" srcRngEndPos="32" srcRngStartln="26" srcRngStartPos="10" desc="catch (Exception ioe)" ElType="." rngLn="26" />
        <ElDesc lineHash="1266022184" locType="sr" srcRnghash="1860787879" locRef="2" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" srcRngEndLn="27" ln="27" srcRngEndPos="60" srcRngStartln="27" srcRngStartPos="12" desc="System.out.println(&quot;Exception occured: &quot; + ioe);" ElType="." rngLn="27" />
        <ElDesc lineHash="-1273380230" locType="sr" srcRnghash="1860787879" locRef="2" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" srcRngEndLn="30" ln="30" srcRngEndPos="34" srcRngStartln="30" srcRngStartPos="16" desc="context.dispose();" ElType=".P" rngLn="30">
          <Props>
            <Prop key="Tracked variables" val="context" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: context" kind="var" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Image resource not closed: imgReader" ln="16" locFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" ruleSAFMsg="Point where the allocated resource is lost" FirstElSrcRngEndPos="63" auth="kmarczyk" FirstElSrcRngEndLn="14" rule="BD.RES.LEAKS" FirstElSrcRngStartPos="12" lnHash="100324464" ruleSCSCMsg="Point where the resource is allocated" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" rule.header="Ensure resources are deallocated" FirstElSrcRngStartln="14" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="2074592414" lang="java" locEndPos="9" urgent="true" locEndLn="16" goals="1," locStartln="16" sev="1" locRef="3" tool="jtest" lineHash="100324464" locType="sr" hash="1088242968" causeLocRef="3">
      <Props>
        <Prop key="Tracked variables" val="Allocated resource variable" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-2075299321" locType="sr" srcRnghash="1088242968" locRef="3" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" srcRngEndLn="12" ln="12" srcRngEndPos="27" srcRngStartln="12" srcRngStartPos="8" desc="Image image = null;" ElType="." rngLn="12" />
        <ElDesc lineHash="-442960859" locType="sr" srcRnghash="1088242968" locRef="3" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" srcRngEndLn="14" ln="14" srcRngEndPos="63" srcRngStartln="14" srcRngStartPos="12" desc="ImageReader imgReader = spi.createReaderInstance();" ElType=".C" rngLn="14">
          <Props>
            <Prop key="Tracked variables" val="imgReader" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is allocated" kind="cause" />
            <Ann msg="Allocated resource variable: imgReader" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1833758656" locType="sr" srcRnghash="1088242968" locRef="3" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" srcRngEndLn="15" ln="15" srcRngEndPos="37" srcRngStartln="15" srcRngStartPos="12" desc="image = imgReader.read(0)" ElType="!E" rngLn="15" thrownTypes="IOException" throwingMethod="ImageReader.read">
          <Anns>
            <Ann msg="ImageReader.read() throws IOException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="100324464" locType="sr" srcRnghash="1088242968" locRef="3" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" srcRngEndLn="16" ln="16" srcRngEndPos="9" srcRngStartln="16" srcRngStartPos="8" desc="}" ElType=".P" rngLn="16">
          <Props>
            <Prop key="Tracked variables" val="imgReader" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: imgReader" kind="var" />
            <Ann msg="Point where the allocated resource is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;imgReader&quot; may possibly be null" ln="31" locFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="37" auth="kmarczyk" FirstElSrcRngEndLn="24" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="-281777821" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="24" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-1398370375" lang="java" locEndPos="32" urgent="true" locEndLn="31" goals="1," locStartln="31" sev="1" locRef="3" tool="jtest" lineHash="-281777821" locType="sr" hash="1088242968" causeLocRef="3">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-2075299321" locType="sr" srcRnghash="1088242968" locRef="3" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" srcRngEndLn="23" ln="23" srcRngEndPos="27" srcRngStartln="23" srcRngStartPos="8" desc="Image image = null;" ElType="." rngLn="23" />
        <ElDesc lineHash="1423331445" locType="sr" srcRnghash="1088242968" locRef="3" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" srcRngEndLn="24" ln="24" srcRngEndPos="37" srcRngStartln="24" srcRngStartPos="8" desc="ImageReader imgReader = null;" ElType=".C" rngLn="24">
          <Props>
            <Prop key="Tracked variables" val="imgReader" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: imgReader" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="379037799" locType="sr" srcRnghash="1088242968" locRef="3" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" srcRngEndLn="26" ln="26" srcRngEndPos="50" srcRngStartln="26" srcRngStartPos="12" desc="imgReader = spi.createReaderInstance()" ElType="!E" rngLn="26" thrownTypes="IOException" throwingMethod="ImageReaderSpi.createReaderInstance">
          <Anns>
            <Ann msg="ImageReaderSpi.createReaderInstance() throws IOException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="100324464" locType="sr" srcRnghash="1088242968" locRef="3" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" srcRngEndLn="28" ln="28" srcRngEndPos="30" srcRngStartln="28" srcRngStartPos="10" desc="catch (Exception e)" ElType="." rngLn="28" />
        <ElDesc lineHash="957734862" locType="sr" srcRnghash="1088242968" locRef="3" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" srcRngEndLn="29" ln="29" srcRngEndPos="58" srcRngStartln="29" srcRngStartPos="12" desc="System.out.println(&quot;Exception occured: &quot; + e);" ElType="." rngLn="29" />
        <ElDesc lineHash="-281777821" locType="sr" srcRnghash="1088242968" locRef="3" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" srcRngEndLn="31" ln="31" srcRngEndPos="32" srcRngStartln="31" srcRngStartPos="12" desc="imgReader.dispose();" ElType=".P" rngLn="31">
          <Props>
            <Prop key="Tracked variables" val="imgReader" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: imgReader" kind="var" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Logging handler not closed: handler" ln="13" locFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseLogging.java" ruleSAFMsg="Point where the allocated resource is lost" FirstElSrcRngEndPos="53" auth="kmarczyk" FirstElSrcRngEndLn="10" rule="BD.RES.LEAKS" FirstElSrcRngStartPos="33" lnHash="30537853" ruleSCSCMsg="Point where the resource is allocated" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseLogging.java" rule.header="Ensure resources are deallocated" FirstElSrcRngStartln="10" locStartPos="4" analyzer="com.parasoft.jtest.flowanalyzer" id="1855775880" lang="java" locEndPos="5" locEndLn="13" goals="0," locStartln="13" sev="1" locRef="4" tool="jtest" lineHash="30537853" locType="sr" hash="-89489575" causeLocRef="4">
      <Props>
        <Prop key="Tracked variables" val="Allocated resource variable" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-653749919" locType="sr" srcRnghash="-89489575" locRef="4" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseLogging.java" srcRngEndLn="10" ln="10" srcRngEndPos="54" srcRngStartln="10" srcRngStartPos="8" desc="ConsoleHandler handler = new ConsoleHandler();" ElType=".C" rngLn="10">
          <Props>
            <Prop key="Tracked variables" val="new ConsoleHandler()" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is allocated" kind="cause" />
            <Ann msg="Allocated resource variable: new ConsoleHandler()" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="552956635" locType="sr" srcRnghash="-89489575" locRef="4" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseLogging.java" srcRngEndLn="11" ln="11" srcRngEndPos="57" srcRngStartln="11" srcRngStartPos="8" desc="LogRecord record = new LogRecord(level, message);" ElType="." rngLn="11">
          <Props>
            <Prop key="Tracked variables" val="handler" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: handler" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="495744864" locType="sr" srcRnghash="-89489575" locRef="4" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseLogging.java" srcRngEndLn="12" ln="12" srcRngEndPos="32" srcRngStartln="12" srcRngStartPos="8" desc="handler.publish(record);" ElType="." rngLn="12" />
        <ElDesc lineHash="30537853" locType="sr" srcRnghash="-89489575" locRef="4" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseLogging.java" srcRngEndLn="13" ln="13" srcRngEndPos="5" srcRngStartln="13" srcRngStartPos="4" desc="}" ElType=".P" rngLn="13">
          <Props>
            <Prop key="Tracked variables" val="handler" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: handler" kind="var" />
            <Ann msg="Point where the allocated resource is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Value of &quot;read&quot; is never used" ln="16" locFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" ruleSAFMsg="Point where value is declared" FirstElSrcRngEndPos="41" auth="kmarczyk" FirstElSrcRngEndLn="16" rule="BD.PB.VOVR" FirstElSrcRngStartPos="12" lnHash="1533291916" ruleSCSCMsg="Point where value is overwritten" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" rule.header="Avoid unused values" FirstElSrcRngStartln="16" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-948361459" lang="java" locEndPos="41" urgent="true" locEndLn="16" goals="1," locStartln="16" sev="3" locRef="5" tool="jtest" lineHash="1533291916" locType="sr" hash="1710944294" causeLocRef="5">
      <Props />
      <ElDescList>
        <ElDesc lineHash="1533291916" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" srcRngEndLn="16" ln="16" srcRngEndPos="41" srcRngStartln="16" srcRngStartPos="12" desc="int read = channel.read(dst);" ElType="CP" rngLn="16">
          <Anns>
            <Ann msg="Point where value is overwritten" kind="cause" />
            <Ann msg="Point where value is declared" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Stream not closed: fInput, &lt;FileInputStream referenced by channel>, &lt;FileInputStream referenced by fInput.getChannel()>" ln="18" locFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" ruleSAFMsg="Point where the allocated resource is lost" FirstElSrcRngEndPos="66" auth="kmarczyk" FirstElSrcRngEndLn="13" rule="BD.RES.LEAKS" FirstElSrcRngStartPos="37" lnHash="2103670358" ruleSCSCMsg="Point where the resource is allocated" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" rule.header="Ensure resources are deallocated" FirstElSrcRngStartln="13" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="-1572558337" lang="java" locEndPos="9" urgent="true" locEndLn="18" goals="1," locStartln="18" sev="1" locRef="5" tool="jtest" lineHash="2103670358" locType="sr" hash="1710944294" causeLocRef="5">
      <Props>
        <Prop key="Tracked variables" val="Allocated resource variable" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-408098528" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" srcRngEndLn="13" ln="13" srcRngEndPos="67" srcRngStartln="13" srcRngStartPos="12" desc="FileInputStream fInput = new FileInputStream(filename);" ElType=".C" rngLn="13">
          <Props>
            <Prop key="Tracked variables" val="new FileInputStream(filename)" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is allocated" kind="cause" />
            <Ann msg="Allocated resource variable: new FileInputStream(filename)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1002974916" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" srcRngEndLn="14" ln="14" srcRngEndPos="54" srcRngStartln="14" srcRngStartPos="12" desc="FileChannel channel = fInput.getChannel();" ElType="!" rngLn="14">
          <Props>
            <Prop key="Tracked variables" val="fInput" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: fInput" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="526245805" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" srcRngEndLn="15" ln="15" srcRngEndPos="54" srcRngStartln="15" srcRngStartPos="12" desc="ByteBuffer dst = ByteBuffer.allocate(512);" ElType="." rngLn="15">
          <Props>
            <Prop key="Tracked variables" val="fInput, &lt;FileInputStream referenced by channel>, &lt;FileInputStream referenced by fInput.getChannel()>" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: fInput, &lt;FileInputStream referenced by channel>, &lt;FileInputStream referenced by fInput.getChannel()>" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1533291916" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" srcRngEndLn="16" ln="16" srcRngEndPos="41" srcRngStartln="16" srcRngStartPos="12" desc="int read = channel.read(dst);" ElType="!E" rngLn="16" thrownTypes="IOException" throwingMethod="FileChannel.read">
          <Anns>
            <Ann msg="FileChannel.read() throws IOException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2103670358" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" srcRngEndLn="18" ln="18" srcRngEndPos="9" srcRngStartln="18" srcRngStartPos="8" desc="}" ElType=".P" rngLn="18">
          <Props>
            <Prop key="Tracked variables" val="fInput, &lt;FileInputStream referenced by channel>, &lt;FileInputStream referenced by fInput.getChannel()>" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: fInput, &lt;FileInputStream referenced by channel>, &lt;FileInputStream referenced by fInput.getChannel()>" kind="var" />
            <Ann msg="Point where the allocated resource is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="NIO channel not closed: &lt;FileInputStream referenced by channel>.getChannel(), fInput.getChannel(), channel" ln="18" locFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" ruleSAFMsg="Point where the allocated resource is lost" FirstElSrcRngEndPos="54" auth="kmarczyk" FirstElSrcRngEndLn="14" rule="BD.RES.LEAKS" FirstElSrcRngStartPos="12" lnHash="2103670358" ruleSCSCMsg="Point where the resource is allocated" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" rule.header="Ensure resources are deallocated" FirstElSrcRngStartln="14" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="1069730857" lang="java" locEndPos="9" urgent="true" locEndLn="18" goals="1," locStartln="18" sev="1" locRef="5" tool="jtest" lineHash="2103670358" locType="sr" hash="1710944294" causeLocRef="5">
      <Props>
        <Prop key="Tracked variables" val="Allocated resource variable" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-408098528" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" srcRngEndLn="13" ln="13" srcRngEndPos="67" srcRngStartln="13" srcRngStartPos="12" desc="FileInputStream fInput = new FileInputStream(filename);" ElType="." rngLn="13" />
        <ElDesc lineHash="-1002974916" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" srcRngEndLn="14" ln="14" srcRngEndPos="54" srcRngStartln="14" srcRngStartPos="12" desc="FileChannel channel = fInput.getChannel();" ElType=".C" rngLn="14">
          <Props>
            <Prop key="Tracked variables" val="&lt;FileInputStream referenced by channel>.getChannel(), fInput.getChannel(), channel" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is allocated" kind="cause" />
            <Ann msg="Allocated resource variable: &lt;FileInputStream referenced by channel>.getChannel(), fInput.getChannel(), channel" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="526245805" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" srcRngEndLn="15" ln="15" srcRngEndPos="54" srcRngStartln="15" srcRngStartPos="12" desc="ByteBuffer dst = ByteBuffer.allocate(512);" ElType="." rngLn="15" />
        <ElDesc lineHash="1533291916" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" srcRngEndLn="16" ln="16" srcRngEndPos="41" srcRngStartln="16" srcRngStartPos="12" desc="int read = channel.read(dst);" ElType="!E" rngLn="16" thrownTypes="IOException" throwingMethod="FileChannel.read">
          <Anns>
            <Ann msg="FileChannel.read() throws IOException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2103670358" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" srcRngEndLn="18" ln="18" srcRngEndPos="9" srcRngStartln="18" srcRngStartPos="8" desc="}" ElType=".P" rngLn="18">
          <Props>
            <Prop key="Tracked variables" val="&lt;FileInputStream referenced by channel>.getChannel(), fInput.getChannel(), channel" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: &lt;FileInputStream referenced by channel>.getChannel(), fInput.getChannel(), channel" kind="var" />
            <Ann msg="Point where the allocated resource is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Value of &quot;read&quot; is never used" ln="29" locFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" ruleSAFMsg="Point where value is declared" FirstElSrcRngEndPos="41" auth="kmarczyk" FirstElSrcRngEndLn="29" rule="BD.PB.VOVR" FirstElSrcRngStartPos="12" lnHash="1533291916" ruleSCSCMsg="Point where value is overwritten" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" rule.header="Avoid unused values" FirstElSrcRngStartln="29" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-948361459" lang="java" locEndPos="41" urgent="true" locEndLn="29" goals="1," locStartln="29" sev="3" locRef="5" tool="jtest" lineHash="1533291916" locType="sr" hash="1710944294" causeLocRef="5">
      <Props />
      <ElDescList>
        <ElDesc lineHash="1533291916" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" srcRngEndLn="29" ln="29" srcRngEndPos="41" srcRngStartln="29" srcRngStartPos="12" desc="int read = channel.read(dst);" ElType="CP" rngLn="29">
          <Anns>
            <Ann msg="Point where value is overwritten" kind="cause" />
            <Ann msg="Point where value is declared" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;channel&quot; may possibly be null" ln="35" locFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="35" auth="kmarczyk" FirstElSrcRngEndLn="24" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="843047661" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="24" locStartPos="16" analyzer="com.parasoft.jtest.flowanalyzer" id="1448064785" lang="java" locEndPos="32" urgent="true" locEndLn="35" goals="1," locStartln="35" sev="1" locRef="5" tool="jtest" lineHash="843047661" locType="sr" hash="1710944294" causeLocRef="5">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1200399739" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" srcRngEndLn="24" ln="24" srcRngEndPos="35" srcRngStartln="24" srcRngStartPos="8" desc="FileChannel channel = null;" ElType=".C" rngLn="24">
          <Props>
            <Prop key="Tracked variables" val="channel" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: channel" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-408098528" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" srcRngEndLn="26" ln="26" srcRngEndPos="66" srcRngStartln="26" srcRngStartPos="37" desc="new FileInputStream(filename)" ElType="!E" rngLn="26" thrownTypes="FileNotFoundException" throwingMethod="FileInputStream.FileInputStream">
          <Anns>
            <Ann msg="FileInputStream.FileInputStream() throws FileNotFoundException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2103670358" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" srcRngEndLn="31" ln="31" srcRngEndPos="32" srcRngStartln="31" srcRngStartPos="10" desc="catch (Exception ioe)" ElType="." rngLn="31" />
        <ElDesc lineHash="1266022184" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" srcRngEndLn="32" ln="32" srcRngEndPos="60" srcRngStartln="32" srcRngStartPos="12" desc="System.out.println(&quot;Exception occured: &quot; + ioe);" ElType="." rngLn="32" />
        <ElDesc lineHash="843047661" locType="sr" srcRnghash="1710944294" locRef="5" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" srcRngEndLn="35" ln="35" srcRngEndPos="32" srcRngStartln="35" srcRngStartPos="16" desc="channel.close();" ElType=".P" rngLn="35">
          <Props>
            <Prop key="Tracked variables" val="channel" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: channel" kind="var" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Value of &quot;read&quot; is never used" ln="12" locFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" ruleSAFMsg="Point where value is declared" FirstElSrcRngEndPos="61" auth="kmarczyk" FirstElSrcRngEndLn="12" rule="BD.PB.VOVR" FirstElSrcRngStartPos="12" lnHash="609178338" ruleSCSCMsg="Point where value is overwritten" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" rule.header="Avoid unused values" FirstElSrcRngStartln="12" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-948361463" lang="java" locEndPos="61" urgent="true" locEndLn="12" goals="1," locStartln="12" sev="3" locRef="6" tool="jtest" lineHash="609178338" locType="sr" hash="-1842798386" causeLocRef="6">
      <Props />
      <ElDescList>
        <ElDesc lineHash="609178338" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" srcRngEndLn="12" ln="12" srcRngEndPos="61" srcRngStartln="12" srcRngStartPos="12" desc="int read = raf.read(bytes, offset, bytes.length);" ElType="CP" rngLn="12">
          <Anns>
            <Ann msg="Point where value is overwritten" kind="cause" />
            <Ann msg="Point where value is declared" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="File not closed: raf" ln="14" locFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" ruleSAFMsg="Point where the allocated resource is lost" FirstElSrcRngEndPos="73" auth="kmarczyk" FirstElSrcRngEndLn="10" rule="BD.RES.LEAKS" FirstElSrcRngStartPos="35" lnHash="100324464" ruleSCSCMsg="Point where the resource is allocated" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" rule.header="Ensure resources are deallocated" FirstElSrcRngStartln="10" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="-1664007899" lang="java" locEndPos="9" urgent="true" locEndLn="14" goals="1," locStartln="14" sev="1" locRef="6" tool="jtest" lineHash="100324464" locType="sr" hash="-1842798386" causeLocRef="6">
      <Props>
        <Prop key="Tracked variables" val="Allocated resource variable" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1121458434" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" srcRngEndLn="8" ln="8" srcRngEndPos="26" srcRngStartln="8" srcRngStartPos="8" desc="String res = null;" ElType="." rngLn="8" />
        <ElDesc lineHash="-1850530378" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" srcRngEndLn="10" ln="10" srcRngEndPos="74" srcRngStartln="10" srcRngStartPos="12" desc="RandomAccessFile raf = new RandomAccessFile(sFileName, sMode);" ElType=".C" rngLn="10">
          <Props>
            <Prop key="Tracked variables" val="new RandomAccessFile(sFileName, sMode)" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is allocated" kind="cause" />
            <Ann msg="Allocated resource variable: new RandomAccessFile(sFileName, sMode)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1113991407" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" srcRngEndLn="11" ln="11" srcRngEndPos="41" srcRngStartln="11" srcRngStartPos="12" desc="byte[] bytes = new byte[512];" ElType="." rngLn="11">
          <Props>
            <Prop key="Tracked variables" val="raf" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: raf" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="609178338" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" srcRngEndLn="12" ln="12" srcRngEndPos="61" srcRngStartln="12" srcRngStartPos="12" desc="int read = raf.read(bytes, offset, bytes.length);" ElType="!E" rngLn="12" thrownTypes="IOException" throwingMethod="RandomAccessFile.read">
          <Anns>
            <Ann msg="RandomAccessFile.read() throws IOException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="100324464" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" srcRngEndLn="14" ln="14" srcRngEndPos="9" srcRngStartln="14" srcRngStartPos="8" desc="}" ElType=".P" rngLn="14">
          <Props>
            <Prop key="Tracked variables" val="raf" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: raf" kind="var" />
            <Ann msg="Point where the allocated resource is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Value of &quot;read&quot; is never used" ln="26" locFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" ruleSAFMsg="Point where value is declared" FirstElSrcRngEndPos="61" auth="kmarczyk" FirstElSrcRngEndLn="26" rule="BD.PB.VOVR" FirstElSrcRngStartPos="12" lnHash="609178338" ruleSCSCMsg="Point where value is overwritten" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" rule.header="Avoid unused values" FirstElSrcRngStartln="26" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-948361463" lang="java" locEndPos="61" urgent="true" locEndLn="26" goals="1," locStartln="26" sev="3" locRef="6" tool="jtest" lineHash="609178338" locType="sr" hash="-1842798386" causeLocRef="6">
      <Props />
      <ElDescList>
        <ElDesc lineHash="609178338" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" srcRngEndLn="26" ln="26" srcRngEndPos="61" srcRngStartln="26" srcRngStartPos="12" desc="int read = raf.read(bytes, offset, bytes.length);" ElType="CP" rngLn="26">
          <Anns>
            <Ann msg="Point where value is overwritten" kind="cause" />
            <Ann msg="Point where value is declared" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;raf&quot; may possibly be null" ln="32" locFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="36" auth="kmarczyk" FirstElSrcRngEndLn="22" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="216587865" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="22" locStartPos="16" analyzer="com.parasoft.jtest.flowanalyzer" id="-1047147865" lang="java" locEndPos="28" urgent="true" locEndLn="32" goals="1," locStartln="32" sev="1" locRef="6" tool="jtest" lineHash="216587865" locType="sr" hash="-1842798386" causeLocRef="6">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1121458434" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" srcRngEndLn="21" ln="21" srcRngEndPos="26" srcRngStartln="21" srcRngStartPos="8" desc="String res = null;" ElType="." rngLn="21" />
        <ElDesc lineHash="-1186737013" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" srcRngEndLn="22" ln="22" srcRngEndPos="36" srcRngStartln="22" srcRngStartPos="8" desc="RandomAccessFile raf = null;" ElType=".C" rngLn="22">
          <Props>
            <Prop key="Tracked variables" val="raf" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: raf" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1370866899" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" srcRngEndLn="24" ln="24" srcRngEndPos="56" srcRngStartln="24" srcRngStartPos="18" desc="new RandomAccessFile(sFileName, sMode)" ElType="!E" rngLn="24" thrownTypes="FileNotFoundException" throwingMethod="RandomAccessFile.RandomAccessFile">
          <Anns>
            <Ann msg="RandomAccessFile.RandomAccessFile() throws FileNotFoundException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="100324464" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" srcRngEndLn="28" ln="28" srcRngEndPos="30" srcRngStartln="28" srcRngStartPos="10" desc="catch (Exception e)" ElType="." rngLn="28" />
        <ElDesc lineHash="2082685994" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" srcRngEndLn="29" ln="29" srcRngEndPos="33" srcRngStartln="29" srcRngStartPos="12" desc="System.out.println();" ElType="." rngLn="29" />
        <ElDesc lineHash="216587865" locType="sr" srcRnghash="-1842798386" locRef="6" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" srcRngEndLn="32" ln="32" srcRngEndPos="28" srcRngStartln="32" srcRngStartPos="16" desc="raf.close();" ElType=".P" rngLn="32">
          <Props>
            <Prop key="Tracked variables" val="raf" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: raf" kind="var" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Value of &quot;sock&quot; is never used" ln="12" locFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" ruleSAFMsg="Point where value is declared" FirstElSrcRngEndPos="45" auth="kmarczyk" FirstElSrcRngEndLn="12" rule="BD.PB.VOVR" FirstElSrcRngStartPos="12" lnHash="-657680996" ruleSCSCMsg="Point where value is overwritten" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" rule.header="Avoid unused values" FirstElSrcRngStartln="12" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="261053279" lang="java" locEndPos="45" urgent="true" locEndLn="12" goals="1," locStartln="12" sev="3" locRef="7" tool="jtest" lineHash="-657680996" locType="sr" hash="-69784133" causeLocRef="7">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-657680996" locType="sr" srcRnghash="-69784133" locRef="7" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" srcRngEndLn="12" ln="12" srcRngEndPos="45" srcRngStartln="12" srcRngStartPos="12" desc="Socket sock = srvSocket.accept();" ElType="CP" rngLn="12">
          <Anns>
            <Ann msg="Point where value is overwritten" kind="cause" />
            <Ann msg="Point where value is declared" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Socket not closed: sock" ln="14" locFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" ruleSAFMsg="Point where the allocated resource is lost" FirstElSrcRngEndPos="45" auth="kmarczyk" FirstElSrcRngEndLn="12" rule="BD.RES.LEAKS" FirstElSrcRngStartPos="12" lnHash="2094668668" ruleSCSCMsg="Point where the resource is allocated" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" rule.header="Ensure resources are deallocated" FirstElSrcRngStartln="12" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="1318501917" lang="java" locEndPos="9" urgent="true" locEndLn="14" goals="1," locStartln="14" sev="1" locRef="7" tool="jtest" lineHash="2094668668" locType="sr" hash="-69784133" causeLocRef="7">
      <Props>
        <Prop key="Tracked variables" val="Allocated resource variable" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-657680996" locType="sr" srcRnghash="-69784133" locRef="7" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" srcRngEndLn="12" ln="12" srcRngEndPos="45" srcRngStartln="12" srcRngStartPos="12" desc="Socket sock = srvSocket.accept();" ElType=".C" rngLn="12">
          <Props>
            <Prop key="Tracked variables" val="sock" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is allocated" kind="cause" />
            <Ann msg="Allocated resource variable: sock" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2094668668" locType="sr" srcRnghash="-69784133" locRef="7" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" srcRngEndLn="14" ln="14" srcRngEndPos="9" srcRngStartln="14" srcRngStartPos="8" desc="}" ElType=".P" rngLn="14">
          <Props>
            <Prop key="Tracked variables" val="sock" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: sock" kind="var" />
            <Ann msg="Point where the allocated resource is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;sock&quot; may possibly be null" ln="28" locFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="27" auth="kmarczyk" FirstElSrcRngEndLn="20" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="1669608780" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="20" locStartPos="16" analyzer="com.parasoft.jtest.flowanalyzer" id="1532178496" lang="java" locEndPos="29" urgent="true" locEndLn="28" goals="1," locStartln="28" sev="1" locRef="7" tool="jtest" lineHash="1669608780" locType="sr" hash="-69784133" causeLocRef="7">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1379796226" locType="sr" srcRnghash="-69784133" locRef="7" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" srcRngEndLn="20" ln="20" srcRngEndPos="27" srcRngStartln="20" srcRngStartPos="8" desc="Socket sock = null;" ElType=".C" rngLn="20">
          <Props>
            <Prop key="Tracked variables" val="sock" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: sock" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="250633455" locType="sr" srcRnghash="-69784133" locRef="7" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" srcRngEndLn="22" ln="22" srcRngEndPos="37" srcRngStartln="22" srcRngStartPos="12" desc="sock = srvSocket.accept()" ElType="!E" rngLn="22" thrownTypes="IOException" throwingMethod="ServerSocket.accept">
          <Anns>
            <Ann msg="ServerSocket.accept() throws IOException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2094668668" locType="sr" srcRnghash="-69784133" locRef="7" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" srcRngEndLn="24" ln="24" srcRngEndPos="34" srcRngStartln="24" srcRngStartPos="10" desc="catch (IOException ioe)" ElType="." rngLn="24" />
        <ElDesc lineHash="1266022184" locType="sr" srcRnghash="-69784133" locRef="7" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" srcRngEndLn="25" ln="25" srcRngEndPos="60" srcRngStartln="25" srcRngStartPos="12" desc="System.out.println(&quot;Exception occured: &quot; + ioe);" ElType="." rngLn="25" />
        <ElDesc lineHash="1669608780" locType="sr" srcRnghash="-69784133" locRef="7" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" srcRngEndLn="28" ln="28" srcRngEndPos="29" srcRngStartln="28" srcRngStartPos="16" desc="sock.close();" ElType=".P" rngLn="28">
          <Props>
            <Prop key="Tracked variables" val="sock" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: sock" kind="var" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;encoder&quot; may possibly be null" ln="52" locFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="34" auth="kmarczyk" FirstElSrcRngEndLn="43" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="1289477876" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="43" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="1054785304" lang="java" locEndPos="28" urgent="true" locEndLn="52" goals="1," locStartln="52" sev="1" locRef="8" tool="jtest" lineHash="1289477876" locType="sr" hash="-1630627415" causeLocRef="8">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1358363122" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" srcRngEndLn="43" ln="43" srcRngEndPos="34" srcRngStartln="43" srcRngStartPos="8" desc="XMLEncoder encoder = null;" ElType=".C" rngLn="43">
          <Props>
            <Prop key="Tracked variables" val="encoder" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: encoder" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="529589572" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" srcRngEndLn="45" ln="45" srcRngEndPos="41" srcRngStartln="45" srcRngStartPos="22" desc="new XMLEncoder(out)" ElType="!E" rngLn="45" thrownTypes="IllegalArgumentException" throwingMethod="XMLEncoder.XMLEncoder">
          <Anns>
            <Ann msg="XMLEncoder.XMLEncoder() throws IllegalArgumentException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="100324464" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" srcRngEndLn="49" ln="49" srcRngEndPos="30" srcRngStartln="49" srcRngStartPos="10" desc="catch (Exception e)" ElType="." rngLn="49" />
        <ElDesc lineHash="957734862" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" srcRngEndLn="50" ln="50" srcRngEndPos="58" srcRngStartln="50" srcRngStartPos="12" desc="System.out.println(&quot;Exception occured: &quot; + e);" ElType="." rngLn="50" />
        <ElDesc lineHash="1289477876" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" srcRngEndLn="52" ln="52" srcRngEndPos="28" srcRngStartln="52" srcRngStartPos="12" desc="encoder.close();" ElType=".P" rngLn="52">
          <Props>
            <Prop key="Tracked variables" val="encoder" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: encoder" kind="var" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;decoder&quot; may possibly be null" ln="71" locFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="34" auth="kmarczyk" FirstElSrcRngEndLn="58" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="1116947660" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="58" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="1848600191" lang="java" locEndPos="28" urgent="true" locEndLn="71" goals="1," locStartln="71" sev="1" locRef="8" tool="jtest" lineHash="1116947660" locType="sr" hash="-1630627415" causeLocRef="8">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-1310850359" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" srcRngEndLn="57" ln="57" srcRngEndPos="36" srcRngStartln="57" srcRngStartPos="8" desc="Vector vObjs = new Vector();" ElType="." rngLn="57" />
        <ElDesc lineHash="23744578" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" srcRngEndLn="58" ln="58" srcRngEndPos="34" srcRngStartln="58" srcRngStartPos="8" desc="XMLDecoder decoder = null;" ElType=".C" rngLn="58">
          <Props>
            <Prop key="Tracked variables" val="decoder" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: decoder" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1321082029" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" srcRngEndLn="60" ln="60" srcRngEndPos="40" srcRngStartln="60" srcRngStartPos="22" desc="new XMLDecoder(in)" ElType="!E" rngLn="60" thrownTypes="IllegalArgumentException" throwingMethod="XMLDecoder.XMLDecoder">
          <Anns>
            <Ann msg="XMLDecoder.XMLDecoder() throws IllegalArgumentException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="100324464" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" srcRngEndLn="68" ln="68" srcRngEndPos="30" srcRngStartln="68" srcRngStartPos="10" desc="catch (Exception e)" ElType="." rngLn="68" />
        <ElDesc lineHash="957734862" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" srcRngEndLn="69" ln="69" srcRngEndPos="58" srcRngStartln="69" srcRngStartPos="12" desc="System.out.println(&quot;Exception occured: &quot; + e);" ElType="." rngLn="69" />
        <ElDesc lineHash="1116947660" locType="sr" srcRnghash="-1630627415" locRef="8" srcRngFile="/demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" srcRngEndLn="71" ln="71" srcRngEndPos="28" srcRngStartln="71" srcRngStartPos="12" desc="decoder.close();" ElType=".P" rngLn="71">
          <Props>
            <Prop key="Tracked variables" val="decoder" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: decoder" kind="var" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;code == 0&quot; always evaluates to false" ln="17" locFile="/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ruleSAFMsg="Point where senseless condition is used" FirstElSrcRngEndPos="92" auth="kmarczyk" FirstElSrcRngEndLn="14" rule="BD.PB.CC" FirstElSrcRngStartPos="24" lnHash="2035788877" ruleSCSCMsg="Start of the path" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" rule.header="Avoid conditions that always evaluate to the same value" FirstElSrcRngStartln="14" locStartPos="15" analyzer="com.parasoft.jtest.flowanalyzer" id="-112331005" lang="java" locEndPos="38" urgent="true" locEndLn="17" goals="1," locStartln="17" sev="2" locRef="10" tool="jtest" lineHash="2035788877" locType="sr" hash="-1891737324" causeLocRef="10">
      <Props />
      <ElDescList>
        <ElDesc lineHash="907030458" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="14" ln="14" srcRngEndPos="92" srcRngStartln="14" srcRngStartPos="24" desc="calculateDiscountedSum(int code, float initialSum, Consumer person)" ElType=".C" rngLn="14">
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1076318677" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="15" ln="15" srcRngEndPos="71" srcRngStartln="15" srcRngStartPos="8" desc="float discountedSum = calculateCommonDiscountedSum(initialSum);" ElType="." rngLn="15">
          <ElDescList>
            <ElDesc lineHash="1694878475" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="33" ln="33" srcRngEndPos="35" srcRngStartln="33" srcRngStartPos="8" desc="float discountedSum = 0.0f;" ElType="." rngLn="33" />
            <ElDesc lineHash="-167050145" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="34" ln="34" srcRngEndPos="32" srcRngStartln="34" srcRngStartPos="8" desc="if (initialSum > 5.0f) {" ElType="." rngLn="34">
              <Anns>
                <Ann msg="Condition evaluation: (initialSum > 5.0) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-847108515" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="37" ln="37" srcRngEndPos="32" srcRngStartln="37" srcRngStartPos="8" desc="if (initialSum &lt; 5.0f) {" ElType="." rngLn="37">
              <Anns>
                <Ann msg="Condition evaluation: (initialSum &lt; 5.0) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-184886784" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="40" ln="40" srcRngEndPos="29" srcRngStartln="40" srcRngStartPos="8" desc="return discountedSum;" ElType="." rngLn="40" />
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="424308118" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="16" ln="16" srcRngEndPos="40" srcRngStartln="16" srcRngStartPos="8" desc="if (code == PERSONAL_DISCOUNT) {" ElType="." rngLn="16">
          <Anns>
            <Ann msg="Condition evaluation: (code == 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2035788877" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="17" ln="17" srcRngEndPos="38" srcRngStartln="17" srcRngStartPos="15" desc="if (code == DISCOUNT) {" ElType=".P" rngLn="17">
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;code == 0&quot; always evaluates to false" ln="18" locFile="/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ruleSAFMsg="Point where senseless condition is used" FirstElSrcRngEndPos="92" auth="kmarczyk" FirstElSrcRngEndLn="14" rule="BD.PB.CC" FirstElSrcRngStartPos="24" lnHash="-1311457596" ruleSCSCMsg="Start of the path" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" rule.header="Avoid conditions that always evaluate to the same value" FirstElSrcRngStartln="14" locStartPos="15" analyzer="com.parasoft.jtest.flowanalyzer" id="-1502079495" lang="java" locEndPos="43" urgent="true" locEndLn="18" goals="1," locStartln="18" sev="2" locRef="10" tool="jtest" lineHash="-1311457596" locType="sr" hash="-1891737324" causeLocRef="10">
      <Props />
      <ElDescList>
        <ElDesc lineHash="907030458" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="14" ln="14" srcRngEndPos="92" srcRngStartln="14" srcRngStartPos="24" desc="calculateDiscountedSum(int code, float initialSum, Consumer person)" ElType=".C" rngLn="14">
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1076318677" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="15" ln="15" srcRngEndPos="71" srcRngStartln="15" srcRngStartPos="8" desc="float discountedSum = calculateCommonDiscountedSum(initialSum);" ElType="." rngLn="15">
          <ElDescList>
            <ElDesc lineHash="1694878475" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="33" ln="33" srcRngEndPos="35" srcRngStartln="33" srcRngStartPos="8" desc="float discountedSum = 0.0f;" ElType="." rngLn="33" />
            <ElDesc lineHash="-167050145" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="34" ln="34" srcRngEndPos="32" srcRngStartln="34" srcRngStartPos="8" desc="if (initialSum > 5.0f) {" ElType="." rngLn="34">
              <Anns>
                <Ann msg="Condition evaluation: (initialSum > 5.0) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-847108515" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="37" ln="37" srcRngEndPos="32" srcRngStartln="37" srcRngStartPos="8" desc="if (initialSum &lt; 5.0f) {" ElType="." rngLn="37">
              <Anns>
                <Ann msg="Condition evaluation: (initialSum &lt; 5.0) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-184886784" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="40" ln="40" srcRngEndPos="29" srcRngStartln="40" srcRngStartPos="8" desc="return discountedSum;" ElType="." rngLn="40" />
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="424308118" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="16" ln="16" srcRngEndPos="40" srcRngStartln="16" srcRngStartPos="8" desc="if (code == PERSONAL_DISCOUNT) {" ElType="." rngLn="16">
          <Anns>
            <Ann msg="Condition evaluation: (code == 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2035788877" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="17" ln="17" srcRngEndPos="38" srcRngStartln="17" srcRngStartPos="15" desc="if (code == DISCOUNT) {" ElType="." rngLn="17">
          <Anns>
            <Ann msg="Condition evaluation: (code == 0) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1311457596" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="18" ln="18" srcRngEndPos="43" srcRngStartln="18" srcRngStartPos="15" desc="if (code == SPECIAL_OFFER) {" ElType=".P" rngLn="18">
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Division by &quot;discountedSum&quot; which may possibly be zero" ln="22" locFile="/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" ruleSAFMsg="Point of division by zero" FirstElSrcRngEndPos="71" auth="kmarczyk" FirstElSrcRngEndLn="15" rule="BD.PB.ZERO" FirstElSrcRngStartPos="8" lnHash="203027039" ruleSCSCMsg="Start of the path" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" rule.header="Avoid division by zero" FirstElSrcRngStartln="15" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-1497281393" lang="java" locEndPos="75" urgent="true" locEndLn="22" goals="1," locStartln="22" sev="1" locRef="10" tool="jtest" lineHash="203027039" locType="sr" hash="-1891737324" causeLocRef="10">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-1076318677" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="15" ln="15" srcRngEndPos="71" srcRngStartln="15" srcRngStartPos="8" desc="float discountedSum = calculateCommonDiscountedSum(initialSum);" ElType=".C" rngLn="15">
          <ElDescList>
            <ElDesc lineHash="1694878475" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="33" ln="33" srcRngEndPos="35" srcRngStartln="33" srcRngStartPos="8" desc="float discountedSum = 0.0f;" ElType="!" rngLn="33" />
            <ElDesc lineHash="-167050145" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="34" ln="34" srcRngEndPos="32" srcRngStartln="34" srcRngStartPos="8" desc="if (initialSum > 5.0f) {" ElType="." rngLn="34">
              <Anns>
                <Ann msg="Condition evaluation: (initialSum > 5.0) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-847108515" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="37" ln="37" srcRngEndPos="32" srcRngStartln="37" srcRngStartPos="8" desc="if (initialSum &lt; 5.0f) {" ElType="." rngLn="37">
              <Anns>
                <Ann msg="Condition evaluation: (initialSum &lt; 5.0) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-184886784" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="40" ln="40" srcRngEndPos="29" srcRngStartln="40" srcRngStartPos="8" desc="return discountedSum;" ElType="!" rngLn="40" />
          </ElDescList>
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="424308118" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="16" ln="16" srcRngEndPos="40" srcRngStartln="16" srcRngStartPos="8" desc="if (code == PERSONAL_DISCOUNT) {" ElType="." rngLn="16">
          <Anns>
            <Ann msg="Condition evaluation: (code == 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="424308118" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="21" ln="21" srcRngEndPos="40" srcRngStartln="21" srcRngStartPos="8" desc="if (code == PERSONAL_DISCOUNT) {" ElType="." rngLn="21">
          <Anns>
            <Ann msg="Condition evaluation: (code == 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="203027039" locType="sr" srcRnghash="-1891737324" locRef="10" srcRngFile="/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" srcRngEndLn="22" ln="22" srcRngEndPos="75" srcRngStartln="22" srcRngStartPos="12" desc="float progressionCoef = person.getOverallSum() / discountedSum;" ElType=".P" rngLn="22">
          <Anns>
            <Ann msg="Point of division by zero" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;fOut&quot; may possibly be null" ln="27" locFile="/demo/src/main/java/examples/flowanalysis/FilesInjection.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="37" auth="kmarczyk" FirstElSrcRngEndLn="21" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="-1243101048" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/FilesInjection.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="21" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-1806349204" lang="java" locEndPos="25" urgent="true" locEndLn="27" goals="1," locStartln="27" sev="1" locRef="11" tool="jtest" lineHash="-1243101048" locType="sr" hash="686946442" causeLocRef="11">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1883769468" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/demo/src/main/java/examples/flowanalysis/FilesInjection.java" srcRngEndLn="21" ln="21" srcRngEndPos="37" srcRngStartln="21" srcRngStartPos="8" desc="FileOutputStream fOut = null;" ElType=".C" rngLn="21">
          <Props>
            <Prop key="Tracked variables" val="fOut" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: fOut" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="760693331" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/demo/src/main/java/examples/flowanalysis/FilesInjection.java" srcRngEndLn="23" ln="23" srcRngEndPos="41" srcRngStartln="23" srcRngStartPos="12" desc="String sFileName = storyName;" ElType="." rngLn="23" />
        <ElDesc lineHash="1826395322" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/demo/src/main/java/examples/flowanalysis/FilesInjection.java" srcRngEndLn="24" ln="24" srcRngEndPos="50" srcRngStartln="24" srcRngStartPos="19" desc="new FileOutputStream(sFileName)" ElType="!E" rngLn="24" thrownTypes="FileNotFoundException" throwingMethod="FileOutputStream.FileOutputStream">
          <Anns>
            <Ann msg="FileOutputStream.FileOutputStream() throws FileNotFoundException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1243101048" locType="sr" srcRnghash="686946442" locRef="11" srcRngFile="/demo/src/main/java/examples/flowanalysis/FilesInjection.java" srcRngEndLn="27" ln="27" srcRngEndPos="25" srcRngStartln="27" srcRngStartPos="12" desc="fOut.close();" ElType=".P" rngLn="27">
          <Props>
            <Prop key="Tracked variables" val="fOut" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: fOut" kind="var" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Iterator &quot;iter&quot; may possibly be used after iterated collection is modified" ln="16" locFile="/demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" ruleSAFMsg="Iterator usage point" FirstElSrcRngEndPos="49" auth="kmarczyk" FirstElSrcRngEndLn="15" rule="BD.CO.ITMOD" FirstElSrcRngStartPos="8" lnHash="-1314484653" ruleSCSCMsg="Iterator creation point" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" rule.header="Do not modify collection while iterating over it" FirstElSrcRngStartln="15" locStartPos="15" analyzer="com.parasoft.jtest.flowanalyzer" id="869149468" lang="java" locEndPos="29" urgent="true" locEndLn="16" goals="1," locStartln="16" sev="1" locRef="12" tool="jtest" lineHash="-1314484653" locType="sr" hash="438092426" causeLocRef="12">
      <Props>
        <Prop key="Tracked variables" val="Tracked iterators" />
        <Prop key="Tracked collections" val="Tracked collections" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-385742572" locType="sr" srcRnghash="438092426" locRef="12" srcRngFile="/demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" srcRngEndLn="15" ln="15" srcRngEndPos="49" srcRngStartln="15" srcRngStartPos="8" desc="Iterator&lt;?> iter = collection.iterator();" ElType=".C" rngLn="15">
          <Props>
            <Prop key="Tracked variables" val="iter" />
            <Prop key="Tracked collections" val="collection" />
          </Props>
          <Anns>
            <Ann msg="Iterator creation point" kind="cause" />
            <Ann msg="Tracked iterators: iter" kind="var" />
            <Ann msg="Tracked collections: collection" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1314484653" locType="sr" srcRnghash="438092426" locRef="12" srcRngFile="/demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" srcRngEndLn="17" ln="16" srcRngEndPos="0" srcRngStartln="16" srcRngStartPos="8" desc="while (iter.hasNext()) {" ElType="." rngLn="16">
          <Anns>
            <Ann msg="Loop condition evaluation: iter.hasNext() (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1317928354" locType="sr" srcRnghash="438092426" locRef="12" srcRngFile="/demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" srcRngEndLn="17" ln="17" srcRngEndPos="37" srcRngStartln="17" srcRngStartPos="12" desc="Object obj = iter.next();" ElType="." rngLn="17" />
        <ElDesc lineHash="985784051" locType="sr" srcRnghash="438092426" locRef="12" srcRngFile="/demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" srcRngEndLn="18" ln="18" srcRngEndPos="54" srcRngStartln="18" srcRngStartPos="12" desc="if (tp.isAssignableFrom(obj.getClass())) {" ElType="." rngLn="18">
          <Anns>
            <Ann msg="Condition evaluation: tp.isAssignableFrom(obj.getClass()) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1295664149" locType="sr" srcRnghash="438092426" locRef="12" srcRngFile="/demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" srcRngEndLn="21" ln="21" srcRngEndPos="35" srcRngStartln="21" srcRngStartPos="12" desc="collection.remove(obj);" ElType="!" rngLn="21">
          <Anns>
            <Ann msg="Collection modification point" kind="info" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1314484653" locType="sr" srcRnghash="438092426" locRef="12" srcRngFile="/demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" srcRngEndLn="16" ln="16" srcRngEndPos="29" srcRngStartln="16" srcRngStartPos="15" desc="iter.hasNext()" ElType=".P" rngLn="16">
          <Props>
            <Prop key="Tracked variables" val="iter" />
            <Prop key="Tracked collections" val="collection" />
          </Props>
          <Anns>
            <Ann msg="Tracked iterators: iter" kind="var" />
            <Ann msg="Tracked collections: collection" kind="var" />
            <Ann msg="Iterator usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Inefficient removal from collection &quot;collection&quot;. Remove elements by &quot;Iterator.remove()&quot;" ln="21" locFile="/demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" ruleSAFMsg="Point where element is removed from collection" FirstElSrcRngEndPos="49" auth="kmarczyk" FirstElSrcRngEndLn="15" rule="BD.OPT.INEFCOL" FirstElSrcRngStartPos="8" lnHash="1295664149" ruleSCSCMsg="Point of getting iterator" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" rule.header="Avoid inefficient removal of Collection elements" FirstElSrcRngStartln="15" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="1204760194" lang="java" locEndPos="35" urgent="true" locEndLn="21" goals="1," locStartln="21" sev="3" locRef="12" tool="jtest" lineHash="1295664149" locType="sr" hash="438092426" causeLocRef="12">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-385742572" locType="sr" srcRnghash="438092426" locRef="12" srcRngFile="/demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" srcRngEndLn="15" ln="15" srcRngEndPos="49" srcRngStartln="15" srcRngStartPos="8" desc="Iterator&lt;?> iter = collection.iterator();" ElType=".C" rngLn="15">
          <Anns>
            <Ann msg="Point of getting iterator" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1314484653" locType="sr" srcRnghash="438092426" locRef="12" srcRngFile="/demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" srcRngEndLn="17" ln="16" srcRngEndPos="0" srcRngStartln="16" srcRngStartPos="8" desc="while (iter.hasNext()) {" ElType="." rngLn="16">
          <Anns>
            <Ann msg="Loop condition evaluation: iter.hasNext() (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1317928354" locType="sr" srcRnghash="438092426" locRef="12" srcRngFile="/demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" srcRngEndLn="17" ln="17" srcRngEndPos="37" srcRngStartln="17" srcRngStartPos="12" desc="Object obj = iter.next();" ElType="." rngLn="17" />
        <ElDesc lineHash="985784051" locType="sr" srcRnghash="438092426" locRef="12" srcRngFile="/demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" srcRngEndLn="18" ln="18" srcRngEndPos="54" srcRngStartln="18" srcRngStartPos="12" desc="if (tp.isAssignableFrom(obj.getClass())) {" ElType="." rngLn="18">
          <Anns>
            <Ann msg="Condition evaluation: tp.isAssignableFrom(obj.getClass()) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1295664149" locType="sr" srcRnghash="438092426" locRef="12" srcRngFile="/demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" srcRngEndLn="21" ln="21" srcRngEndPos="35" srcRngStartln="21" srcRngStartPos="12" desc="collection.remove(obj);" ElType=".P" rngLn="21">
          <Anns>
            <Ann msg="Point where element is removed from collection" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Iterator &quot;iter&quot; may possibly be used after iterated collection is modified" ln="15" locFile="/demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" ruleSAFMsg="Iterator usage point" FirstElSrcRngEndPos="49" auth="kmarczyk" FirstElSrcRngEndLn="14" rule="BD.CO.ITMOD" FirstElSrcRngStartPos="8" lnHash="-1314484653" ruleSCSCMsg="Iterator creation point" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" rule.header="Do not modify collection while iterating over it" FirstElSrcRngStartln="14" locStartPos="15" analyzer="com.parasoft.jtest.flowanalyzer" id="-199750923" lang="java" locEndPos="29" urgent="true" locEndLn="15" goals="1," locStartln="15" sev="1" locRef="13" tool="jtest" lineHash="-1314484653" locType="sr" hash="1816383512" causeLocRef="13">
      <Props>
        <Prop key="Tracked variables" val="Tracked iterators" />
        <Prop key="Tracked collections" val="Tracked collections" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-385742572" locType="sr" srcRnghash="1816383512" locRef="13" srcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" srcRngEndLn="14" ln="14" srcRngEndPos="49" srcRngStartln="14" srcRngStartPos="8" desc="Iterator&lt;?> iter = collection.iterator();" ElType=".C" rngLn="14">
          <Props>
            <Prop key="Tracked variables" val="iter" />
            <Prop key="Tracked collections" val="collection" />
          </Props>
          <Anns>
            <Ann msg="Iterator creation point" kind="cause" />
            <Ann msg="Tracked iterators: iter" kind="var" />
            <Ann msg="Tracked collections: collection" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1314484653" locType="sr" srcRnghash="1816383512" locRef="13" srcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" srcRngEndLn="16" ln="15" srcRngEndPos="0" srcRngStartln="15" srcRngStartPos="8" desc="while (iter.hasNext()) {" ElType="." rngLn="15">
          <Anns>
            <Ann msg="Loop condition evaluation: iter.hasNext() (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1860144441" locType="sr" srcRnghash="1816383512" locRef="13" srcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" srcRngEndLn="16" ln="16" srcRngEndPos="41" srcRngStartln="16" srcRngStartPos="12" desc="Object element = iter.next();" ElType="." rngLn="16" />
        <ElDesc lineHash="-1848798502" locType="sr" srcRnghash="1816383512" locRef="13" srcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" srcRngEndLn="17" ln="17" srcRngEndPos="39" srcRngStartln="17" srcRngStartPos="12" desc="collection.remove(element);" ElType="!" rngLn="17">
          <Anns>
            <Ann msg="Collection modification point" kind="info" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1314484653" locType="sr" srcRnghash="1816383512" locRef="13" srcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" srcRngEndLn="15" ln="15" srcRngEndPos="29" srcRngStartln="15" srcRngStartPos="15" desc="iter.hasNext()" ElType=".P" rngLn="15">
          <Props>
            <Prop key="Tracked variables" val="iter" />
            <Prop key="Tracked collections" val="collection" />
          </Props>
          <Anns>
            <Ann msg="Tracked iterators: iter" kind="var" />
            <Ann msg="Tracked collections: collection" kind="var" />
            <Ann msg="Iterator usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Inefficient removal from collection &quot;collection&quot;. Remove elements by &quot;Iterator.remove()&quot;" ln="17" locFile="/demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" ruleSAFMsg="Point where element is removed from collection" FirstElSrcRngEndPos="49" auth="kmarczyk" FirstElSrcRngEndLn="14" rule="BD.OPT.INEFCOL" FirstElSrcRngStartPos="8" lnHash="-1848798502" ruleSCSCMsg="Point of getting iterator" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" rule.header="Avoid inefficient removal of Collection elements" FirstElSrcRngStartln="14" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="620971170" lang="java" locEndPos="39" urgent="true" locEndLn="17" goals="1," locStartln="17" sev="3" locRef="13" tool="jtest" lineHash="-1848798502" locType="sr" hash="1816383512" causeLocRef="13">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-385742572" locType="sr" srcRnghash="1816383512" locRef="13" srcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" srcRngEndLn="14" ln="14" srcRngEndPos="49" srcRngStartln="14" srcRngStartPos="8" desc="Iterator&lt;?> iter = collection.iterator();" ElType=".C" rngLn="14">
          <Anns>
            <Ann msg="Point of getting iterator" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1314484653" locType="sr" srcRnghash="1816383512" locRef="13" srcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" srcRngEndLn="16" ln="15" srcRngEndPos="0" srcRngStartln="15" srcRngStartPos="8" desc="while (iter.hasNext()) {" ElType="." rngLn="15">
          <Anns>
            <Ann msg="Loop condition evaluation: iter.hasNext() (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1860144441" locType="sr" srcRnghash="1816383512" locRef="13" srcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" srcRngEndLn="16" ln="16" srcRngEndPos="41" srcRngStartln="16" srcRngStartPos="12" desc="Object element = iter.next();" ElType="." rngLn="16" />
        <ElDesc lineHash="-1848798502" locType="sr" srcRnghash="1816383512" locRef="13" srcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" srcRngEndLn="17" ln="17" srcRngEndPos="39" srcRngStartln="17" srcRngStartPos="12" desc="collection.remove(element);" ElType=".P" rngLn="17">
          <Anns>
            <Ann msg="Point where element is removed from collection" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Iterator &quot;iter&quot; may possibly be used after iterated collection is modified" ln="16" locFile="/demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" ruleSAFMsg="Iterator usage point" FirstElSrcRngEndPos="51" auth="kmarczyk" FirstElSrcRngEndLn="15" rule="BD.CO.ITMOD" FirstElSrcRngStartPos="8" lnHash="-1314484653" ruleSCSCMsg="Iterator creation point" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" rule.header="Do not modify collection while iterating over it" FirstElSrcRngStartln="15" locStartPos="15" analyzer="com.parasoft.jtest.flowanalyzer" id="-952335794" lang="java" locEndPos="29" urgent="true" locEndLn="16" goals="1," locStartln="16" sev="1" locRef="14" tool="jtest" lineHash="-1314484653" locType="sr" hash="-417185865" causeLocRef="14">
      <Props>
        <Prop key="Tracked variables" val="Tracked iterators" />
        <Prop key="Tracked collections" val="Tracked collections" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-1650191732" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" srcRngEndLn="15" ln="15" srcRngEndPos="51" srcRngStartln="15" srcRngStartPos="8" desc="Iterator&lt;?> iter = map.keySet().iterator();" ElType=".C" rngLn="15">
          <Props>
            <Prop key="Tracked variables" val="iter" />
            <Prop key="Tracked collections" val="map" />
          </Props>
          <Anns>
            <Ann msg="Iterator creation point" kind="cause" />
            <Ann msg="Tracked iterators: iter" kind="var" />
            <Ann msg="Tracked collections: map" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1314484653" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" srcRngEndLn="17" ln="16" srcRngEndPos="0" srcRngStartln="16" srcRngStartPos="8" desc="while (iter.hasNext()) {" ElType="." rngLn="16">
          <Anns>
            <Ann msg="Loop condition evaluation: iter.hasNext() (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-927722506" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" srcRngEndLn="17" ln="17" srcRngEndPos="37" srcRngStartln="17" srcRngStartPos="12" desc="Object key = iter.next();" ElType="." rngLn="17" />
        <ElDesc lineHash="-943711873" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" srcRngEndLn="18" ln="18" srcRngEndPos="28" srcRngStartln="18" srcRngStartPos="12" desc="map.remove(key);" ElType="!" rngLn="18">
          <Anns>
            <Ann msg="Collection modification point" kind="info" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1314484653" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" srcRngEndLn="16" ln="16" srcRngEndPos="29" srcRngStartln="16" srcRngStartPos="15" desc="iter.hasNext()" ElType=".P" rngLn="16">
          <Props>
            <Prop key="Tracked variables" val="iter" />
            <Prop key="Tracked collections" val="map" />
          </Props>
          <Anns>
            <Ann msg="Tracked iterators: iter" kind="var" />
            <Ann msg="Tracked collections: map" kind="var" />
            <Ann msg="Iterator usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Inefficient removal from map &quot;map&quot;. Remove elements by &quot;Iterator.remove()&quot;" ln="18" locFile="/demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" ruleSAFMsg="Point where entry is removed by key" FirstElSrcRngEndPos="39" auth="kmarczyk" FirstElSrcRngEndLn="15" rule="BD.OPT.INEFMAPRM" FirstElSrcRngStartPos="27" lnHash="-943711873" ruleSCSCMsg="Point of getting key set" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" rule.header="Avoid inefficient removal of Map entries" FirstElSrcRngStartln="15" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-275498216" lang="java" locEndPos="28" urgent="true" locEndLn="18" goals="1," locStartln="18" sev="3" locRef="14" tool="jtest" lineHash="-943711873" locType="sr" hash="-417185865" causeLocRef="14">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-1650191732" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" srcRngEndLn="15" ln="15" srcRngEndPos="51" srcRngStartln="15" srcRngStartPos="8" desc="Iterator&lt;?> iter = map.keySet().iterator();" ElType=".C" rngLn="15">
          <Anns>
            <Ann msg="Point of getting key set" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1314484653" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" srcRngEndLn="17" ln="16" srcRngEndPos="0" srcRngStartln="16" srcRngStartPos="8" desc="while (iter.hasNext()) {" ElType="." rngLn="16">
          <Anns>
            <Ann msg="Loop condition evaluation: iter.hasNext() (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-927722506" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" srcRngEndLn="17" ln="17" srcRngEndPos="37" srcRngStartln="17" srcRngStartPos="12" desc="Object key = iter.next();" ElType="." rngLn="17" />
        <ElDesc lineHash="-943711873" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" srcRngEndLn="18" ln="18" srcRngEndPos="28" srcRngStartln="18" srcRngStartPos="12" desc="map.remove(key);" ElType=".P" rngLn="18">
          <Anns>
            <Ann msg="Point where entry is removed by key" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Iterator &quot;iter&quot; may possibly be used after iterated collection is modified" ln="29" locFile="/demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" ruleSAFMsg="Iterator usage point" FirstElSrcRngEndPos="53" auth="kmarczyk" FirstElSrcRngEndLn="28" rule="BD.CO.ITMOD" FirstElSrcRngStartPos="8" lnHash="-1314484653" ruleSCSCMsg="Iterator creation point" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" rule.header="Do not modify collection while iterating over it" FirstElSrcRngStartln="28" locStartPos="15" analyzer="com.parasoft.jtest.flowanalyzer" id="1367360376" lang="java" locEndPos="29" urgent="true" locEndLn="29" goals="1," locStartln="29" sev="1" locRef="14" tool="jtest" lineHash="-1314484653" locType="sr" hash="-417185865" causeLocRef="14">
      <Props>
        <Prop key="Tracked variables" val="Tracked iterators" />
        <Prop key="Tracked collections" val="Tracked collections" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="1391720025" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" srcRngEndLn="28" ln="28" srcRngEndPos="53" srcRngStartln="28" srcRngStartPos="8" desc="Iterator&lt;?> iter = map.entrySet().iterator();" ElType=".C" rngLn="28">
          <Props>
            <Prop key="Tracked variables" val="iter" />
            <Prop key="Tracked collections" val="map" />
          </Props>
          <Anns>
            <Ann msg="Iterator creation point" kind="cause" />
            <Ann msg="Tracked iterators: iter" kind="var" />
            <Ann msg="Tracked collections: map" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1314484653" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" srcRngEndLn="30" ln="29" srcRngEndPos="0" srcRngStartln="29" srcRngStartPos="8" desc="while (iter.hasNext()) {" ElType="." rngLn="29">
          <Anns>
            <Ann msg="Loop condition evaluation: iter.hasNext() (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="655636977" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" srcRngEndLn="30" ln="30" srcRngEndPos="58" srcRngStartln="30" srcRngStartPos="12" desc="Entry&lt;?, ?> entry = (Entry&lt;?, ?>) iter.next();" ElType="." rngLn="30" />
        <ElDesc lineHash="-1719244368" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" srcRngEndLn="31" ln="31" srcRngEndPos="40" srcRngStartln="31" srcRngStartPos="12" desc="Object key = entry.getKey();" ElType="." rngLn="31" />
        <ElDesc lineHash="-943711873" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" srcRngEndLn="32" ln="32" srcRngEndPos="28" srcRngStartln="32" srcRngStartPos="12" desc="map.remove(key);" ElType="!" rngLn="32">
          <Anns>
            <Ann msg="Collection modification point" kind="info" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1314484653" locType="sr" srcRnghash="-417185865" locRef="14" srcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" srcRngEndLn="29" ln="29" srcRngEndPos="29" srcRngStartln="29" srcRngStartPos="15" desc="iter.hasNext()" ElType=".P" rngLn="29">
          <Props>
            <Prop key="Tracked variables" val="iter" />
            <Prop key="Tracked collections" val="map" />
          </Props>
          <Anns>
            <Ann msg="Tracked iterators: iter" kind="var" />
            <Ann msg="Tracked collections: map" kind="var" />
            <Ann msg="Iterator usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Value of &quot;value&quot; is never used" ln="18" locFile="/demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" ruleSAFMsg="Point where value is declared" FirstElSrcRngEndPos="40" auth="kmarczyk" FirstElSrcRngEndLn="18" rule="BD.PB.VOVR" FirstElSrcRngStartPos="12" lnHash="-1032022773" ruleSCSCMsg="Point where value is overwritten" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" rule.header="Avoid unused values" FirstElSrcRngStartln="18" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-947807644" lang="java" locEndPos="40" urgent="true" locEndLn="18" goals="1," locStartln="18" sev="3" locRef="15" tool="jtest" lineHash="-1032022773" locType="sr" hash="-359565455" causeLocRef="15">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-1032022773" locType="sr" srcRnghash="-359565455" locRef="15" srcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" srcRngEndLn="18" ln="18" srcRngEndPos="40" srcRngStartln="18" srcRngStartPos="12" desc="Object value = map.get(key);" ElType="CP" rngLn="18">
          <Anns>
            <Ann msg="Point where value is overwritten" kind="cause" />
            <Ann msg="Point where value is declared" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Inefficient iteration over map &quot;map&quot;. Use entry set iterator to access values instead of retrieving them by &quot;get()&quot; method" ln="18" locFile="/demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" ruleSAFMsg="Point where value is retrieved by key" FirstElSrcRngEndPos="39" auth="kmarczyk" FirstElSrcRngEndLn="15" rule="BD.OPT.INEFMAP" FirstElSrcRngStartPos="27" lnHash="-1032022773" ruleSCSCMsg="Point of getting key set" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" rule.header="Avoid inefficient iteration over Map entries" FirstElSrcRngStartln="15" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-58599372" lang="java" locEndPos="40" urgent="true" locEndLn="18" goals="1," locStartln="18" sev="3" locRef="15" tool="jtest" lineHash="-1032022773" locType="sr" hash="-359565455" causeLocRef="15">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-1650191732" locType="sr" srcRnghash="-359565455" locRef="15" srcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" srcRngEndLn="15" ln="15" srcRngEndPos="51" srcRngStartln="15" srcRngStartPos="8" desc="Iterator&lt;?> iter = map.keySet().iterator();" ElType=".C" rngLn="15">
          <Anns>
            <Ann msg="Point of getting key set" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1314484653" locType="sr" srcRnghash="-359565455" locRef="15" srcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" srcRngEndLn="17" ln="16" srcRngEndPos="0" srcRngStartln="16" srcRngStartPos="8" desc="while (iter.hasNext()) {" ElType="." rngLn="16">
          <Anns>
            <Ann msg="Loop condition evaluation: iter.hasNext() (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-927722506" locType="sr" srcRnghash="-359565455" locRef="15" srcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" srcRngEndLn="17" ln="17" srcRngEndPos="37" srcRngStartln="17" srcRngStartPos="12" desc="Object key = iter.next();" ElType="." rngLn="17" />
        <ElDesc lineHash="-1032022773" locType="sr" srcRnghash="-359565455" locRef="15" srcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" srcRngEndLn="18" ln="18" srcRngEndPos="40" srcRngStartln="18" srcRngStartPos="12" desc="Object value = map.get(key);" ElType=".P" rngLn="18">
          <Anns>
            <Ann msg="Point where value is retrieved by key" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Value of &quot;key&quot; is never used" ln="32" locFile="/demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" ruleSAFMsg="Point where value is declared" FirstElSrcRngEndPos="40" auth="kmarczyk" FirstElSrcRngEndLn="32" rule="BD.PB.VOVR" FirstElSrcRngStartPos="12" lnHash="-1719244368" ruleSCSCMsg="Point where value is overwritten" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" rule.header="Avoid unused values" FirstElSrcRngStartln="32" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-952179340" lang="java" locEndPos="40" urgent="true" locEndLn="32" goals="1," locStartln="32" sev="3" locRef="15" tool="jtest" lineHash="-1719244368" locType="sr" hash="-359565455" causeLocRef="15">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-1719244368" locType="sr" srcRnghash="-359565455" locRef="15" srcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" srcRngEndLn="32" ln="32" srcRngEndPos="40" srcRngStartln="32" srcRngStartPos="12" desc="Object key = entry.getKey();" ElType="CP" rngLn="32">
          <Anns>
            <Ann msg="Point where value is overwritten" kind="cause" />
            <Ann msg="Point where value is declared" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Value of &quot;value&quot; is never used" ln="33" locFile="/demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" ruleSAFMsg="Point where value is declared" FirstElSrcRngEndPos="44" auth="kmarczyk" FirstElSrcRngEndLn="33" rule="BD.PB.VOVR" FirstElSrcRngStartPos="12" lnHash="-518523280" ruleSCSCMsg="Point where value is overwritten" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" rule.header="Avoid unused values" FirstElSrcRngStartln="33" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-947807510" lang="java" locEndPos="44" urgent="true" locEndLn="33" goals="1," locStartln="33" sev="3" locRef="15" tool="jtest" lineHash="-518523280" locType="sr" hash="-359565455" causeLocRef="15">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-518523280" locType="sr" srcRnghash="-359565455" locRef="15" srcRngFile="/demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" srcRngEndLn="33" ln="33" srcRngEndPos="44" srcRngStartln="33" srcRngStartPos="12" desc="Object value = entry.getValue();" ElType="CP" rngLn="33">
          <Anns>
            <Ann msg="Point where value is overwritten" kind="cause" />
            <Ann msg="Point where value is declared" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The reference to the &quot;Runtime.getRuntime().exec(sCommand)&quot; process is lost before the methods &quot;getErrorStream, getInputStream&quot; are called" ln="23" locFile="/demo/src/main/java/examples/flowanalysis/SystemInjection.java" ruleSAFMsg="Point where the reference to the process is lost" FirstElSrcRngEndPos="44" auth="Developer007" FirstElSrcRngEndLn="23" rule="BD.PB.PBIOS" FirstElSrcRngStartPos="8" lnHash="1948805676" ruleSCSCMsg="Point where the process is created" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/SystemInjection.java" rule.header="Prevent external processes from blocking on input and output streams" FirstElSrcRngStartln="23" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="-2107976419" lang="java" locEndPos="44" urgent="true" locEndLn="23" goals="1," locStartln="23" sev="3" locRef="17" tool="jtest" lineHash="1948805676" locType="sr" hash="-152258803" causeLocRef="17">
      <Props />
      <ElDescList>
        <ElDesc lineHash="1948805676" locType="sr" srcRnghash="-152258803" locRef="17" srcRngFile="/demo/src/main/java/examples/flowanalysis/SystemInjection.java" srcRngEndLn="23" ln="23" srcRngEndPos="44" srcRngStartln="23" srcRngStartPos="8" desc="Runtime.getRuntime().exec(sCommand);" ElType="CP" rngLn="23">
          <Anns>
            <Ann msg="Point where the process is created" kind="cause" />
            <Ann msg="Point where the reference to the process is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;result instanceof RuntimeException&quot; always evaluates to false" ln="11" locFile="/demo/src/main/java/examples/flowanalysis/UnreachableCode.java" ruleSAFMsg="Point where senseless condition is used" FirstElSrcRngEndPos="54" auth="kmarczyk" FirstElSrcRngEndLn="8" rule="BD.PB.CC" FirstElSrcRngStartPos="16" lnHash="-1443263063" ruleSCSCMsg="Start of the path" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/UnreachableCode.java" rule.header="Avoid conditions that always evaluate to the same value" FirstElSrcRngStartln="8" locStartPos="15" analyzer="com.parasoft.jtest.flowanalyzer" id="-906088855" lang="java" locEndPos="56" urgent="true" locEndLn="11" goals="1," locStartln="11" sev="2" locRef="18" tool="jtest" lineHash="-1443263063" locType="sr" hash="1709312165" causeLocRef="18">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-987516032" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/demo/src/main/java/examples/flowanalysis/UnreachableCode.java" srcRngEndLn="8" ln="8" srcRngEndPos="54" srcRngStartln="8" srcRngStartPos="16" desc="printCalculationResult(Object result)" ElType=".C" rngLn="8">
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1532976715" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/demo/src/main/java/examples/flowanalysis/UnreachableCode.java" srcRngEndLn="9" ln="9" srcRngEndPos="42" srcRngStartln="9" srcRngStartPos="8" desc="if (result instanceof Exception) {" ElType="." rngLn="9">
          <Anns>
            <Ann msg="Condition evaluation: result instanceof java.lang.Exception (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1443263063" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/demo/src/main/java/examples/flowanalysis/UnreachableCode.java" srcRngEndLn="11" ln="11" srcRngEndPos="56" srcRngStartln="11" srcRngStartPos="15" desc="if (result instanceof RuntimeException) {" ElType=".P" rngLn="11">
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;!round&quot; always evaluates to true" ln="25" locFile="/demo/src/main/java/examples/flowanalysis/UnreachableCode.java" ruleSAFMsg="Point where senseless condition is used" FirstElSrcRngEndPos="63" auth="kmarczyk" FirstElSrcRngEndLn="19" rule="BD.PB.CC" FirstElSrcRngStartPos="16" lnHash="834780796" ruleSCSCMsg="Start of the path" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/UnreachableCode.java" rule.header="Avoid conditions that always evaluate to the same value" FirstElSrcRngStartln="19" locStartPos="19" analyzer="com.parasoft.jtest.flowanalyzer" id="1618268432" lang="java" locEndPos="25" urgent="true" locEndLn="25" goals="1," locStartln="25" sev="2" locRef="18" tool="jtest" lineHash="834780796" locType="sr" hash="1709312165" causeLocRef="18">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-917251182" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/demo/src/main/java/examples/flowanalysis/UnreachableCode.java" srcRngEndLn="19" ln="19" srcRngEndPos="63" srcRngStartln="19" srcRngStartPos="16" desc="guessFigure(boolean round, boolean volumetric)" ElType=".C" rngLn="19">
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1554350844" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/demo/src/main/java/examples/flowanalysis/UnreachableCode.java" srcRngEndLn="20" ln="20" srcRngEndPos="25" srcRngStartln="20" srcRngStartPos="8" desc="final int figure;" ElType="." rngLn="20" />
        <ElDesc lineHash="733119465" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/demo/src/main/java/examples/flowanalysis/UnreachableCode.java" srcRngEndLn="21" ln="21" srcRngEndPos="34" srcRngStartln="21" srcRngStartPos="8" desc="if (round &amp;&amp; volumetric) {" ElType="!" rngLn="21">
          <Anns>
            <Ann msg="Condition evaluation: round (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="2035781366" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/demo/src/main/java/examples/flowanalysis/UnreachableCode.java" srcRngEndLn="23" ln="23" srcRngEndPos="42" srcRngStartln="23" srcRngStartPos="15" desc="if (round &amp;&amp; !volumetric) {" ElType="." rngLn="23">
          <Anns>
            <Ann msg="Condition evaluation: round (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="834780796" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/demo/src/main/java/examples/flowanalysis/UnreachableCode.java" srcRngEndLn="25" ln="25" srcRngEndPos="25" srcRngStartln="25" srcRngStartPos="19" desc="!round" ElType=".P" rngLn="25">
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Unreachable branch(es): &quot;case HIMESPHERE&quot;" ln="30" locFile="/demo/src/main/java/examples/flowanalysis/UnreachableCode.java" ruleSAFMsg="Point where switch with unreachable branch(es) is defined" FirstElSrcRngEndPos="63" auth="kmarczyk" FirstElSrcRngEndLn="19" rule="BD.PB.SWITCH" FirstElSrcRngStartPos="16" lnHash="552005156" ruleSCSCMsg="Start of the path" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/UnreachableCode.java" rule.header="Avoid switch with unreachable branches" FirstElSrcRngStartln="19" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="1158048101" lang="java" locEndPos="9" urgent="true" locEndLn="47" goals="1," locStartln="30" sev="3" locRef="18" tool="jtest" lineHash="552005156" locType="sr" hash="1709312165" causeLocRef="18">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-917251182" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/demo/src/main/java/examples/flowanalysis/UnreachableCode.java" srcRngEndLn="19" ln="19" srcRngEndPos="63" srcRngStartln="19" srcRngStartPos="16" desc="guessFigure(boolean round, boolean volumetric)" ElType=".C" rngLn="19">
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1554350844" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/demo/src/main/java/examples/flowanalysis/UnreachableCode.java" srcRngEndLn="20" ln="20" srcRngEndPos="25" srcRngStartln="20" srcRngStartPos="8" desc="final int figure;" ElType="." rngLn="20" />
        <ElDesc lineHash="733119465" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/demo/src/main/java/examples/flowanalysis/UnreachableCode.java" srcRngEndLn="21" ln="21" srcRngEndPos="34" srcRngStartln="21" srcRngStartPos="8" desc="if (round &amp;&amp; volumetric) {" ElType="." rngLn="21">
          <Anns>
            <Ann msg="Condition evaluation: round (assuming true)" kind="condEval" />
            <Ann msg="Condition evaluation: volumetric (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-702241041" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/demo/src/main/java/examples/flowanalysis/UnreachableCode.java" srcRngEndLn="22" ln="22" srcRngEndPos="28" srcRngStartln="22" srcRngStartPos="12" desc="figure = SPHERE;" ElType="!" rngLn="22" />
        <ElDesc lineHash="552005156" locType="sr" srcRnghash="1709312165" locRef="18" srcRngFile="/demo/src/main/java/examples/flowanalysis/UnreachableCode.java" srcRngEndLn="47" ln="30" srcRngEndPos="9" srcRngStartln="30" srcRngStartPos="8" desc="switch (figure) {" ElType=".P" rngLn="30">
          <Anns>
            <Ann msg="Point where switch with unreachable branch(es) is defined" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;this.minLoginLength&quot; is used prior to explicit initialization" ln="40" locFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" ruleSAFMsg="Usage point" FirstElSrcRngEndPos="31" auth="kmarczyk" FirstElSrcRngEndLn="28" rule="BD.PB.NOTINITCTOR" FirstElSrcRngStartPos="8" lnHash="-395689623" ruleSCSCMsg="Point of explicit initialization" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" rule.header="Avoid use of fields before initialization in constructors and static initializers" FirstElSrcRngStartln="28" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-1009618110" lang="java" locEndPos="60" locEndLn="40" goals="0," locStartln="40" sev="1" locRef="19" tool="jtest" lineHash="-395689623" locType="sr" hash="-635152949" causeLocRef="19">
      <Props>
        <Prop key="Tracked variables" val="Not explicitly initialized value" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-749467591" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" srcRngEndLn="28" ln="28" srcRngEndPos="31" srcRngStartln="28" srcRngStartPos="8" desc="int minLoginLength = 7;" ElType="!" rngLn="28">
          <Props>
            <Prop key="Tracked variables" val="this.minLoginLength" />
          </Props>
          <Anns>
            <Ann msg="Not explicitly initialized value: this.minLoginLength" kind="var" />
            <Ann msg="Point of implicit initialization" kind="info" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1444358553" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" srcRngEndLn="31" ln="31" srcRngEndPos="34" srcRngStartln="31" srcRngStartPos="12" desc="super(name, password);" ElType="!" rngLn="31">
          <ElDescList>
            <ElDesc lineHash="32660008" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" srcRngEndLn="16" ln="16" srcRngEndPos="29" srcRngStartln="16" srcRngStartPos="12" desc="this.name = name;" ElType="." rngLn="16">
              <Props>
                <Prop key="Tracked variables" val="this.minLoginLength" />
              </Props>
              <Anns>
                <Ann msg="Not explicitly initialized value: this.minLoginLength" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="555503656" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" srcRngEndLn="17" ln="17" srcRngEndPos="37" srcRngStartln="17" srcRngStartPos="12" desc="this.password = password;" ElType="." rngLn="17" />
            <ElDesc lineHash="1197745480" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" srcRngEndLn="18" ln="18" srcRngEndPos="24" srcRngStartln="18" srcRngStartPos="12" desc="checkData();" ElType="!" rngLn="18">
              <ElDescList>
                <ElDesc lineHash="-395689623" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" srcRngEndLn="40" ln="40" srcRngEndPos="60" srcRngStartln="40" srcRngStartPos="12" desc="if (super.name.length() &lt; this.minLoginLength) {" ElType=".P" rngLn="40">
                  <Props>
                    <Prop key="Tracked variables" val="this.minLoginLength" />
                  </Props>
                  <Anns>
                    <Ann msg="Not explicitly initialized value: this.minLoginLength" kind="var" />
                    <Ann msg="Condition evaluation: (super.name.length() &lt; this.minLoginLength) (false)" kind="condEval" />
                    <Ann msg="Usage point" kind="point" />
                  </Anns>
                </ElDesc>
              </ElDescList>
            </ElDesc>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-749467591" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" srcRngEndLn="28" ln="28" srcRngEndPos="31" srcRngStartln="28" srcRngStartPos="8" desc="int minLoginLength = 7;" ElType=".C" rngLn="28">
          <Anns>
            <Ann msg="Point of explicit initialization" kind="cause" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;this.minLoginLength&quot; is used prior to explicit initialization" ln="40" locFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" ruleSAFMsg="Usage point" FirstElSrcRngEndPos="31" auth="kmarczyk" FirstElSrcRngEndLn="28" rule="BD.PB.NOTEXPLINIT" FirstElSrcRngStartPos="8" lnHash="-395689623" ruleSCSCMsg="Source of implicitly initialized value" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" rule.header="Avoid use before explicit initialization" FirstElSrcRngStartln="28" locStartPos="16" analyzer="com.parasoft.jtest.flowanalyzer" id="-1748997044" lang="java" locEndPos="57" locEndLn="40" goals="0," locStartln="40" sev="1" locRef="19" tool="jtest" lineHash="-395689623" locType="sr" hash="-635152949" causeLocRef="19">
      <Props>
        <Prop key="Tracked variables" val="Not explicitly initialized value" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-749467591" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" srcRngEndLn="28" ln="28" srcRngEndPos="31" srcRngStartln="28" srcRngStartPos="8" desc="int minLoginLength = 7;" ElType=".C" rngLn="28">
          <Props>
            <Prop key="Tracked variables" val="this.minLoginLength" />
          </Props>
          <Anns>
            <Ann msg="Source of implicitly initialized value" kind="cause" />
            <Ann msg="Not explicitly initialized value: this.minLoginLength" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1444358553" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" srcRngEndLn="31" ln="31" srcRngEndPos="34" srcRngStartln="31" srcRngStartPos="12" desc="super(name, password);" ElType="!" rngLn="31">
          <ElDescList>
            <ElDesc lineHash="32660008" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" srcRngEndLn="16" ln="16" srcRngEndPos="29" srcRngStartln="16" srcRngStartPos="12" desc="this.name = name;" ElType="." rngLn="16">
              <Props>
                <Prop key="Tracked variables" val="this.minLoginLength" />
              </Props>
              <Anns>
                <Ann msg="Not explicitly initialized value: this.minLoginLength" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="555503656" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" srcRngEndLn="17" ln="17" srcRngEndPos="37" srcRngStartln="17" srcRngStartPos="12" desc="this.password = password;" ElType="." rngLn="17" />
            <ElDesc lineHash="1197745480" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" srcRngEndLn="18" ln="18" srcRngEndPos="24" srcRngStartln="18" srcRngStartPos="12" desc="checkData();" ElType="!" rngLn="18">
              <ElDescList>
                <ElDesc lineHash="-395689623" locType="sr" srcRnghash="-635152949" locRef="19" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" srcRngEndLn="40" ln="40" srcRngEndPos="57" srcRngStartln="40" srcRngStartPos="16" desc="super.name.length() &lt; this.minLoginLength" ElType=".P" rngLn="40">
                  <Props>
                    <Prop key="Tracked variables" val="this.minLoginLength" />
                  </Props>
                  <Anns>
                    <Ann msg="Not explicitly initialized value: this.minLoginLength" kind="var" />
                    <Ann msg="Usage point" kind="point" />
                  </Anns>
                </ElDesc>
              </ElDescList>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Stream not closed: new FileInputStream(&quot;...&quot;)" ln="22" locFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ruleSAFMsg="Point where the allocated resource is lost" FirstElSrcRngEndPos="69" auth="kmarczyk" FirstElSrcRngEndLn="22" rule="BD.RES.LEAKS" FirstElSrcRngStartPos="43" lnHash="1794515364" ruleSCSCMsg="Point where the resource is allocated" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" rule.header="Ensure resources are deallocated" FirstElSrcRngStartln="22" locStartPos="21" analyzer="com.parasoft.jtest.flowanalyzer" id="-1154151088" lang="java" locEndPos="70" urgent="true" locEndLn="22" goals="1," locStartln="22" sev="1" locRef="20" tool="jtest" lineHash="1794515364" locType="sr" hash="2110246917" causeLocRef="20">
      <Props>
        <Prop key="Tracked variables" val="Allocated resource variable" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="274607265" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="20" ln="20" srcRngEndPos="40" srcRngStartln="20" srcRngStartPos="8" desc="ObjectInputStream source = null;" ElType="." rngLn="20" />
        <ElDesc lineHash="1794515364" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="22" ln="22" srcRngEndPos="70" srcRngStartln="22" srcRngStartPos="21" desc="new ObjectInputStream(new FileInputStream(&quot;...&quot;))" ElType="ECP" rngLn="22" thrownTypes="IOException" throwingMethod="ObjectInputStream.ObjectInputStream">
          <Props>
            <Prop key="Tracked variables" val="new FileInputStream(&quot;...&quot;)" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is allocated" kind="cause" />
            <Ann msg="ObjectInputStream.ObjectInputStream() throws IOException" kind="except" />
            <Ann msg="Allocated resource variable: new FileInputStream(&quot;...&quot;)" kind="var" />
            <Ann msg="Point where the allocated resource is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;storage.getValue()&quot; may possibly be null" ln="37" locFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ruleSAFMsg="Point where null value is appended to string" FirstElSrcRngEndPos="22" auth="kmarczyk" FirstElSrcRngEndLn="57" rule="BD.PB.STRNULL" FirstElSrcRngStartPos="8" lnHash="-107142727" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" rule.header="Do not append null value to strings" FirstElSrcRngStartln="57" locStartPos="16" analyzer="com.parasoft.jtest.flowanalyzer" id="1239794756" lang="java" locEndPos="55" urgent="true" locEndLn="37" goals="1," locStartln="37" sev="1" locRef="20" tool="jtest" lineHash="-107142727" locType="sr" hash="2110246917" causeLocRef="20">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="274607265" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="20" ln="20" srcRngEndPos="40" srcRngStartln="20" srcRngStartPos="8" desc="ObjectInputStream source = null;" ElType="." rngLn="20" />
        <ElDesc lineHash="1794515364" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="22" ln="22" srcRngEndPos="71" srcRngStartln="22" srcRngStartPos="12" desc="source = new ObjectInputStream(new FileInputStream(&quot;...&quot;));" ElType="." rngLn="22" />
        <ElDesc lineHash="-1163022704" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="23" ln="23" srcRngEndPos="52" srcRngStartln="23" srcRngStartPos="12" desc="System.out.println(&quot;Resolved objects:&quot;);" ElType="." rngLn="23" />
        <ElDesc lineHash="-895251233" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="24" ln="24" srcRngEndPos="45" srcRngStartln="24" srcRngStartPos="12" desc="Object obj = source.readObject();" ElType="." rngLn="24" />
        <ElDesc lineHash="-416744069" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="26" ln="25" srcRngEndPos="0" srcRngStartln="25" srcRngStartPos="12" desc="while (obj != null) {" ElType="." rngLn="25">
          <Anns>
            <Ann msg="Loop condition evaluation: (obj != null) (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1865899342" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="26" ln="26" srcRngEndPos="57" srcRngStartln="26" srcRngStartPos="39" desc="new ValueStorage()" ElType="!" rngLn="26">
          <ElDescList>
            <ElDesc lineHash="633669192" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="57" ln="57" srcRngEndPos="22" srcRngStartln="57" srcRngStartPos="8" desc="Object _value;" ElType=".C" rngLn="57">
              <Props>
                <Prop key="Tracked variables" val="this._value" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: this._value" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-1865899342" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="26" ln="26" srcRngEndPos="58" srcRngStartln="26" srcRngStartPos="16" desc="ValueStorage storage = new ValueStorage();" ElType="!" rngLn="26">
          <Props>
            <Prop key="Tracked variables" val="new ValueStorage()._value" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: new ValueStorage()._value" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1615636243" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="27" ln="27" srcRngEndPos="44" srcRngStartln="27" srcRngStartPos="16" desc="if (obj instanceof String) {" ElType="." rngLn="27">
          <Props>
            <Prop key="Tracked variables" val="storage._value" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: storage._value" kind="var" />
            <Ann msg="Condition evaluation: obj instanceof java.lang.String (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="570134625" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="31" ln="31" srcRngEndPos="65" srcRngStartln="31" srcRngStartPos="46" desc="source.readObject()" ElType="!E" rngLn="31" thrownTypes="IOException" throwingMethod="ObjectInputStream.readObject">
          <Anns>
            <Ann msg="ObjectInputStream.readObject() throws IOException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1711883152" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="33" ln="33" srcRngEndPos="42" srcRngStartln="33" srcRngStartPos="22" desc="catch (Exception e)" ElType="." rngLn="33" />
        <ElDesc lineHash="-1963747990" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="34" ln="34" srcRngEndPos="67" srcRngStartln="34" srcRngStartPos="24" desc="System.out.println(&quot;Cannot resolve value&quot;);" ElType="." rngLn="34" />
        <ElDesc lineHash="-107142727" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="37" ln="37" srcRngEndPos="53" srcRngStartln="37" srcRngStartPos="35" desc="storage.getValue()" ElType="!" rngLn="37">
          <ElDescList>
            <ElDesc lineHash="-869770471" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="60" ln="60" srcRngEndPos="26" srcRngStartln="60" srcRngStartPos="12" desc="return _value;" ElType="!" rngLn="60">
              <Props>
                <Prop key="Tracked variables" val="this._value" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: this._value" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-107142727" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="37" ln="37" srcRngEndPos="55" srcRngStartln="37" srcRngStartPos="16" desc="System.out.println(storage.getValue());" ElType=".P" rngLn="37">
          <Props>
            <Prop key="Tracked variables" val="storage.getValue()" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: storage.getValue()" kind="var" />
            <Ann msg="Point where null value is appended to string" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;storage.getValue()&quot; is used prior to explicit initialization" ln="37" locFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" ruleSAFMsg="Usage point" FirstElSrcRngEndPos="22" auth="kmarczyk" FirstElSrcRngEndLn="57" rule="BD.PB.NOTEXPLINIT" FirstElSrcRngStartPos="8" lnHash="-107142727" ruleSCSCMsg="Source of implicitly initialized value" pkg="examples.flowanalysis" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" rule.header="Avoid use before explicit initialization" FirstElSrcRngStartln="57" locStartPos="16" analyzer="com.parasoft.jtest.flowanalyzer" id="-366913564" lang="java" locEndPos="55" urgent="true" locEndLn="37" goals="1," locStartln="37" sev="1" locRef="20" tool="jtest" lineHash="-107142727" locType="sr" hash="2110246917" causeLocRef="20">
      <Props>
        <Prop key="Tracked variables" val="Not explicitly initialized value" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="274607265" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="20" ln="20" srcRngEndPos="40" srcRngStartln="20" srcRngStartPos="8" desc="ObjectInputStream source = null;" ElType="." rngLn="20" />
        <ElDesc lineHash="1794515364" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="22" ln="22" srcRngEndPos="71" srcRngStartln="22" srcRngStartPos="12" desc="source = new ObjectInputStream(new FileInputStream(&quot;...&quot;));" ElType="." rngLn="22" />
        <ElDesc lineHash="-1163022704" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="23" ln="23" srcRngEndPos="52" srcRngStartln="23" srcRngStartPos="12" desc="System.out.println(&quot;Resolved objects:&quot;);" ElType="." rngLn="23" />
        <ElDesc lineHash="-895251233" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="24" ln="24" srcRngEndPos="45" srcRngStartln="24" srcRngStartPos="12" desc="Object obj = source.readObject();" ElType="." rngLn="24" />
        <ElDesc lineHash="-416744069" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="26" ln="25" srcRngEndPos="0" srcRngStartln="25" srcRngStartPos="12" desc="while (obj != null) {" ElType="." rngLn="25">
          <Anns>
            <Ann msg="Loop condition evaluation: (obj != null) (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1865899342" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="26" ln="26" srcRngEndPos="57" srcRngStartln="26" srcRngStartPos="39" desc="new ValueStorage()" ElType="!" rngLn="26">
          <ElDescList>
            <ElDesc lineHash="633669192" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="57" ln="57" srcRngEndPos="22" srcRngStartln="57" srcRngStartPos="8" desc="Object _value;" ElType=".C" rngLn="57">
              <Props>
                <Prop key="Tracked variables" val="this._value" />
              </Props>
              <Anns>
                <Ann msg="Source of implicitly initialized value" kind="cause" />
                <Ann msg="Not explicitly initialized value: this._value" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-1865899342" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="26" ln="26" srcRngEndPos="58" srcRngStartln="26" srcRngStartPos="16" desc="ValueStorage storage = new ValueStorage();" ElType="!" rngLn="26">
          <Props>
            <Prop key="Tracked variables" val="new ValueStorage()._value" />
          </Props>
          <Anns>
            <Ann msg="Not explicitly initialized value: new ValueStorage()._value" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1615636243" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="27" ln="27" srcRngEndPos="44" srcRngStartln="27" srcRngStartPos="16" desc="if (obj instanceof String) {" ElType="." rngLn="27">
          <Props>
            <Prop key="Tracked variables" val="storage._value" />
          </Props>
          <Anns>
            <Ann msg="Not explicitly initialized value: storage._value" kind="var" />
            <Ann msg="Condition evaluation: obj instanceof java.lang.String (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="570134625" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="31" ln="31" srcRngEndPos="65" srcRngStartln="31" srcRngStartPos="46" desc="source.readObject()" ElType="!E" rngLn="31" thrownTypes="IOException" throwingMethod="ObjectInputStream.readObject">
          <Anns>
            <Ann msg="ObjectInputStream.readObject() throws IOException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1711883152" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="33" ln="33" srcRngEndPos="42" srcRngStartln="33" srcRngStartPos="22" desc="catch (Exception e)" ElType="." rngLn="33" />
        <ElDesc lineHash="-1963747990" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="34" ln="34" srcRngEndPos="67" srcRngStartln="34" srcRngStartPos="24" desc="System.out.println(&quot;Cannot resolve value&quot;);" ElType="." rngLn="34" />
        <ElDesc lineHash="-107142727" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="37" ln="37" srcRngEndPos="53" srcRngStartln="37" srcRngStartPos="35" desc="storage.getValue()" ElType="!" rngLn="37">
          <ElDescList>
            <ElDesc lineHash="-869770471" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="60" ln="60" srcRngEndPos="26" srcRngStartln="60" srcRngStartPos="12" desc="return _value;" ElType="!" rngLn="60">
              <Props>
                <Prop key="Tracked variables" val="this._value" />
              </Props>
              <Anns>
                <Ann msg="Not explicitly initialized value: this._value" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-107142727" locType="sr" srcRnghash="2110246917" locRef="20" srcRngFile="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" srcRngEndLn="37" ln="37" srcRngEndPos="55" srcRngStartln="37" srcRngStartPos="16" desc="System.out.println(storage.getValue());" ElType=".P" rngLn="37">
          <Props>
            <Prop key="Tracked variables" val="storage.getValue()" />
          </Props>
          <Anns>
            <Ann msg="Not explicitly initialized value: storage.getValue()" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;oid&quot; may possibly be null" ln="13" locFile="/demo/src/main/java/examples/flowanalysis/np/MessageFormatter.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="22" auth="kmarczyk" FirstElSrcRngEndLn="13" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="4" lnHash="-568163166" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis.np" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="13" locStartPos="27" analyzer="com.parasoft.jtest.flowanalyzer" id="1859891956" lang="java" locEndPos="77" locEndLn="13" goals="0," locStartln="13" sev="1" locRef="25" tool="jtest" lineHash="-568163166" locType="sr" hash="796982299" causeLocRef="23">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-864216146" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" srcRngEndLn="16" ln="16" srcRngEndPos="49" srcRngStartln="16" srcRngStartPos="29" desc="new DatabaseObject()" ElType="!" rngLn="16">
          <ElDescList>
            <ElDesc lineHash="1402874458" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" srcRngEndLn="13" ln="13" srcRngEndPos="22" srcRngStartln="13" srcRngStartPos="4" desc="Object oid = null;" ElType=".C" rngLn="13">
              <Props>
                <Prop key="Tracked variables" val="this.oid" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: this.oid" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-864216146" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" srcRngEndLn="16" ln="16" srcRngEndPos="50" srcRngStartln="16" srcRngStartPos="8" desc="DatabaseObject obj = new DatabaseObject();" ElType="!" rngLn="16">
          <Props>
            <Prop key="Tracked variables" val="new DatabaseObject().oid" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: new DatabaseObject().oid" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1951810480" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" srcRngEndLn="17" ln="17" srcRngEndPos="76" srcRngStartln="17" srcRngStartPos="8" desc="String sQuery = &quot;SELECT * FROM &quot; + table + &quot; WHERE id='&quot; + id + &quot;'&quot;;" ElType="." rngLn="17">
          <Props>
            <Prop key="Tracked variables" val="obj.oid" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: obj.oid" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-271783734" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" srcRngEndLn="18" ln="18" srcRngEndPos="30" srcRngStartln="18" srcRngStartPos="8" desc="Statement stmt = null;" ElType="." rngLn="18" />
        <ElDesc lineHash="920994605" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" srcRngEndLn="19" ln="19" srcRngEndPos="28" srcRngStartln="19" srcRngStartPos="8" desc="ResultSet rs = null;" ElType="." rngLn="19" />
        <ElDesc lineHash="203786084" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" srcRngEndLn="21" ln="21" srcRngEndPos="50" srcRngStartln="21" srcRngStartPos="12" desc="stmt = sqlConnection.createStatement()" ElType="!E" rngLn="21" thrownTypes="SQLException" throwingMethod="Connection.createStatement">
          <Anns>
            <Ann msg="Connection.createStatement() throws SQLException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1213180686" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" srcRngEndLn="28" ln="26" srcRngEndPos="9" srcRngStartln="26" srcRngStartPos="10" desc="catch (SQLException sqle) {" ElType="." rngLn="26" />
        <ElDesc lineHash="1132095587" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" srcRngEndLn="29" ln="29" srcRngEndPos="22" srcRngStartln="29" srcRngStartPos="12" desc="close(rs);" ElType="." rngLn="29">
          <ElDescList>
            <ElDesc lineHash="-1102065577" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" srcRngEndLn="45" ln="45" srcRngEndPos="25" srcRngStartln="45" srcRngStartPos="8" desc="if (rs == null) {" ElType="." rngLn="45">
              <Anns>
                <Ann msg="Condition evaluation: (rs == null) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1196601077" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" srcRngEndLn="46" ln="46" srcRngEndPos="19" srcRngStartln="46" srcRngStartPos="12" desc="return;" ElType="." rngLn="46" />
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1348767786" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" srcRngEndLn="30" ln="30" srcRngEndPos="24" srcRngStartln="30" srcRngStartPos="12" desc="close(stmt);" ElType="." rngLn="30">
          <ElDescList>
            <ElDesc lineHash="1987037616" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" srcRngEndLn="55" ln="55" srcRngEndPos="27" srcRngStartln="55" srcRngStartPos="8" desc="if (stmt == null) {" ElType="." rngLn="55">
              <Anns>
                <Ann msg="Condition evaluation: (stmt == null) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1196601077" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" srcRngEndLn="56" ln="56" srcRngEndPos="19" srcRngStartln="56" srcRngStartPos="12" desc="return;" ElType="." rngLn="56" />
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="1945770374" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" srcRngEndLn="32" ln="32" srcRngEndPos="43" srcRngStartln="32" srcRngStartPos="8" desc="MessageFormatter.printMessage(obj);" ElType="!" rngLn="32">
          <ElDescList>
            <ElDesc lineHash="2011414693" locType="sr" srcRnghash="796982299" locRef="25" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/MessageFormatter.java" srcRngEndLn="9" ln="9" srcRngEndPos="39" srcRngStartln="9" srcRngStartPos="21" desc="obj.getClassName()" ElType="." rngLn="9">
              <ElDescList>
                <ElDesc lineHash="-1919500060" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" srcRngEndLn="37" ln="37" srcRngEndPos="41" srcRngStartln="37" srcRngStartPos="8" desc="return this.getClass().getName();" ElType="." rngLn="37">
                  <Props>
                    <Prop key="Tracked variables" val="this.oid" />
                  </Props>
                  <Anns>
                    <Ann msg="Null value carrier: this.oid" kind="var" />
                  </Anns>
                </ElDesc>
              </ElDescList>
              <Props>
                <Prop key="Tracked variables" val="obj.oid" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: obj.oid" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="2011414693" locType="sr" srcRnghash="796982299" locRef="25" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/MessageFormatter.java" srcRngEndLn="9" ln="9" srcRngEndPos="53" srcRngStartln="9" srcRngStartPos="41" desc="obj.getOID()" ElType="!" rngLn="9">
              <ElDescList>
                <ElDesc lineHash="1890282657" locType="sr" srcRnghash="635578452" locRef="23" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" srcRngEndLn="41" ln="41" srcRngEndPos="19" srcRngStartln="41" srcRngStartPos="8" desc="return oid;" ElType="!" rngLn="41">
                  <Props>
                    <Prop key="Tracked variables" val="this.oid" />
                  </Props>
                  <Anns>
                    <Ann msg="Null value carrier: this.oid" kind="var" />
                  </Anns>
                </ElDesc>
              </ElDescList>
            </ElDesc>
            <ElDesc lineHash="2011414693" locType="sr" srcRnghash="796982299" locRef="25" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/MessageFormatter.java" srcRngEndLn="9" ln="9" srcRngEndPos="55" srcRngStartln="9" srcRngStartPos="8" desc="printMessage(obj.getClassName(), obj.getOID());" ElType="!" rngLn="9">
              <ElDescList>
                <ElDesc lineHash="-568163166" locType="sr" srcRnghash="796982299" locRef="25" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/MessageFormatter.java" srcRngEndLn="13" ln="13" srcRngEndPos="77" srcRngStartln="13" srcRngStartPos="27" desc="&quot;[&quot; + className.toString() + &quot;] &quot; + oid.toString()" ElType=".P" rngLn="13">
                  <Props>
                    <Prop key="Tracked variables" val="oid" />
                  </Props>
                  <Anns>
                    <Ann msg="Null value carrier: oid" kind="var" />
                    <Ann msg="NullPointerException point" kind="point" />
                  </Anns>
                </ElDesc>
              </ElDescList>
              <Props>
                <Prop key="Tracked variables" val="obj.getOID()" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: obj.getOID()" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;strKey&quot; may possibly be null" ln="18" locFile="/demo/src/main/java/examples/flowanalysis/np/MyDictionary.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="29" auth="kmarczyk" FirstElSrcRngEndLn="14" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="-1504762512" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis.np" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/np/MyDictionary.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="14" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="-182007423" lang="java" locEndPos="32" urgent="true" locEndLn="18" goals="1," locStartln="18" sev="1" locRef="26" tool="jtest" lineHash="-1504762512" locType="sr" hash="1067996598" causeLocRef="26">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-1935852018" locType="sr" srcRnghash="1067996598" locRef="26" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/MyDictionary.java" srcRngEndLn="14" ln="14" srcRngEndPos="29" srcRngStartln="14" srcRngStartPos="8" desc="String strKey = null;" ElType=".C" rngLn="14">
          <Props>
            <Prop key="Tracked variables" val="strKey" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: strKey" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1183172741" locType="sr" srcRnghash="1067996598" locRef="26" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/MyDictionary.java" srcRngEndLn="15" ln="15" srcRngEndPos="36" srcRngStartln="15" srcRngStartPos="8" desc="if (key instanceof String) {" ElType="." rngLn="15">
          <Anns>
            <Ann msg="Condition evaluation: key instanceof java.lang.String (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1504762512" locType="sr" srcRnghash="1067996598" locRef="26" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/MyDictionary.java" srcRngEndLn="18" ln="18" srcRngEndPos="32" srcRngStartln="18" srcRngStartPos="8" desc="dict.put(strKey, value);" ElType=".P" rngLn="18">
          <Props>
            <Prop key="Tracked variables" val="strKey" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: strKey" kind="var" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;sFirstLine&quot; may possibly be null" ln="22" locFile="/demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="33" auth="kmarczyk" FirstElSrcRngEndLn="12" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="-1543564921" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis.np" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/np/NullPointer.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="12" locStartPos="15" analyzer="com.parasoft.jtest.flowanalyzer" id="-1507694609" lang="java" locEndPos="34" urgent="true" locEndLn="22" goals="1," locStartln="22" sev="1" locRef="27" tool="jtest" lineHash="-1543564921" locType="sr" hash="-51902665" causeLocRef="27">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-989328207" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/NullPointer.java" srcRngEndLn="12" ln="12" srcRngEndPos="33" srcRngStartln="12" srcRngStartPos="8" desc="String sFirstLine = null;" ElType=".C" rngLn="12">
          <Props>
            <Prop key="Tracked variables" val="sFirstLine" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: sFirstLine" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="191709394" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/NullPointer.java" srcRngEndLn="13" ln="13" srcRngEndPos="37" srcRngStartln="13" srcRngStartPos="8" desc="BufferedReader reader = null;" ElType="." rngLn="13" />
        <ElDesc lineHash="-1664407388" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/NullPointer.java" srcRngEndLn="15" ln="15" srcRngEndPos="65" srcRngStartln="15" srcRngStartPos="40" desc="new FileReader(sFileName)" ElType="!E" rngLn="15" thrownTypes="FileNotFoundException" throwingMethod="FileReader.FileReader">
          <Anns>
            <Ann msg="FileReader.FileReader() throws FileNotFoundException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="100324464" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/NullPointer.java" srcRngEndLn="17" ln="17" srcRngEndPos="30" srcRngStartln="17" srcRngStartPos="10" desc="catch (Exception e)" ElType="." rngLn="17" />
        <ElDesc lineHash="-747252483" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/NullPointer.java" srcRngEndLn="18" ln="18" srcRngEndPos="69" srcRngStartln="18" srcRngStartPos="12" desc="System.out.println(&quot;Exception occured. &quot; + e.toString());" ElType="." rngLn="18" />
        <ElDesc lineHash="853738085" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/NullPointer.java" srcRngEndLn="20" ln="20" srcRngEndPos="26" srcRngStartln="20" srcRngStartPos="12" desc="close(reader);" ElType="." rngLn="20">
          <ElDescList>
            <ElDesc lineHash="-2039937235" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/NullPointer.java" srcRngEndLn="27" ln="27" srcRngEndPos="27" srcRngStartln="27" srcRngStartPos="12" desc="reader.close();" ElType="." rngLn="27" />
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-1543564921" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/NullPointer.java" srcRngEndLn="22" ln="22" srcRngEndPos="34" srcRngStartln="22" srcRngStartPos="15" desc="sFirstLine.length()" ElType=".P" rngLn="22">
          <Props>
            <Prop key="Tracked variables" val="sFirstLine" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: sFirstLine" kind="var" />
            <Ann msg="NullPointerException point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;reader&quot; may possibly be null" ln="27" locFile="/demo/src/main/java/examples/flowanalysis/np/NullPointer.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="37" auth="kmarczyk" FirstElSrcRngEndLn="13" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="8" lnHash="-2039937235" ruleSCSCMsg="Source of null value" pkg="examples.flowanalysis.np" FirstElSrcRngFile="/demo/src/main/java/examples/flowanalysis/np/NullPointer.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="13" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="663054357" lang="java" locEndPos="27" locEndLn="27" goals="0," locStartln="27" sev="1" locRef="27" tool="jtest" lineHash="-2039937235" locType="sr" hash="-51902665" causeLocRef="27">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-989328207" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/NullPointer.java" srcRngEndLn="12" ln="12" srcRngEndPos="33" srcRngStartln="12" srcRngStartPos="8" desc="String sFirstLine = null;" ElType="." rngLn="12" />
        <ElDesc lineHash="191709394" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/NullPointer.java" srcRngEndLn="13" ln="13" srcRngEndPos="37" srcRngStartln="13" srcRngStartPos="8" desc="BufferedReader reader = null;" ElType=".C" rngLn="13">
          <Props>
            <Prop key="Tracked variables" val="reader" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: reader" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1664407388" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/NullPointer.java" srcRngEndLn="15" ln="15" srcRngEndPos="65" srcRngStartln="15" srcRngStartPos="40" desc="new FileReader(sFileName)" ElType="!E" rngLn="15" thrownTypes="FileNotFoundException" throwingMethod="FileReader.FileReader">
          <Anns>
            <Ann msg="FileReader.FileReader() throws FileNotFoundException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="100324464" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/NullPointer.java" srcRngEndLn="17" ln="17" srcRngEndPos="30" srcRngStartln="17" srcRngStartPos="10" desc="catch (Exception e)" ElType="." rngLn="17" />
        <ElDesc lineHash="-747252483" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/NullPointer.java" srcRngEndLn="18" ln="18" srcRngEndPos="69" srcRngStartln="18" srcRngStartPos="12" desc="System.out.println(&quot;Exception occured. &quot; + e.toString());" ElType="." rngLn="18" />
        <ElDesc lineHash="853738085" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/NullPointer.java" srcRngEndLn="20" ln="20" srcRngEndPos="26" srcRngStartln="20" srcRngStartPos="12" desc="close(reader);" ElType="!" rngLn="20">
          <ElDescList>
            <ElDesc lineHash="-2039937235" locType="sr" srcRnghash="-51902665" locRef="27" srcRngFile="/demo/src/main/java/examples/flowanalysis/np/NullPointer.java" srcRngEndLn="27" ln="27" srcRngEndPos="27" srcRngStartln="27" srcRngStartPos="12" desc="reader.close();" ElType=".P" rngLn="27">
              <Props>
                <Prop key="Tracked variables" val="reader" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: reader" kind="var" />
                <Ann msg="NullPointerException point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Inefficient removal from collection &quot;this.fMonies&quot;. Remove elements by &quot;Iterator.remove()&quot;" ln="52" locFile="/demo/src/main/java/examples/junit/MoneyBag.java" ruleSAFMsg="Point where element is removed from collection" FirstElSrcRngEndPos="28" auth="kmarczyk" FirstElSrcRngEndLn="79" rule="BD.OPT.INEFCOL" FirstElSrcRngStartPos="8" lnHash="146087538" ruleSCSCMsg="Point of getting iterator" pkg="examples.junit" FirstElSrcRngFile="/demo/src/main/java/examples/junit/MoneyBag.java" rule.header="Avoid inefficient removal of Collection elements" FirstElSrcRngStartln="77" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="-1725867636" lang="java" locEndPos="28" urgent="true" locEndLn="52" goals="1," locStartln="52" sev="3" locRef="33" tool="jtest" lineHash="146087538" locType="sr" hash="-113332437" causeLocRef="33">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-210416179" locType="sr" srcRnghash="-113332437" locRef="33" srcRngFile="/demo/src/main/java/examples/junit/MoneyBag.java" srcRngEndLn="47" ln="47" srcRngEndPos="50" srcRngStartln="47" srcRngStartPos="8" desc="IMoney old = findMoney(aMoney.currency());" ElType="!" rngLn="47">
          <ElDescList>
            <ElDesc lineHash="-2088105684" locType="sr" srcRnghash="-113332437" locRef="33" srcRngFile="/demo/src/main/java/examples/junit/MoneyBag.java" srcRngEndLn="79" ln="77" srcRngEndPos="28" srcRngStartln="77" srcRngStartPos="8" desc="for (Money each : fMonies)" ElType=".C" rngLn="77">
              <Anns>
                <Ann msg="Point of getting iterator" kind="cause" />
                <Ann msg="Loop condition evaluation: this.fMonies.iterator().hasNext() (assuming true)" kind="condEval" />
                <Ann msg="Entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1007878298" locType="sr" srcRnghash="-113332437" locRef="33" srcRngFile="/demo/src/main/java/examples/junit/MoneyBag.java" srcRngEndLn="78" ln="78" srcRngEndPos="31" srcRngStartln="78" srcRngStartPos="16" desc="each.currency()" ElType="." rngLn="78">
              <ElDescList>
                <ElDesc lineHash="-584175244" locType="sr" srcRnghash="-1765121077" locRef="32" srcRngFile="/demo/src/main/java/examples/junit/Money.java" srcRngEndLn="43" ln="43" srcRngEndPos="25" srcRngStartln="43" srcRngStartPos="8" desc="return fCurrency;" ElType="." rngLn="43" />
              </ElDescList>
            </ElDesc>
            <ElDesc lineHash="-1007878298" locType="sr" srcRnghash="-113332437" locRef="33" srcRngFile="/demo/src/main/java/examples/junit/MoneyBag.java" srcRngEndLn="79" ln="78" srcRngEndPos="17" srcRngStartln="78" srcRngStartPos="12" desc="if (each.currency().equals(currency))" ElType="." rngLn="78">
              <Anns>
                <Ann msg="Condition evaluation: each.currency().equals(currency) (assuming true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-740054166" locType="sr" srcRnghash="-113332437" locRef="33" srcRngFile="/demo/src/main/java/examples/junit/MoneyBag.java" srcRngEndLn="79" ln="79" srcRngEndPos="28" srcRngStartln="79" srcRngStartPos="16" desc="return each;" ElType="." rngLn="79" />
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="-803811429" locType="sr" srcRnghash="-113332437" locRef="33" srcRngFile="/demo/src/main/java/examples/junit/MoneyBag.java" srcRngEndLn="48" ln="48" srcRngEndPos="26" srcRngStartln="48" srcRngStartPos="8" desc="if (old == null) {" ElType="." rngLn="48">
          <Anns>
            <Ann msg="Condition evaluation: (old == null) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="146087538" locType="sr" srcRnghash="-113332437" locRef="33" srcRngFile="/demo/src/main/java/examples/junit/MoneyBag.java" srcRngEndLn="52" ln="52" srcRngEndPos="28" srcRngStartln="52" srcRngStartPos="8" desc="fMonies.remove(old);" ElType=".P" rngLn="52">
          <Anns>
            <Ann msg="Point where element is removed from collection" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="File not closed: file" ln="14" locFile="/demo/src/main/java/examples/mock/ConstructorExample.java" ruleSAFMsg="Point where the allocated resource is lost" FirstElSrcRngEndPos="64" auth="kmarczyk" FirstElSrcRngEndLn="12" rule="BD.RES.LEAKS" FirstElSrcRngStartPos="32" lnHash="30537853" ruleSCSCMsg="Point where the resource is allocated" pkg="examples.mock" FirstElSrcRngFile="/demo/src/main/java/examples/mock/ConstructorExample.java" rule.header="Ensure resources are deallocated" FirstElSrcRngStartln="12" locStartPos="4" analyzer="com.parasoft.jtest.flowanalyzer" id="1228750743" lang="java" locEndPos="5" locEndLn="14" goals="0," locStartln="14" sev="1" locRef="38" tool="jtest" lineHash="30537853" locType="sr" hash="-458905718" causeLocRef="38">
      <Props>
        <Prop key="Tracked variables" val="Allocated resource variable" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="89628897" locType="sr" srcRnghash="-458905718" locRef="38" srcRngFile="/demo/src/main/java/examples/mock/ConstructorExample.java" srcRngEndLn="12" ln="12" srcRngEndPos="65" srcRngStartln="12" srcRngStartPos="8" desc="RandomAccessFile file = new RandomAccessFile(path, &quot;rw&quot;);" ElType=".C" rngLn="12">
          <Props>
            <Prop key="Tracked variables" val="new RandomAccessFile(path, &quot;rw&quot;)" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is allocated" kind="cause" />
            <Ann msg="Allocated resource variable: new RandomAccessFile(path, &quot;rw&quot;)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1885716046" locType="sr" srcRnghash="-458905718" locRef="38" srcRngFile="/demo/src/main/java/examples/mock/ConstructorExample.java" srcRngEndLn="13" ln="13" srcRngEndPos="28" srcRngStartln="13" srcRngStartPos="15" desc="file.length()" ElType="!E" rngLn="13" thrownTypes="IOException" throwingMethod="RandomAccessFile.length">
          <Props>
            <Prop key="Tracked variables" val="file" />
          </Props>
          <Anns>
            <Ann msg="RandomAccessFile.length() throws IOException" kind="except" />
            <Ann msg="Allocated resource variable: file" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="30537853" locType="sr" srcRnghash="-458905718" locRef="38" srcRngFile="/demo/src/main/java/examples/mock/ConstructorExample.java" srcRngEndLn="14" ln="14" srcRngEndPos="5" srcRngStartln="14" srcRngStartPos="4" desc="}" ElType=".P" rngLn="14">
          <Props>
            <Prop key="Tracked variables" val="file" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: file" kind="var" />
            <Ann msg="Point where the allocated resource is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;balance >= 5000&quot; always evaluates to true" ln="35" locFile="/demo/src/main/java/examples/nbank/Account.java" ruleSAFMsg="Point where senseless condition is used" FirstElSrcRngEndPos="49" auth="Mark Wilson" FirstElSrcRngEndLn="32" rule="BD.PB.CC" FirstElSrcRngStartPos="19" lnHash="729855832" ruleSCSCMsg="Start of the path" pkg="examples.nbank" FirstElSrcRngFile="/demo/src/main/java/examples/nbank/Account.java" rule.header="Avoid conditions that always evaluate to the same value" FirstElSrcRngStartln="32" locStartPos="19" analyzer="com.parasoft.jtest.flowanalyzer" id="-167612809" lang="java" locEndPos="48" urgent="true" locEndLn="35" goals="1," locStartln="35" sev="2" locRef="43" tool="jtest" lineHash="729855832" locType="sr" hash="-1300196067" causeLocRef="43">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-1809142446" locType="sr" srcRnghash="-1300196067" locRef="43" srcRngFile="/demo/src/main/java/examples/nbank/Account.java" srcRngEndLn="32" ln="32" srcRngEndPos="49" srcRngStartln="32" srcRngStartPos="19" desc="setAccountStatus(int balance)" ElType=".C" rngLn="32">
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1153895073" locType="sr" srcRnghash="-1300196067" locRef="43" srcRngFile="/demo/src/main/java/examples/nbank/Account.java" srcRngEndLn="33" ln="33" srcRngEndPos="41" srcRngStartln="33" srcRngStartPos="8" desc="if (balance &lt; BALANCE_GOLD_MIN) {" ElType="." rngLn="33">
          <Anns>
            <Ann msg="Condition evaluation: (balance &lt; 5000) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="729855832" locType="sr" srcRnghash="-1300196067" locRef="43" srcRngFile="/demo/src/main/java/examples/nbank/Account.java" srcRngEndLn="35" ln="35" srcRngEndPos="48" srcRngStartln="35" srcRngStartPos="19" desc="(balance >= BALANCE_GOLD_MIN)" ElType=".P" rngLn="35">
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;balance >= 5000&quot; always evaluates to true" ln="62" locFile="/demo/src/main/java/examples/nbank/Account.java" ruleSAFMsg="Point where senseless condition is used" FirstElSrcRngEndPos="40" auth="Mark Wilson" FirstElSrcRngEndLn="58" rule="BD.PB.CC" FirstElSrcRngStartPos="16" lnHash="729855832" ruleSCSCMsg="Start of the path" pkg="examples.nbank" FirstElSrcRngFile="/demo/src/main/java/examples/nbank/Account.java" rule.header="Avoid conditions that always evaluate to the same value" FirstElSrcRngStartln="58" locStartPos="19" analyzer="com.parasoft.jtest.flowanalyzer" id="-583604748" lang="java" locEndPos="48" urgent="true" locEndLn="62" goals="1," locStartln="62" sev="2" locRef="43" tool="jtest" lineHash="729855832" locType="sr" hash="-1300196067" causeLocRef="43">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-349452654" locType="sr" srcRnghash="-1300196067" locRef="43" srcRngFile="/demo/src/main/java/examples/nbank/Account.java" srcRngEndLn="58" ln="58" srcRngEndPos="40" srcRngStartln="58" srcRngStartPos="16" desc="setBalance(int balance)" ElType=".C" rngLn="58">
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1662992443" locType="sr" srcRnghash="-1300196067" locRef="43" srcRngFile="/demo/src/main/java/examples/nbank/Account.java" srcRngEndLn="59" ln="59" srcRngEndPos="27" srcRngStartln="59" srcRngStartPos="8" desc="_balance = balance;" ElType="." rngLn="59" />
        <ElDesc lineHash="1153895073" locType="sr" srcRnghash="-1300196067" locRef="43" srcRngFile="/demo/src/main/java/examples/nbank/Account.java" srcRngEndLn="60" ln="60" srcRngEndPos="41" srcRngStartln="60" srcRngStartPos="8" desc="if (balance &lt; BALANCE_GOLD_MIN) {" ElType="." rngLn="60">
          <Anns>
            <Ann msg="Condition evaluation: (balance &lt; 5000) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="729855832" locType="sr" srcRnghash="-1300196067" locRef="43" srcRngFile="/demo/src/main/java/examples/nbank/Account.java" srcRngEndLn="62" ln="62" srcRngEndPos="48" srcRngStartln="62" srcRngStartPos="19" desc="(balance >= BALANCE_GOLD_MIN)" ElType=".P" rngLn="62">
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="The thrown exception of the &quot;IllegalArgumentException&quot; type in the &quot;main&quot; method has not been caught" ln="26" locFile="/demo/src/main/java/examples/nbank/Customer.java" ruleSAFMsg="Point where the uncaught exception is thrown" FirstElSrcRngEndPos="43" auth="Mark Wilson" FirstElSrcRngEndLn="97" rule="BD.PB.EXCEPT" FirstElSrcRngStartPos="23" lnHash="-1888950888" ruleSCSCMsg="Start of the path" pkg="examples.nbank" FirstElSrcRngFile="/demo/src/main/java/examples/nbank/Customer.java" rule.header="Always catch exceptions" FirstElSrcRngStartln="97" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="-1185893213" lang="java" locEndPos="89" urgent="true" locEndLn="26" goals="1," locStartln="26" sev="2" locRef="48" tool="jtest" lineHash="-1888950888" locType="sr" hash="2046383933" causeLocRef="48">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-1228458120" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="97" ln="97" srcRngEndPos="43" srcRngStartln="97" srcRngStartPos="23" desc="main(String[] args)" ElType=".C" rngLn="97">
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="1093708088" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="98" ln="98" srcRngEndPos="63" srcRngStartln="98" srcRngStartPos="22" desc="new Customer(&quot;Mary Smith&quot;, &quot;111-11-1111&quot;)" ElType="!E" rngLn="98" thrownTypes="IllegalArgumentException" throwingMethod="Customer.Customer">
          <ElDescList>
            <ElDesc lineHash="1185825189" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="24" ln="23" srcRngEndPos="13" srcRngStartln="23" srcRngStartPos="8" desc="if (name.length() >= 20)" ElType="." rngLn="23">
              <Anns>
                <Ann msg="Condition evaluation: (name.length() >= 20) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-719839355" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="26" ln="25" srcRngEndPos="13" srcRngStartln="25" srcRngStartPos="8" desc="if (!ssn.matches(SSN_REGEX))" ElType="." rngLn="25">
              <Anns>
                <Ann msg="Condition evaluation: !ssn.matches(SSN_REGEX) (assuming true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="-1888950888" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="26" ln="26" srcRngEndPos="89" srcRngStartln="26" srcRngStartPos="12" desc="throw new IllegalArgumentException(&quot;Invalid social security number: &quot; + ssn);" ElType="EP" rngLn="26" thrownTypes="throwStatement" throwingMethod="">
              <Anns>
                <Ann msg="Throws an exception" kind="except" />
                <Ann msg="Point where the uncaught exception is thrown" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Anns>
            <Ann msg="Customer.Customer() throws IllegalArgumentException" kind="except" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="JDBC Connection not closed: connection" ln="95" locFile="/demo/src/main/java/examples/nbank/Customer.java" ruleSAFMsg="Point where the allocated resource is lost" FirstElSrcRngEndPos="78" auth="Mark Wilson" FirstElSrcRngEndLn="75" rule="BD.RES.LEAKS" FirstElSrcRngStartPos="12" lnHash="30537853" ruleSCSCMsg="Point where the resource is allocated" pkg="examples.nbank" FirstElSrcRngFile="/demo/src/main/java/examples/nbank/Customer.java" rule.header="Ensure resources are deallocated" FirstElSrcRngStartln="75" locStartPos="4" analyzer="com.parasoft.jtest.flowanalyzer" id="943312595" lang="java" locEndPos="5" urgent="true" locEndLn="95" goals="1," locStartln="95" sev="1" locRef="48" tool="jtest" lineHash="30537853" locType="sr" hash="2046383933" causeLocRef="48">
      <Props>
        <Prop key="Tracked variables" val="Allocated resource variable" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-1809401071" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="70" ln="70" srcRngEndPos="37" srcRngStartln="70" srcRngStartPos="8" desc="Connection connection = null;" ElType="." rngLn="70" />
        <ElDesc lineHash="-185589454" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="71" ln="71" srcRngEndPos="43" srcRngStartln="71" srcRngStartPos="8" desc="PreparedStatement statement = null;" ElType="." rngLn="71" />
        <ElDesc lineHash="-1589018789" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="72" ln="72" srcRngEndPos="35" srcRngStartln="72" srcRngStartPos="8" desc="ResultSet resultSet = null;" ElType="." rngLn="72" />
        <ElDesc lineHash="-439487439" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="74" ln="74" srcRngEndPos="53" srcRngStartln="74" srcRngStartPos="12" desc="Class.forName(&quot;org.gjt.mm.mysql.Driver&quot;);" ElType="." rngLn="74" />
        <ElDesc lineHash="1774293749" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="75" ln="75" srcRngEndPos="78" srcRngStartln="75" srcRngStartPos="12" desc="connection = DriverManager.getConnection(&quot;bank&quot;, &quot;bank&quot;, &quot;system&quot;)" ElType=".C" rngLn="75">
          <Props>
            <Prop key="Tracked variables" val="connection" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is allocated" kind="cause" />
            <Ann msg="Allocated resource variable: connection" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1624193955" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="84" ln="84" srcRngEndPos="94" srcRngStartln="84" srcRngStartPos="12" desc="statement = connection.prepareStatement(&quot;select * from accounts where id=&quot; + _ssn)" ElType="!E" rngLn="84" thrownTypes="SQLException" throwingMethod="Connection.prepareStatement">
          <Anns>
            <Ann msg="Connection.prepareStatement() throws SQLException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1741528140" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="90" ln="90" srcRngEndPos="41" srcRngStartln="90" srcRngStartPos="10" desc="catch (SQLException exception)" ElType="." rngLn="90" />
        <ElDesc lineHash="875386708" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="91" ln="91" srcRngEndPos="94" srcRngStartln="91" srcRngStartPos="12" desc="System.err.println(&quot;Error loading data from database: &quot; + exception.getMessage());" ElType="." rngLn="91" />
        <ElDesc lineHash="14739560" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="92" ln="92" srcRngEndPos="25" srcRngStartln="92" srcRngStartPos="12" desc="return false;" ElType="." rngLn="92" />
        <ElDesc lineHash="30537853" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="95" ln="95" srcRngEndPos="5" srcRngStartln="95" srcRngStartPos="4" desc="}" ElType=".P" rngLn="95">
          <Props>
            <Prop key="Tracked variables" val="connection" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: connection" kind="var" />
            <Ann msg="Point where the allocated resource is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="JDBC statement not closed: statement" ln="95" locFile="/demo/src/main/java/examples/nbank/Customer.java" ruleSAFMsg="Point where the allocated resource is lost" FirstElSrcRngEndPos="94" auth="Mark Wilson" FirstElSrcRngEndLn="84" rule="BD.RES.LEAKS" FirstElSrcRngStartPos="12" lnHash="30537853" ruleSCSCMsg="Point where the resource is allocated" pkg="examples.nbank" FirstElSrcRngFile="/demo/src/main/java/examples/nbank/Customer.java" rule.header="Ensure resources are deallocated" FirstElSrcRngStartln="84" locStartPos="4" analyzer="com.parasoft.jtest.flowanalyzer" id="1673964009" lang="java" locEndPos="5" urgent="true" locEndLn="95" goals="1," locStartln="95" sev="1" locRef="48" tool="jtest" lineHash="30537853" locType="sr" hash="2046383933" causeLocRef="48">
      <Props>
        <Prop key="Tracked variables" val="Allocated resource variable" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-1809401071" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="70" ln="70" srcRngEndPos="37" srcRngStartln="70" srcRngStartPos="8" desc="Connection connection = null;" ElType="." rngLn="70" />
        <ElDesc lineHash="-185589454" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="71" ln="71" srcRngEndPos="43" srcRngStartln="71" srcRngStartPos="8" desc="PreparedStatement statement = null;" ElType="." rngLn="71" />
        <ElDesc lineHash="-1589018789" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="72" ln="72" srcRngEndPos="35" srcRngStartln="72" srcRngStartPos="8" desc="ResultSet resultSet = null;" ElType="." rngLn="72" />
        <ElDesc lineHash="-439487439" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="74" ln="74" srcRngEndPos="53" srcRngStartln="74" srcRngStartPos="12" desc="Class.forName(&quot;org.gjt.mm.mysql.Driver&quot;);" ElType="." rngLn="74" />
        <ElDesc lineHash="1774293749" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="75" ln="75" srcRngEndPos="78" srcRngStartln="75" srcRngStartPos="12" desc="connection = DriverManager.getConnection(&quot;bank&quot;, &quot;bank&quot;, &quot;system&quot;)" ElType="." rngLn="75" />
        <ElDesc lineHash="-1624193955" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="84" ln="84" srcRngEndPos="94" srcRngStartln="84" srcRngStartPos="12" desc="statement = connection.prepareStatement(&quot;select * from accounts where id=&quot; + _ssn)" ElType=".C" rngLn="84">
          <Props>
            <Prop key="Tracked variables" val="statement" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is allocated" kind="cause" />
            <Ann msg="Allocated resource variable: statement" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1368283926" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="85" ln="85" srcRngEndPos="48" srcRngStartln="85" srcRngStartPos="12" desc="resultSet = statement.executeQuery()" ElType="!E" rngLn="85" thrownTypes="SQLException" throwingMethod="PreparedStatement.executeQuery">
          <Anns>
            <Ann msg="PreparedStatement.executeQuery() throws SQLException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1741528140" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="90" ln="90" srcRngEndPos="41" srcRngStartln="90" srcRngStartPos="10" desc="catch (SQLException exception)" ElType="." rngLn="90" />
        <ElDesc lineHash="875386708" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="91" ln="91" srcRngEndPos="94" srcRngStartln="91" srcRngStartPos="12" desc="System.err.println(&quot;Error loading data from database: &quot; + exception.getMessage());" ElType="." rngLn="91" />
        <ElDesc lineHash="14739560" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="92" ln="92" srcRngEndPos="25" srcRngStartln="92" srcRngStartPos="12" desc="return false;" ElType="." rngLn="92" />
        <ElDesc lineHash="30537853" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="95" ln="95" srcRngEndPos="5" srcRngStartln="95" srcRngStartPos="4" desc="}" ElType=".P" rngLn="95">
          <Props>
            <Prop key="Tracked variables" val="statement" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: statement" kind="var" />
            <Ann msg="Point where the allocated resource is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="JDBC resultset not closed: statement.resultSet(), resultSet" ln="95" locFile="/demo/src/main/java/examples/nbank/Customer.java" ruleSAFMsg="Point where the allocated resource is lost" FirstElSrcRngEndPos="48" auth="Mark Wilson" FirstElSrcRngEndLn="85" rule="BD.RES.LEAKS" FirstElSrcRngStartPos="12" lnHash="30537853" ruleSCSCMsg="Point where the resource is allocated" pkg="examples.nbank" FirstElSrcRngFile="/demo/src/main/java/examples/nbank/Customer.java" rule.header="Ensure resources are deallocated" FirstElSrcRngStartln="85" locStartPos="4" analyzer="com.parasoft.jtest.flowanalyzer" id="1807471661" lang="java" locEndPos="5" urgent="true" locEndLn="95" goals="1," locStartln="95" sev="1" locRef="48" tool="jtest" lineHash="30537853" locType="sr" hash="2046383933" causeLocRef="48">
      <Props>
        <Prop key="Tracked variables" val="Allocated resource variable" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-1809401071" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="70" ln="70" srcRngEndPos="37" srcRngStartln="70" srcRngStartPos="8" desc="Connection connection = null;" ElType="." rngLn="70" />
        <ElDesc lineHash="-185589454" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="71" ln="71" srcRngEndPos="43" srcRngStartln="71" srcRngStartPos="8" desc="PreparedStatement statement = null;" ElType="." rngLn="71" />
        <ElDesc lineHash="-1589018789" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="72" ln="72" srcRngEndPos="35" srcRngStartln="72" srcRngStartPos="8" desc="ResultSet resultSet = null;" ElType="." rngLn="72" />
        <ElDesc lineHash="-439487439" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="74" ln="74" srcRngEndPos="53" srcRngStartln="74" srcRngStartPos="12" desc="Class.forName(&quot;org.gjt.mm.mysql.Driver&quot;);" ElType="." rngLn="74" />
        <ElDesc lineHash="1774293749" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="75" ln="75" srcRngEndPos="78" srcRngStartln="75" srcRngStartPos="12" desc="connection = DriverManager.getConnection(&quot;bank&quot;, &quot;bank&quot;, &quot;system&quot;)" ElType="." rngLn="75" />
        <ElDesc lineHash="-1624193955" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="84" ln="84" srcRngEndPos="94" srcRngStartln="84" srcRngStartPos="12" desc="statement = connection.prepareStatement(&quot;select * from accounts where id=&quot; + _ssn)" ElType="." rngLn="84" />
        <ElDesc lineHash="-1368283926" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="85" ln="85" srcRngEndPos="48" srcRngStartln="85" srcRngStartPos="12" desc="resultSet = statement.executeQuery()" ElType=".C" rngLn="85">
          <Props>
            <Prop key="Tracked variables" val="statement.resultSet(), resultSet" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is allocated" kind="cause" />
            <Ann msg="Allocated resource variable: statement.resultSet(), resultSet" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="612379775" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="86" ln="86" srcRngEndPos="42" srcRngStartln="86" srcRngStartPos="12" desc="_name = resultSet.getString(0)" ElType="!E" rngLn="86" thrownTypes="SQLException" throwingMethod="ResultSet.getString">
          <Anns>
            <Ann msg="ResultSet.getString() throws SQLException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1741528140" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="90" ln="90" srcRngEndPos="41" srcRngStartln="90" srcRngStartPos="10" desc="catch (SQLException exception)" ElType="." rngLn="90" />
        <ElDesc lineHash="875386708" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="91" ln="91" srcRngEndPos="94" srcRngStartln="91" srcRngStartPos="12" desc="System.err.println(&quot;Error loading data from database: &quot; + exception.getMessage());" ElType="." rngLn="91" />
        <ElDesc lineHash="14739560" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="92" ln="92" srcRngEndPos="25" srcRngStartln="92" srcRngStartPos="12" desc="return false;" ElType="." rngLn="92" />
        <ElDesc lineHash="30537853" locType="sr" srcRnghash="2046383933" locRef="48" srcRngFile="/demo/src/main/java/examples/nbank/Customer.java" srcRngEndLn="95" ln="95" srcRngEndPos="5" srcRngStartln="95" srcRngStartPos="4" desc="}" ElType=".P" rngLn="95">
          <Props>
            <Prop key="Tracked variables" val="statement.resultSet(), resultSet" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: statement.resultSet(), resultSet" kind="var" />
            <Ann msg="Point where the allocated resource is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;(amount &lt; 0) &amp;&amp; (amount > MAX_WITHDRAW)&quot; always evaluates to false" ln="13" locFile="/demo/src/main/java/examples/nbank/WithdrawalTransaction.java" ruleSAFMsg="Point where senseless condition is used" FirstElSrcRngEndPos="45" auth="John" FirstElSrcRngEndLn="12" rule="BD.PB.CC" FirstElSrcRngStartPos="11" lnHash="-1260090903" ruleSCSCMsg="Start of the path" pkg="examples.nbank" FirstElSrcRngFile="/demo/src/main/java/examples/nbank/WithdrawalTransaction.java" rule.header="Avoid conditions that always evaluate to the same value" FirstElSrcRngStartln="12" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="245675124" lang="java" locEndPos="13" urgent="true" locEndLn="14" goals="1," locStartln="13" sev="2" locRef="52" tool="jtest" lineHash="-1260090903" locType="sr" hash="-1206559161" causeLocRef="52">
      <Props />
      <ElDescList>
        <ElDesc lineHash="-895559259" locType="sr" srcRnghash="-1206559161" locRef="52" srcRngFile="/demo/src/main/java/examples/nbank/WithdrawalTransaction.java" srcRngEndLn="12" ln="12" srcRngEndPos="45" srcRngStartln="12" srcRngStartPos="11" desc="WithdrawalTransaction(int amount)" ElType=".C" rngLn="12">
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="347821559" locType="sr" srcRnghash="-251506569" locRef="42" srcRngFile="/demo/src/main/java/examples/nbank/AbstractTransaction.java" srcRngEndLn="11" ln="11" srcRngEndPos="37" srcRngStartln="11" srcRngStartPos="13" desc="isTransactionAvailable()" ElType="." rngLn="11">
          <ElDescList>
            <ElDesc lineHash="1622313272" locType="sr" srcRnghash="-251506569" locRef="42" srcRngFile="/demo/src/main/java/examples/nbank/AbstractTransaction.java" srcRngEndLn="20" ln="20" srcRngEndPos="45" srcRngStartln="20" srcRngStartPos="16" desc="BankState.isMaintenanceMode()" ElType="." rngLn="20">
              <ElDescList>
                <ElDesc lineHash="-1804607908" locType="sr" srcRnghash="2120971007" locRef="45" srcRngFile="/demo/src/main/java/examples/nbank/BankState.java" srcRngEndLn="8" ln="8" srcRngEndPos="60" srcRngStartln="8" srcRngStartPos="8" desc="String value = System.getProperty(MAINTENANCE_MODE);" ElType="." rngLn="8" />
                <ElDesc lineHash="1408222922" locType="sr" srcRnghash="2120971007" locRef="45" srcRngFile="/demo/src/main/java/examples/nbank/BankState.java" srcRngEndLn="9" ln="9" srcRngEndPos="62" srcRngStartln="9" srcRngStartPos="8" desc="if ((value == null) || (value.trim().length() == 0)) {" ElType="." rngLn="9">
                  <Anns>
                    <Ann msg="Condition evaluation: (value == null) (assuming false)" kind="condEval" />
                    <Ann msg="Condition evaluation: (value.trim().length() == 0) (assuming false)" kind="condEval" />
                  </Anns>
                </ElDesc>
                <ElDesc lineHash="589285261" locType="sr" srcRnghash="2120971007" locRef="45" srcRngFile="/demo/src/main/java/examples/nbank/BankState.java" srcRngEndLn="12" ln="12" srcRngEndPos="38" srcRngStartln="12" srcRngStartPos="8" desc="return Boolean.valueOf(value);" ElType="." rngLn="12" />
              </ElDescList>
            </ElDesc>
            <ElDesc lineHash="1622313272" locType="sr" srcRnghash="-251506569" locRef="42" srcRngFile="/demo/src/main/java/examples/nbank/AbstractTransaction.java" srcRngEndLn="20" ln="20" srcRngEndPos="46" srcRngStartln="20" srcRngStartPos="8" desc="return !BankState.isMaintenanceMode();" ElType="." rngLn="20" />
          </ElDescList>
        </ElDesc>
        <ElDesc lineHash="347821559" locType="sr" srcRnghash="-251506569" locRef="42" srcRngFile="/demo/src/main/java/examples/nbank/AbstractTransaction.java" srcRngEndLn="12" ln="11" srcRngEndPos="13" srcRngStartln="11" srcRngStartPos="8" desc="if (!isTransactionAvailable())" ElType="." rngLn="11">
          <Anns>
            <Ann msg="Condition evaluation: !isTransactionAvailable().booleanValue() (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1260090903" locType="sr" srcRnghash="-1206559161" locRef="52" srcRngFile="/demo/src/main/java/examples/nbank/WithdrawalTransaction.java" srcRngEndLn="14" ln="13" srcRngEndPos="13" srcRngStartln="13" srcRngStartPos="8" desc="if ((amount &lt; 0) &amp;&amp; (amount > MAX_WITHDRAW))" ElType=".P" rngLn="13">
          <Anns>
            <Ann msg="Condition evaluation: (amount &lt; 0) (assuming false)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="JDBC statement not closed: stmt" ln="102" locFile="/demo/src/main/java/examples/security/InputValidation.java" ruleSAFMsg="Point where the allocated resource is lost" FirstElSrcRngEndPos="48" auth="kmarczyk" FirstElSrcRngEndLn="90" rule="BD.RES.LEAKS" FirstElSrcRngStartPos="12" lnHash="30537853" ruleSCSCMsg="Point where the resource is allocated" pkg="examples.security" FirstElSrcRngFile="/demo/src/main/java/examples/security/InputValidation.java" rule.header="Ensure resources are deallocated" FirstElSrcRngStartln="90" locStartPos="4" analyzer="com.parasoft.jtest.flowanalyzer" id="951754547" lang="java" locEndPos="5" urgent="true" locEndLn="102" goals="1," locStartln="102" sev="1" locRef="54" tool="jtest" lineHash="30537853" locType="sr" hash="-1145404863" causeLocRef="54">
      <Props>
        <Prop key="Tracked variables" val="Allocated resource variable" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-271783734" locType="sr" srcRnghash="-1145404863" locRef="54" srcRngFile="/demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="83" ln="83" srcRngEndPos="30" srcRngStartln="83" srcRngStartPos="8" desc="Statement stmt = null;" ElType="." rngLn="83" />
        <ElDesc lineHash="920994605" locType="sr" srcRnghash="-1145404863" locRef="54" srcRngFile="/demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="84" ln="84" srcRngEndPos="28" srcRngStartln="84" srcRngStartPos="8" desc="ResultSet rs = null;" ElType="." rngLn="84" />
        <ElDesc lineHash="-168135453" locType="sr" srcRnghash="-1145404863" locRef="54" srcRngFile="/demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="89" ln="89" srcRngEndPos="115" srcRngStartln="89" srcRngStartPos="12" desc="String query = &quot;SELECT * FROM users WHERE username='&quot; + username + &quot;' AND password='&quot; + password + &quot;'&quot;;" ElType="." rngLn="89" />
        <ElDesc lineHash="-1686616749" locType="sr" srcRnghash="-1145404863" locRef="54" srcRngFile="/demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="90" ln="90" srcRngEndPos="48" srcRngStartln="90" srcRngStartPos="12" desc="stmt = _connection.createStatement()" ElType=".C" rngLn="90">
          <Props>
            <Prop key="Tracked variables" val="stmt" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is allocated" kind="cause" />
            <Ann msg="Allocated resource variable: stmt" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="849041673" locType="sr" srcRnghash="-1145404863" locRef="54" srcRngFile="/demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="91" ln="91" srcRngEndPos="41" srcRngStartln="91" srcRngStartPos="12" desc="rs = stmt.executeQuery(query)" ElType="!E" rngLn="91" thrownTypes="SQLException" throwingMethod="Statement.executeQuery">
          <Anns>
            <Ann msg="Statement.executeQuery() throws SQLException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-975238224" locType="sr" srcRnghash="-1145404863" locRef="54" srcRngFile="/demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="98" ln="98" srcRngEndPos="30" srcRngStartln="98" srcRngStartPos="10" desc="catch (Throwable t)" ElType="." rngLn="98" />
        <ElDesc lineHash="14739560" locType="sr" srcRnghash="-1145404863" locRef="54" srcRngFile="/demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="100" ln="100" srcRngEndPos="25" srcRngStartln="100" srcRngStartPos="12" desc="return false;" ElType="." rngLn="100" />
        <ElDesc lineHash="30537853" locType="sr" srcRnghash="-1145404863" locRef="54" srcRngFile="/demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="102" ln="102" srcRngEndPos="5" srcRngStartln="102" srcRngStartPos="4" desc="}" ElType=".P" rngLn="102">
          <Props>
            <Prop key="Tracked variables" val="stmt" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: stmt" kind="var" />
            <Ann msg="Point where the allocated resource is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="JDBC resultset not closed: stmt.resultSet(), rs" ln="102" locFile="/demo/src/main/java/examples/security/InputValidation.java" ruleSAFMsg="Point where the allocated resource is lost" FirstElSrcRngEndPos="41" auth="kmarczyk" FirstElSrcRngEndLn="91" rule="BD.RES.LEAKS" FirstElSrcRngStartPos="12" lnHash="30537853" ruleSCSCMsg="Point where the resource is allocated" pkg="examples.security" FirstElSrcRngFile="/demo/src/main/java/examples/security/InputValidation.java" rule.header="Ensure resources are deallocated" FirstElSrcRngStartln="91" locStartPos="4" analyzer="com.parasoft.jtest.flowanalyzer" id="-1605104930" lang="java" locEndPos="5" urgent="true" locEndLn="102" goals="1," locStartln="102" sev="1" locRef="54" tool="jtest" lineHash="30537853" locType="sr" hash="-1145404863" causeLocRef="54">
      <Props>
        <Prop key="Tracked variables" val="Allocated resource variable" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-271783734" locType="sr" srcRnghash="-1145404863" locRef="54" srcRngFile="/demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="83" ln="83" srcRngEndPos="30" srcRngStartln="83" srcRngStartPos="8" desc="Statement stmt = null;" ElType="." rngLn="83" />
        <ElDesc lineHash="920994605" locType="sr" srcRnghash="-1145404863" locRef="54" srcRngFile="/demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="84" ln="84" srcRngEndPos="28" srcRngStartln="84" srcRngStartPos="8" desc="ResultSet rs = null;" ElType="." rngLn="84" />
        <ElDesc lineHash="-168135453" locType="sr" srcRnghash="-1145404863" locRef="54" srcRngFile="/demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="89" ln="89" srcRngEndPos="115" srcRngStartln="89" srcRngStartPos="12" desc="String query = &quot;SELECT * FROM users WHERE username='&quot; + username + &quot;' AND password='&quot; + password + &quot;'&quot;;" ElType="." rngLn="89" />
        <ElDesc lineHash="-1686616749" locType="sr" srcRnghash="-1145404863" locRef="54" srcRngFile="/demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="90" ln="90" srcRngEndPos="48" srcRngStartln="90" srcRngStartPos="12" desc="stmt = _connection.createStatement()" ElType="." rngLn="90" />
        <ElDesc lineHash="849041673" locType="sr" srcRnghash="-1145404863" locRef="54" srcRngFile="/demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="91" ln="91" srcRngEndPos="41" srcRngStartln="91" srcRngStartPos="12" desc="rs = stmt.executeQuery(query)" ElType=".C" rngLn="91">
          <Props>
            <Prop key="Tracked variables" val="stmt.resultSet(), rs" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is allocated" kind="cause" />
            <Ann msg="Allocated resource variable: stmt.resultSet(), rs" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-846123640" locType="sr" srcRnghash="-1145404863" locRef="54" srcRngFile="/demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="92" ln="92" srcRngEndPos="28" srcRngStartln="92" srcRngStartPos="12" desc="if (rs.next()) {" ElType="." rngLn="92">
          <Anns>
            <Ann msg="Condition evaluation: rs.next() (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="14739560" locType="sr" srcRnghash="-1145404863" locRef="54" srcRngFile="/demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="97" ln="97" srcRngEndPos="25" srcRngStartln="97" srcRngStartPos="12" desc="return false;" ElType="." rngLn="97" />
        <ElDesc lineHash="30537853" locType="sr" srcRnghash="-1145404863" locRef="54" srcRngFile="/demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="102" ln="102" srcRngEndPos="5" srcRngStartln="102" srcRngStartPos="4" desc="}" ElType=".P" rngLn="102">
          <Props>
            <Prop key="Tracked variables" val="stmt.resultSet(), rs" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: stmt.resultSet(), rs" kind="var" />
            <Ann msg="Point where the allocated resource is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="JDBC statement not closed: stmt" ln="123" locFile="/demo/src/main/java/examples/security/InputValidation.java" ruleSAFMsg="Point where the allocated resource is lost" FirstElSrcRngEndPos="59" auth="kmarczyk" FirstElSrcRngEndLn="120" rule="BD.RES.LEAKS" FirstElSrcRngStartPos="12" lnHash="-813710626" ruleSCSCMsg="Point where the resource is allocated" pkg="examples.security" FirstElSrcRngFile="/demo/src/main/java/examples/security/InputValidation.java" rule.header="Ensure resources are deallocated" FirstElSrcRngStartln="120" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="81739548" lang="java" locEndPos="9" urgent="true" locEndLn="123" goals="1," locStartln="123" sev="1" locRef="54" tool="jtest" lineHash="-813710626" locType="sr" hash="-1145404863" causeLocRef="54">
      <Props>
        <Prop key="Tracked variables" val="Allocated resource variable" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="-2050969790" locType="sr" srcRnghash="-1145404863" locRef="54" srcRngFile="/demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="120" ln="120" srcRngEndPos="59" srcRngStartln="120" srcRngStartPos="12" desc="Statement stmt = _connection.createStatement();" ElType=".C" rngLn="120">
          <Props>
            <Prop key="Tracked variables" val="stmt" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is allocated" kind="cause" />
            <Ann msg="Allocated resource variable: stmt" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="351897144" locType="sr" srcRnghash="-1145404863" locRef="54" srcRngFile="/demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="121" ln="121" srcRngEndPos="104" srcRngStartln="121" srcRngStartPos="12" desc="String query = &quot;INSERT INTO invalid_logins VALUES ('&quot; + username + &quot;', '&quot; + password + &quot;')&quot;;" ElType="." rngLn="121" />
        <ElDesc lineHash="512503585" locType="sr" srcRnghash="-1145404863" locRef="54" srcRngFile="/demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="122" ln="122" srcRngEndPos="32" srcRngStartln="122" srcRngStartPos="12" desc="stmt.execute(query);" ElType="!E" rngLn="122" thrownTypes="SQLException" throwingMethod="Statement.execute">
          <Anns>
            <Ann msg="Statement.execute() throws SQLException" kind="except" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-813710626" locType="sr" srcRnghash="-1145404863" locRef="54" srcRngFile="/demo/src/main/java/examples/security/InputValidation.java" srcRngEndLn="123" ln="123" srcRngEndPos="9" srcRngStartln="123" srcRngStartPos="8" desc="}" ElType=".P" rngLn="123">
          <Props>
            <Prop key="Tracked variables" val="stmt" />
          </Props>
          <Anns>
            <Ann msg="Allocated resource variable: stmt" kind="var" />
            <Ann msg="Point where the allocated resource is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;sc&quot; may possibly be null" ln="28" locFile="/demo/src/main/java/examples/servlets/ExampleServlet.java" ruleSAFMsg="NullPointerException point" FirstElSrcRngEndPos="45" auth="kmarczyk" FirstElSrcRngEndLn="30" rule="BD.EXCEPT.NP" FirstElSrcRngStartPos="25" lnHash="997799750" ruleSCSCMsg="Source of null value" pkg="examples.servlets" FirstElSrcRngFile="/demo/src/test/java/examples/servlets/ExampleServletTest.java" rule.header="Avoid NullPointerException" FirstElSrcRngStartln="30" locStartPos="8" analyzer="com.parasoft.jtest.flowanalyzer" id="672586332" lang="java" locEndPos="53" urgent="true" locEndLn="28" goals="1," locStartln="28" sev="1" locRef="55" tool="jtest" lineHash="997799750" locType="sr" hash="-1999350871" causeLocRef="72">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc lineHash="155356831" locType="sr" srcRnghash="-78929844" locRef="72" srcRngFile="/demo/src/test/java/examples/servlets/ExampleServletTest.java" srcRngEndLn="28" ln="28" srcRngEndPos="51" srcRngStartln="28" srcRngStartPos="8" desc="ExampleServlet THIS = new ExampleServlet();" ElType="." rngLn="28" />
        <ElDesc lineHash="-1580377969" locType="sr" srcRnghash="-78929844" locRef="72" srcRngFile="/demo/src/test/java/examples/servlets/ExampleServletTest.java" srcRngEndLn="30" ln="30" srcRngEndPos="45" srcRngStartln="30" srcRngStartPos="25" desc="(ServletContext)null" ElType=".C" rngLn="30">
          <Props>
            <Prop key="Tracked variables" val="null" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: null" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="-1580377969" locType="sr" srcRnghash="-78929844" locRef="72" srcRngFile="/demo/src/test/java/examples/servlets/ExampleServletTest.java" srcRngEndLn="30" ln="30" srcRngEndPos="47" srcRngStartln="30" srcRngStartPos="12" desc="THIS.tryThis((ServletContext)null);" ElType="!" rngLn="30">
          <ElDescList>
            <ElDesc lineHash="971443945" locType="sr" srcRnghash="-1999350871" locRef="55" srcRngFile="/demo/src/main/java/examples/servlets/ExampleServlet.java" srcRngEndLn="27" ln="27" srcRngEndPos="31" srcRngStartln="27" srcRngStartPos="8" desc="String hello = &quot;hello&quot;;" ElType="." rngLn="27">
              <Props>
                <Prop key="Tracked variables" val="sc" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: sc" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc lineHash="997799750" locType="sr" srcRnghash="-1999350871" locRef="55" srcRngFile="/demo/src/main/java/examples/servlets/ExampleServlet.java" srcRngEndLn="28" ln="28" srcRngEndPos="53" srcRngStartln="28" srcRngStartPos="8" desc="String result = sc.getInitParameter(&quot;hello&quot;);" ElType=".P" rngLn="28">
              <Props>
                <Prop key="Tracked variables" val="sc" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: sc" kind="var" />
                <Ann msg="NullPointerException point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Value of &quot;pr&quot; is never used" ln="32" locFile="/demo/src/main/java/examples/servlets/ExampleServlet.java" ruleSAFMsg="Point where value is declared" FirstElSrcRngEndPos="39" auth="kmarczyk" FirstElSrcRngEndLn="32" rule="BD.PB.VOVR" FirstElSrcRngStartPos="12" lnHash="1530337033" ruleSCSCMsg="Point where value is overwritten" FirstElSrcRngFile="/demo/src/main/java/examples/servlets/ExampleServlet.java" rule.header="Avoid unused values" FirstElSrcRngStartln="32" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="1421261787" lang="java" locEndPos="39" urgent="true" locEndLn="32" goals="1," locStartln="32" sev="3" locRef="55" tool="jtest" lineHash="1530337033" locType="sr" hash="-1999350871" causeLocRef="55">
      <Props />
      <ElDescList>
        <ElDesc lineHash="1530337033" locType="sr" srcRnghash="-1999350871" locRef="55" srcRngFile="/demo/src/main/java/examples/servlets/ExampleServlet.java" srcRngEndLn="32" ln="32" srcRngEndPos="39" srcRngStartln="32" srcRngStartPos="12" desc="String pr = hello + result;" ElType="CP" rngLn="32">
          <Anns>
            <Ann msg="Point where value is overwritten" kind="cause" />
            <Ann msg="Point where value is declared" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;n > 0&quot; always evaluates to true" ln="33" locFile="/demo/src/main/java/examples/servlets/ExampleServlet.java" ruleSAFMsg="Point where senseless condition is used" FirstElSrcRngEndPos="43" auth="kmarczyk" FirstElSrcRngEndLn="26" rule="BD.PB.CC" FirstElSrcRngStartPos="16" lnHash="692340273" ruleSCSCMsg="Start of the path" pkg="examples.servlets" FirstElSrcRngFile="/demo/src/main/java/examples/servlets/ExampleServlet.java" rule.header="Avoid conditions that always evaluate to the same value" FirstElSrcRngStartln="26" locStartPos="15" analyzer="com.parasoft.jtest.flowanalyzer" id="-1359993610" lang="java" locEndPos="27" urgent="true" locEndLn="33" goals="1," locStartln="33" sev="2" locRef="55" tool="jtest" lineHash="692340273" locType="sr" hash="-1999350871" causeLocRef="55">
      <Props />
      <ElDescList>
        <ElDesc lineHash="203116546" locType="sr" srcRnghash="-1999350871" locRef="55" srcRngFile="/demo/src/main/java/examples/servlets/ExampleServlet.java" srcRngEndLn="26" ln="26" srcRngEndPos="43" srcRngStartln="26" srcRngStartPos="16" desc="tryThis(ServletContext sc)" ElType=".C" rngLn="26">
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="971443945" locType="sr" srcRnghash="-1999350871" locRef="55" srcRngFile="/demo/src/main/java/examples/servlets/ExampleServlet.java" srcRngEndLn="27" ln="27" srcRngEndPos="31" srcRngStartln="27" srcRngStartPos="8" desc="String hello = &quot;hello&quot;;" ElType="." rngLn="27" />
        <ElDesc lineHash="997799750" locType="sr" srcRnghash="-1999350871" locRef="55" srcRngFile="/demo/src/main/java/examples/servlets/ExampleServlet.java" srcRngEndLn="28" ln="28" srcRngEndPos="53" srcRngStartln="28" srcRngStartPos="8" desc="String result = sc.getInitParameter(&quot;hello&quot;);" ElType="." rngLn="28" />
        <ElDesc lineHash="1005479687" locType="sr" srcRnghash="-1999350871" locRef="55" srcRngFile="/demo/src/main/java/examples/servlets/ExampleServlet.java" srcRngEndLn="29" ln="29" srcRngEndPos="35" srcRngStartln="29" srcRngStartPos="8" desc="System.out.println(result);" ElType="." rngLn="29" />
        <ElDesc lineHash="-881802199" locType="sr" srcRnghash="-1999350871" locRef="55" srcRngFile="/demo/src/main/java/examples/servlets/ExampleServlet.java" srcRngEndLn="30" ln="30" srcRngEndPos="32" srcRngStartln="30" srcRngStartPos="8" desc="int n = result.length();" ElType="!" rngLn="30" />
        <ElDesc lineHash="-261099875" locType="sr" srcRnghash="-1999350871" locRef="55" srcRngFile="/demo/src/main/java/examples/servlets/ExampleServlet.java" srcRngEndLn="31" ln="31" srcRngEndPos="21" srcRngStartln="31" srcRngStartPos="8" desc="if (n == 0) {" ElType="." rngLn="31">
          <Anns>
            <Ann msg="Condition evaluation: (n == 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc lineHash="692340273" locType="sr" srcRnghash="-1999350871" locRef="55" srcRngFile="/demo/src/main/java/examples/servlets/ExampleServlet.java" srcRngEndLn="33" ln="33" srcRngEndPos="27" srcRngStartln="33" srcRngStartPos="15" desc="if (n > 0) {" ElType=".P" rngLn="33">
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Value of &quot;pr&quot; is never used" ln="34" locFile="/demo/src/main/java/examples/servlets/ExampleServlet.java" ruleSAFMsg="Point where value is declared" FirstElSrcRngEndPos="39" auth="kmarczyk" FirstElSrcRngEndLn="34" rule="BD.PB.VOVR" FirstElSrcRngStartPos="12" lnHash="1012570095" ruleSCSCMsg="Point where value is overwritten" FirstElSrcRngFile="/demo/src/main/java/examples/servlets/ExampleServlet.java" rule.header="Avoid unused values" FirstElSrcRngStartln="34" locStartPos="12" analyzer="com.parasoft.jtest.flowanalyzer" id="1421261787" lang="java" locEndPos="39" urgent="true" locEndLn="34" goals="1," locStartln="34" sev="3" locRef="55" tool="jtest" lineHash="1012570095" locType="sr" hash="-1999350871" causeLocRef="55">
      <Props />
      <ElDescList>
        <ElDesc lineHash="1012570095" locType="sr" srcRnghash="-1999350871" locRef="55" srcRngFile="/demo/src/main/java/examples/servlets/ExampleServlet.java" srcRngEndLn="34" ln="34" srcRngEndPos="39" srcRngStartln="34" srcRngStartPos="12" desc="String pr = result + hello;" ElType="CP" rngLn="34">
          <Anns>
            <Ann msg="Point where value is overwritten" kind="cause" />
            <Ann msg="Point where value is declared" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Value of &quot;value&quot; is never used" ln="79" locFile="/demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" ruleSAFMsg="Point where value is declared" FirstElSrcRngEndPos="54" auth="kmarczyk" FirstElSrcRngEndLn="79" rule="BD.PB.VOVR" FirstElSrcRngStartPos="16" lnHash="100329092" ruleSCSCMsg="Point where value is overwritten" FirstElSrcRngFile="/demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" rule.header="Avoid unused values" FirstElSrcRngStartln="79" locStartPos="16" analyzer="com.parasoft.jtest.flowanalyzer" id="-947807706" lang="java" locEndPos="54" urgent="true" locEndLn="79" goals="1," locStartln="79" sev="3" locRef="57" tool="jtest" lineHash="100329092" locType="sr" hash="-1581767335" causeLocRef="57">
      <Props />
      <ElDescList>
        <ElDesc lineHash="100329092" locType="sr" srcRnghash="-1581767335" locRef="57" srcRngFile="/demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" srcRngEndLn="79" ln="79" srcRngEndPos="54" srcRngStartln="79" srcRngStartPos="16" desc="int value = Integer.parseInt(command);" ElType="CP" rngLn="79">
          <Anns>
            <Ann msg="Point where value is overwritten" kind="cause" />
            <Ann msg="Point where value is declared" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
  </StdViols>

      <TestedFilesDetails>
         <Total name="Total (Suppressed)" supp="0" total="64">
            <Project id="demo" name="demo" supp="0" total="64">
               <Res name="src" supp="0" total="64">
                  <Res name="main" supp="0" total="64">
                     <Res name="java" supp="0" total="64">
                        <Res name="examples" supp="0" total="64">
                           <Res name="eval" supp="0" total="0">
                              <Res loc="/demo/src/main/java/examples/eval/Simple.java" locRef="1" locType="sr" name="Simple.java" supp="0" total="0" />
                           </Res>
                           <Res name="flowanalysis" supp="0" total="47">
                              <Res loc="/demo/src/main/java/examples/flowanalysis/AlwaysCloseGSS.java" locRef="2" locType="sr" name="AlwaysCloseGSS.java" supp="0" total="2" />
                              <Res loc="/demo/src/main/java/examples/flowanalysis/AlwaysCloseImages.java" locRef="3" locType="sr" name="AlwaysCloseImages.java" supp="0" total="2" />
                              <Res loc="/demo/src/main/java/examples/flowanalysis/AlwaysCloseLogging.java" locRef="4" locType="sr" name="AlwaysCloseLogging.java" supp="0" total="1" />
                              <Res loc="/demo/src/main/java/examples/flowanalysis/AlwaysCloseNIOChannels.java" locRef="5" locType="sr" name="AlwaysCloseNIOChannels.java" supp="0" total="5" />
                              <Res loc="/demo/src/main/java/examples/flowanalysis/AlwaysCloseRAFs.java" locRef="6" locType="sr" name="AlwaysCloseRAFs.java" supp="0" total="4" />
                              <Res loc="/demo/src/main/java/examples/flowanalysis/AlwaysCloseSockets.java" locRef="7" locType="sr" name="AlwaysCloseSockets.java" supp="0" total="3" />
                              <Res loc="/demo/src/main/java/examples/flowanalysis/AlwaysCloseXMLEncDec.java" locRef="8" locType="sr" name="AlwaysCloseXMLEncDec.java" supp="0" total="2" />
                              <Res loc="/demo/src/main/java/examples/flowanalysis/DereferenceBeforeNullCheck.java" locRef="9" locType="sr" name="DereferenceBeforeNullCheck.java" supp="0" total="0" />
                              <Res loc="/demo/src/main/java/examples/flowanalysis/DivisionByZero.java" locRef="10" locType="sr" name="DivisionByZero.java" supp="0" total="3" />
                              <Res loc="/demo/src/main/java/examples/flowanalysis/FilesInjection.java" locRef="11" locType="sr" name="FilesInjection.java" supp="0" total="1" />
                              <Res loc="/demo/src/main/java/examples/flowanalysis/IncorrectIteratorUsage.java" locRef="12" locType="sr" name="IncorrectIteratorUsage.java" supp="0" total="2" />
                              <Res loc="/demo/src/main/java/examples/flowanalysis/InefficientCollectionRemoval.java" locRef="13" locType="sr" name="InefficientCollectionRemoval.java" supp="0" total="2" />
                              <Res loc="/demo/src/main/java/examples/flowanalysis/InefficientMapRemoval.java" locRef="14" locType="sr" name="InefficientMapRemoval.java" supp="0" total="3" />
                              <Res loc="/demo/src/main/java/examples/flowanalysis/InefficientMapUsage.java" locRef="15" locType="sr" name="InefficientMapUsage.java" supp="0" total="4" />
                              <Res loc="/demo/src/main/java/examples/flowanalysis/SQLInjection.java" locRef="16" locType="sr" name="SQLInjection.java" supp="0" total="0" />
                              <Res loc="/demo/src/main/java/examples/flowanalysis/SystemInjection.java" locRef="17" locType="sr" name="SystemInjection.java" supp="0" total="1" />
                              <Res loc="/demo/src/main/java/examples/flowanalysis/UnreachableCode.java" locRef="18" locType="sr" name="UnreachableCode.java" supp="0" total="3" />
                              <Res loc="/demo/src/main/java/examples/flowanalysis/UseBeforeInConstructorInitialization.java" locRef="19" locType="sr" name="UseBeforeInConstructorInitialization.java" supp="0" total="2" />
                              <Res loc="/demo/src/main/java/examples/flowanalysis/UseBeforeInitialization.java" locRef="20" locType="sr" name="UseBeforeInitialization.java" supp="0" total="3" />
                              <Res loc="/demo/src/main/java/examples/flowanalysis/WebApplication.java" locRef="21" locType="sr" name="WebApplication.java" supp="0" total="0" />
                              <Res loc="/demo/src/main/java/examples/flowanalysis/XMLInjection.java" locRef="22" locType="sr" name="XMLInjection.java" supp="0" total="0" />
                              <Res name="np" supp="0" total="4">
                                 <Res loc="/demo/src/main/java/examples/flowanalysis/np/DatabaseObject.java" locRef="23" locType="sr" name="DatabaseObject.java" supp="0" total="0" />
                                 <Res loc="/demo/src/main/java/examples/flowanalysis/np/ExtendedNullPointer.java" locRef="24" locType="sr" name="ExtendedNullPointer.java" supp="0" total="0" />
                                 <Res loc="/demo/src/main/java/examples/flowanalysis/np/MessageFormatter.java" locRef="25" locType="sr" name="MessageFormatter.java" supp="0" total="1" />
                                 <Res loc="/demo/src/main/java/examples/flowanalysis/np/MyDictionary.java" locRef="26" locType="sr" name="MyDictionary.java" supp="0" total="1" />
                                 <Res loc="/demo/src/main/java/examples/flowanalysis/np/NullPointer.java" locRef="27" locType="sr" name="NullPointer.java" supp="0" total="2" />
                              </Res>
                           </Res>
                           <Res name="junit" supp="0" total="1">
                              <Res loc="/demo/src/main/java/examples/junit/ChoosingConstructor.java" locRef="28" locType="sr" name="ChoosingConstructor.java" supp="0" total="0" />
                              <Res loc="/demo/src/main/java/examples/junit/CustomMoney.java" locRef="29" locType="sr" name="CustomMoney.java" supp="0" total="0" />
                              <Res loc="/demo/src/main/java/examples/junit/IMoney.java" locRef="30" locType="sr" name="IMoney.java" supp="0" total="0" />
                              <Res loc="/demo/src/main/java/examples/junit/IntegerComparator.java" locRef="31" locType="sr" name="IntegerComparator.java" supp="0" total="0" />
                              <Res loc="/demo/src/main/java/examples/junit/Money.java" locRef="32" locType="sr" name="Money.java" supp="0" total="0" />
                              <Res loc="/demo/src/main/java/examples/junit/MoneyBag.java" locRef="33" locType="sr" name="MoneyBag.java" supp="0" total="1" />
                              <Res loc="/demo/src/main/java/examples/junit/NaiveStringBuilder.java" locRef="34" locType="sr" name="NaiveStringBuilder.java" supp="0" total="0" />
                              <Res loc="/demo/src/main/java/examples/junit/SimpleObjectHandler.java" locRef="35" locType="sr" name="SimpleObjectHandler.java" supp="0" total="0" />
                           </Res>
                           <Res name="metrics" supp="0" total="0">
                              <Res loc="/demo/src/main/java/examples/metrics/MetricsExample.java" locRef="36" locType="sr" name="MetricsExample.java" supp="0" total="0" />
                           </Res>
                           <Res name="mock" supp="0" total="1">
                              <Res loc="/demo/src/main/java/examples/mock/CharacterReader.java" locRef="37" locType="sr" name="CharacterReader.java" supp="0" total="0" />
                              <Res loc="/demo/src/main/java/examples/mock/ConstructorExample.java" locRef="38" locType="sr" name="ConstructorExample.java" supp="0" total="1" />
                              <Res loc="/demo/src/main/java/examples/mock/FileExample.java" locRef="39" locType="sr" name="FileExample.java" supp="0" total="0" />
                              <Res loc="/demo/src/main/java/examples/mock/Interpreter.java" locRef="40" locType="sr" name="Interpreter.java" supp="0" total="0" />
                              <Res loc="/demo/src/main/java/examples/mock/MultiSourceCharacterReader.java" locRef="41" locType="sr" name="MultiSourceCharacterReader.java" supp="0" total="0" />
                           </Res>
                           <Res name="nbank" supp="0" total="7">
                              <Res loc="/demo/src/main/java/examples/nbank/AbstractTransaction.java" locRef="42" locType="sr" name="AbstractTransaction.java" supp="0" total="0" />
                              <Res loc="/demo/src/main/java/examples/nbank/Account.java" locRef="43" locType="sr" name="Account.java" supp="0" total="2" />
                              <Res loc="/demo/src/main/java/examples/nbank/Bank.java" locRef="44" locType="sr" name="Bank.java" supp="0" total="0" />
                              <Res loc="/demo/src/main/java/examples/nbank/BankState.java" locRef="45" locType="sr" name="BankState.java" supp="0" total="0" />
                              <Res loc="/demo/src/main/java/examples/nbank/ConnectionException.java" locRef="46" locType="sr" name="ConnectionException.java" supp="0" total="0" />
                              <Res loc="/demo/src/main/java/examples/nbank/CreditCard.java" locRef="47" locType="sr" name="CreditCard.java" supp="0" total="0" />
                              <Res loc="/demo/src/main/java/examples/nbank/Customer.java" locRef="48" locType="sr" name="Customer.java" supp="0" total="4" />
                              <Res loc="/demo/src/main/java/examples/nbank/DepositTransaction.java" locRef="49" locType="sr" name="DepositTransaction.java" supp="0" total="0" />
                              <Res loc="/demo/src/main/java/examples/nbank/ITransaction.java" locRef="50" locType="sr" name="ITransaction.java" supp="0" total="0" />
                              <Res loc="/demo/src/main/java/examples/nbank/LogAccountInfo.java" locRef="51" locType="sr" name="LogAccountInfo.java" supp="0" total="0" />
                              <Res loc="/demo/src/main/java/examples/nbank/WithdrawalTransaction.java" locRef="52" locType="sr" name="WithdrawalTransaction.java" supp="0" total="1" />
                           </Res>
                           <Res name="queue" supp="0" total="0">
                              <Res loc="/demo/src/main/java/examples/queue/Queue.java" locRef="53" locType="sr" name="Queue.java" supp="0" total="0" />
                           </Res>
                           <Res name="security" supp="0" total="3">
                              <Res loc="/demo/src/main/java/examples/security/InputValidation.java" locRef="54" locType="sr" name="InputValidation.java" supp="0" total="3" />
                           </Res>
                           <Res name="servlets" supp="0" total="4">
                              <Res loc="/demo/src/main/java/examples/servlets/ExampleServlet.java" locRef="55" locType="sr" name="ExampleServlet.java" supp="0" total="4" />
                           </Res>
                           <Res name="stackmachine" supp="0" total="1">
                              <Res loc="/demo/src/main/java/examples/stackmachine/AbstractStackMachine.java" locRef="56" locType="sr" name="AbstractStackMachine.java" supp="0" total="0" />
                              <Res loc="/demo/src/main/java/examples/stackmachine/CommandLineStackMachine.java" locRef="57" locType="sr" name="CommandLineStackMachine.java" supp="0" total="1" />
                              <Res loc="/demo/src/main/java/examples/stackmachine/CustomListRenderer.java" locRef="58" locType="sr" name="CustomListRenderer.java" supp="0" total="0" />
                              <Res loc="/demo/src/main/java/examples/stackmachine/FifoStackMachine.java" locRef="59" locType="sr" name="FifoStackMachine.java" supp="0" total="0" />
                              <Res loc="/demo/src/main/java/examples/stackmachine/LifoStackMachine.java" locRef="60" locType="sr" name="LifoStackMachine.java" supp="0" total="0" />
                              <Res loc="/demo/src/main/java/examples/stackmachine/RunnableStackMachine.java" locRef="61" locType="sr" name="RunnableStackMachine.java" supp="0" total="0" />
                              <Res loc="/demo/src/main/java/examples/stackmachine/StackInterface.java" locRef="62" locType="sr" name="StackInterface.java" supp="0" total="0" />
                              <Res loc="/demo/src/main/java/examples/stackmachine/StackList.java" locRef="63" locType="sr" name="StackList.java" supp="0" total="0" />
                           </Res>
                           <Res name="suppress" supp="0" total="0">
                              <Res loc="/demo/src/main/java/examples/suppress/AllFileSuppress.java" locRef="64" locType="sr" name="AllFileSuppress.java" supp="0" total="0" />
                              <Res loc="/demo/src/main/java/examples/suppress/Example.java" locRef="65" locType="sr" name="Example.java" supp="0" total="0" />
                           </Res>
                        </Res>
                     </Res>
                  </Res>
                  <Res name="test" supp="0" total="0">
                     <Res name="java" supp="0" total="0">
                        <Res name="examples" supp="0" total="0">
                           <Res name="junit" supp="0" total="0">
                              <Res loc="/demo/src/test/java/examples/junit/MoneyBagParameterizedTest.java" locRef="66" locType="sr" name="MoneyBagParameterizedTest.java" supp="0" total="0" />
                              <Res loc="/demo/src/test/java/examples/junit/MoneyTest.java" locRef="67" locType="sr" name="MoneyTest.java" supp="0" total="0" />
                              <Res loc="/demo/src/test/java/examples/junit/NaiveStringBuilderParameterizedTest.java" locRef="68" locType="sr" name="NaiveStringBuilderParameterizedTest.java" supp="0" total="0" />
                           </Res>
                           <Res name="mock" supp="0" total="0">
                              <Res loc="/demo/src/test/java/examples/mock/ConstructorExampleTest.java" locRef="69" locType="sr" name="ConstructorExampleTest.java" supp="0" total="0" />
                              <Res loc="/demo/src/test/java/examples/mock/FileExampleTest.java" locRef="70" locType="sr" name="FileExampleTest.java" supp="0" total="0" />
                              <Res loc="/demo/src/test/java/examples/mock/InterpreterTest.java" locRef="71" locType="sr" name="InterpreterTest.java" supp="0" total="0" />
                           </Res>
                           <Res name="servlets" supp="0" total="0">
                              <Res loc="/demo/src/test/java/examples/servlets/ExampleServletTest.java" locRef="72" locType="sr" name="ExampleServletTest.java" supp="0" total="0" />
                           </Res>
                        </Res>
                     </Res>
                  </Res>
               </Res>
               <Res name="META-INF" supp="0" total="0">
                  <Res loc="/demo/META-INF/MANIFEST.MF" locRef="73" locType="sr" name="MANIFEST.MF" supp="0" total="0" />
               </Res>
            </Project>
         </Total>
      </TestedFilesDetails>
   </CodingStandards>
   <Statistics>
      
   </Statistics>
</ResultsSession>
